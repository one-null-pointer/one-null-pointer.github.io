<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>web一些基本概念</title>
    <link href="/project/2022/07/01/web%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <url>/project/2022/07/01/web%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="一、域名"><a href="#一、域名" class="headerlink" title="一、域名"></a>一、域名</h1><h3 id="1-域名"><a href="#1-域名" class="headerlink" title="1.域名"></a><strong>1.域名</strong></h3><ul><li><p>​        域名（Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识。</p><p>​       由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过<strong>网域名称系统</strong>（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串。</p></li></ul><h3 id="2-二级域名和多级域名"><a href="#2-二级域名和多级域名" class="headerlink" title="2.二级域名和多级域名"></a><strong>2.二级域名和多级域名</strong></h3><ul><li>​        一级域名相比较于二级域名基本更高，二级域名一般都是依附于一级域名之下，即二级域名是一级域名的细分层级。举个例子：如A.com是一级域名，A.B.com则是二级域名。</li></ul><h3 id="3-域名对于渗透的作用"><a href="#3-域名对于渗透的作用" class="headerlink" title="3.域名对于渗透的作用"></a><strong>3.域名对于渗透的作用</strong></h3><ul><li>​       当我们在对网页进行渗透的时候，在主域名找不到漏洞时，可以尝试其下层级的子域名，可以通过在子域名的漏洞从而延伸到主域名中。</li></ul><h3 id="4-域名注册"><a href="#4-域名注册" class="headerlink" title="4.域名注册"></a><strong>4.域名注册</strong></h3><ul><li>​       域名现有的注册机构比较多，其中比较著名的机构是万网，万网已经被阿里云收购。</li></ul><h1 id="二、域名系统"><a href="#二、域名系统" class="headerlink" title="二、域名系统"></a>二、域名系统</h1><h2 id="1-域名系统"><a href="#1-域名系统" class="headerlink" title="1.域名系统"></a><strong>1.域名系统</strong></h2><ul><li><p>​       DNS是计算机域名系统（Domain Name System 或 Domain Name Service）的缩写，它是由解析器和域名服务器组成的，作用是把域名转换成为网络可以识别的ip地址。</p><p>​        域名服务器是指保存有该网络中所有主机的域名和对应IP地址，并具有将域名转换为IP地址功能的服务器。其中域名必须对应一个IP地址，而IP地址不一定有域名。DNS就是进行域名解析的服务器。</p></li></ul><h3 id="2-HOSTS与DNS的关系"><a href="#2-HOSTS与DNS的关系" class="headerlink" title="2.HOSTS与DNS的关系"></a><strong>2.HOSTS与DNS的关系</strong></h3><ul><li><p>​       HOSTS是一个没有扩展名的系统文件，其作用是将一些常用的域名与其对应的IP地址建立一个关联的“数据库”存入电脑中，当用户在浏览器中输入一个需要登录的网址时，系统会首先在HOSTS文件中找到对应IP地址，如果没有找到，则系统会将网址提交DNS域名解析服务器进行IP地址的解析。</p><p>​        访问一个网站时，系统首先在DNS缓存读取该域名所对应的IP地址，当查找不到时就会到系统中查找hosts文件，如果还没有那么才会向DNS服务器请求一个DNS查询。</p></li></ul><h3 id="3-CDN与DNS的关系"><a href="#3-CDN与DNS的关系" class="headerlink" title="3.CDN与DNS的关系"></a><strong>3.CDN与DNS的关系</strong></h3><ul><li><p>​        CDN的全称是内容分发网络，其作用是让用户能够更加快速的得到请求的数据。它能人用户就近访问数据，从而达到快速获取的目的。</p><p>​        举个例子：现在服务器在北京，深圳的用户想要获取服务器上的数据就需要跨越一个很远的距离，这显然就比北京的用户访问北京的服务器速度要慢。但是现在我们在深圳建立一个cdn服务器，上面缓存住一些数据，深圳用户访问时先访问这个cdn服务器，如果服务器上有用户请求的数据就可以直接返回，这样速度就大大的提升了。</p></li></ul><h3 id="4-常见的DNS安全攻击"><a href="#4-常见的DNS安全攻击" class="headerlink" title="4.常见的DNS安全攻击"></a><strong>4.常见的DNS安全攻击</strong></h3><ul><li><h5 id="缓存投毒（DNS污染）"><a href="#缓存投毒（DNS污染）" class="headerlink" title="缓存投毒（DNS污染）"></a>缓存投毒（DNS污染）</h5><p>​        通常也称为域名系统投毒或DNS缓存投毒。它是利用虚假Internet地址替换掉域名系统表中的地址，进而制造破坏。当网络用户在带有该虚假地址的页面中进行搜寻，以访问某链接时，网页浏览器由于受到该虚假条目的影响而打开了不同的网页链接。在这种情况下，蠕虫、木马、浏览器劫持等恶意软件就可能会被下载到本地用户的电脑上。</p><p>​        用通俗的话描述，就是更改了缓存中某域名的地址，将其改为了自己的虚假地址，当被攻击者点开时，会转到攻击者指定的网站，从而达到攻击的目的。</p></li><li><h5 id="2）DNS劫持"><a href="#2）DNS劫持" class="headerlink" title="2）DNS劫持"></a>2）DNS劫持</h5><p>​       DNS劫持又称域名劫持，是指在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则返回假的IP地址或者什么都不做使请求失去响应。</p><p>​        其效果就是对特定的网络不能访问或访问的是假网址。这类攻击一般通过恶意软件来更改终端用户TCP/IP设置，将用户指向恶意DNS服务器，该DNS服务器会对域名进行解析，并最终指向钓鱼网站等被攻击者操控的服务器。</p></li><li><h5 id="3）域名劫持"><a href="#3）域名劫持" class="headerlink" title="3）域名劫持"></a>3）域名劫持</h5><p>​        所谓的域名劫持就是在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则直接返回假的IP地址或者什么也不做使得请求失去响应。</p><p>​        其效果就是对特定的网址不能访问或访问的是假网址。一旦您的域名被劫持，用户被引到假冒的网站进而无法正常浏览网页，用户可能被诱骗到冒牌网站进行登录等操作导致泄露隐私数据。</p></li></ul><ul><li><h5 id="4）DNS-DDOS攻击"><a href="#4）DNS-DDOS攻击" class="headerlink" title="4）DNS DDOS攻击"></a>4）DNS DDOS攻击</h5><p>​        针对DNS的DDoS攻击通过控制大批僵尸网络利用真实DNS协议栈发起大量域名查询请求，利用工具软件伪造源IP发送海量DNS查询，发送海量DNS查询报文导致网络带宽耗尽而无法传送正常DNS查询请求。发送大量非法域名查询报文引起DNS服务器持续进行迭代查询，从而达到较少的攻击流量消耗大量服务器资源的目的。</p></li><li><h5 id="5）反射式DNS放大攻击"><a href="#5）反射式DNS放大攻击" class="headerlink" title="5）反射式DNS放大攻击"></a>5）反射式DNS放大攻击</h5><p>​        DNS 反射放大攻击主要是利用 DNS 回复包比请求包大的特点，放大流量，伪造请求包的源 IP 地址为受害者 IP，将应答包的流量引入受害的服务器。</p></li></ul><h1 id="三、脚本语言"><a href="#三、脚本语言" class="headerlink" title="三、脚本语言"></a>三、脚本语言</h1><h2 id="1-语言脚本类型"><a href="#1-语言脚本类型" class="headerlink" title="1.语言脚本类型"></a><strong>1.语言脚本类型</strong></h2><ul><li>​        脚本语言又被称为扩建的语言，或者动态语言，是一种编程语言，用来控制软件应用程序，脚本通常都是以文本形式保存，只在被调用时进行解释或编译。例如：Scala、JavaScript，VBScript，ActionScript，MAXScript，ASP，JSP，PHP，SQL，Perl，Shell，python，Ruby，JavaFX，Lua，AutoIt等。</li></ul><h2 id="2-不同脚本类型与安全漏洞的关系"><a href="#2-不同脚本类型与安全漏洞的关系" class="headerlink" title="2.不同脚本类型与安全漏洞的关系"></a><strong>2.不同脚本类型与安全漏洞的关系</strong></h2><ul><li>​        不同的脚本语言的编写规则不一样，程序产生的漏洞自然也不一样（代码审计）。</li></ul><h1 id="四、后门"><a href="#四、后门" class="headerlink" title="四、后门"></a>四、后门</h1><h2 id="1-后门"><a href="#1-后门" class="headerlink" title="1.后门"></a>1.后门</h2><ul><li>​        后门程序一般是指那些绕过安全性控制而获取对程序或系统访问权的程序方法。类别：网页、线程插入、扩展、C/S后门。</li></ul><h2 id="2-后门在安全测试中的实际意义"><a href="#2-后门在安全测试中的实际意义" class="headerlink" title="2.后门在安全测试中的实际意义"></a>2.后门在安全测试中的实际意义</h2><ul><li>​        例如后门藏在网页上、软件内，悄无声息的进行攻击者想要的操作。</li></ul><h1 id="五、WEB方向"><a href="#五、WEB方向" class="headerlink" title="五、WEB方向"></a>五、WEB方向</h1><h2 id="1-web的组成架构"><a href="#1-web的组成架构" class="headerlink" title="1.web的组成架构"></a>1.web的组成架构</h2><ul><li>网站源码：分脚本类型、分应用方向</li><li>操作系统：windows、linux</li><li>中间件（搭建平台）：apache、iis、tomcat、nginx等</li><li>数据库：access、mysql、mssql、oracle、sybase、db2、postsql等</li></ul><h2 id="2-web相关安全漏洞"><a href="#2-web相关安全漏洞" class="headerlink" title="2.web相关安全漏洞"></a>2.web相关安全漏洞</h2><ul><li><p>web源码对应漏洞：</p><p>–SQL注入</p><p>–文件上传</p><p>–XSS</p><p>–代码执行</p><p>–变量覆盖</p><p>–逻辑漏洞</p><p>–反序列化</p></li><li><p>2）web中间件对应漏洞：</p><p>–未授权访问</p></li><li><p>3）web数据库对应漏洞：</p><p>–内核漏洞</p></li><li><p>4）web系统层对应漏洞：</p><p>–提权漏洞</p><p>–安全代码执行</p></li></ul><h2 id="3-相关资源"><a href="#3-相关资源" class="headerlink" title="3.相关资源"></a>3.相关资源</h2><ul><li>web安全相关地址：<a href="https://websec.readthedocs.io/zh/latest/">https://websec.readthedocs.io/zh/latest/</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
